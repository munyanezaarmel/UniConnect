"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_breezystack_lamejs_dist_lamejs_js"],{

/***/ "(app-pages-browser)/./node_modules/@breezystack/lamejs/dist/lamejs.js":
/*!*********************************************************!*\
  !*** ./node_modules/@breezystack/lamejs/dist/lamejs.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mp3Encoder: () => (/* binding */ Sr),\n/* harmony export */   WavHeader: () => (/* binding */ dr),\n/* harmony export */   \"default\": () => (/* binding */ fa)\n/* harmony export */ });\nvar fa = {};\nfunction Xa(w) {\n  return new Int8Array(w);\n}\nfunction ma(w) {\n  return new Int16Array(w);\n}\nfunction ba(w) {\n  return new Int32Array(w);\n}\nfunction ca(w) {\n  return new Float32Array(w);\n}\nfunction Ya(w) {\n  return new Float64Array(w);\n}\nfunction Sa(w) {\n  if (w.length == 1)\n    return ca(w[0]);\n  var Z = w[0];\n  w = w.slice(1);\n  for (var X = [], z = 0; z < Z; z++)\n    X.push(Sa(w));\n  return X;\n}\nfunction da(w) {\n  if (w.length == 1)\n    return ba(w[0]);\n  var Z = w[0];\n  w = w.slice(1);\n  for (var X = [], z = 0; z < Z; z++)\n    X.push(da(w));\n  return X;\n}\nfunction Aa(w) {\n  if (w.length == 1)\n    return ma(w[0]);\n  var Z = w[0];\n  w = w.slice(1);\n  for (var X = [], z = 0; z < Z; z++)\n    X.push(Aa(w));\n  return X;\n}\nfunction Ra(w) {\n  if (w.length == 1)\n    return new Array(w[0]);\n  var Z = w[0];\n  w = w.slice(1);\n  for (var X = [], z = 0; z < Z; z++)\n    X.push(Ra(w));\n  return X;\n}\nvar xa = {};\nxa.fill = function(w, Z, X, z) {\n  if (arguments.length == 2)\n    for (var u0 = 0; u0 < w.length; u0++)\n      w[u0] = arguments[1];\n  else\n    for (var u0 = Z; u0 < X; u0++)\n      w[u0] = z;\n};\nvar W1 = {};\nW1.arraycopy = function(w, Z, X, z, u0) {\n  for (var W = Z + u0; Z < W; )\n    X[z++] = w[Z++];\n};\nW1.out = {};\nW1.out.println = function(w) {\n  console.log(w);\n};\nW1.out.printf = function() {\n  console.log.apply(console, arguments);\n};\nvar se = {};\nse.SQRT2 = 1.4142135623730951;\nse.FAST_LOG10 = function(w) {\n  return Math.log10(w);\n};\nse.FAST_LOG10_X = function(w, Z) {\n  return Math.log10(w) * Z;\n};\nfunction B1(w) {\n  this.ordinal = w;\n}\nB1.short_block_allowed = new B1(0);\nB1.short_block_coupled = new B1(1);\nB1.short_block_dispensed = new B1(2);\nB1.short_block_forced = new B1(3);\nvar Ma = {};\nMa.MAX_VALUE = 34028235e31;\nfunction u1(w) {\n  this.ordinal = w;\n}\nu1.vbr_off = new u1(0);\nu1.vbr_mt = new u1(1);\nu1.vbr_rh = new u1(2);\nu1.vbr_abr = new u1(3);\nu1.vbr_mtrh = new u1(4);\nu1.vbr_default = u1.vbr_mtrh;\nvar qa = function(w) {\n}, Q0 = {\n  System: W1,\n  VbrMode: u1,\n  Float: Ma,\n  ShortBlock: B1,\n  Util: se,\n  Arrays: xa,\n  new_array_n: Ra,\n  new_byte: Xa,\n  new_double: Ya,\n  new_float: ca,\n  new_float_n: Sa,\n  new_int: ba,\n  new_int_n: da,\n  new_short: ma,\n  new_short_n: Aa,\n  assert: qa\n}, ce, De;\nfunction Da() {\n  if (De)\n    return ce;\n  De = 1;\n  var w = Q0, Z = w.System, X = w.Util, z = w.Arrays, u0 = w.new_float, W = t1();\n  function Q() {\n    var D = [\n      -0.1482523854003001,\n      32.308141959636465,\n      296.40344946382766,\n      883.1344870032432,\n      11113.947376231741,\n      1057.2713659324597,\n      305.7402417275812,\n      30.825928907280012,\n      /* 15 */\n      3.8533188138216365,\n      59.42900443849514,\n      709.5899960123345,\n      5281.91112291017,\n      -5829.66483675846,\n      -817.6293103748613,\n      -76.91656988279972,\n      -4.594269939176596,\n      0.9063471690191471,\n      0.1960342806591213,\n      -0.15466694054279598,\n      34.324387823855965,\n      301.8067566458425,\n      817.599602898885,\n      11573.795901679885,\n      1181.2520595540152,\n      321.59731579894424,\n      31.232021761053772,\n      /* 14 */\n      3.7107095756221318,\n      53.650946155329365,\n      684.167428119626,\n      5224.56624370173,\n      -6366.391851890084,\n      -908.9766368219582,\n      -89.83068876699639,\n      -5.411397422890401,\n      0.8206787908286602,\n      0.3901806440322567,\n      -0.16070888947830023,\n      36.147034243915876,\n      304.11815768187864,\n      732.7429163887613,\n      11989.60988270091,\n      1300.012278487897,\n      335.28490093152146,\n      31.48816102859945,\n      /* 13 */\n      3.373875931311736,\n      47.232241542899175,\n      652.7371796173471,\n      5132.414255594984,\n      -6909.087078780055,\n      -1001.9990371107289,\n      -103.62185754286375,\n      -6.104916304710272,\n      0.7416505462720353,\n      0.5805693545089249,\n      -0.16636367662261495,\n      37.751650073343995,\n      303.01103387567713,\n      627.9747488785183,\n      12358.763425278165,\n      1412.2779918482834,\n      346.7496836825721,\n      31.598286663170416,\n      /* 12 */\n      3.1598635433980946,\n      40.57878626349686,\n      616.1671130880391,\n      5007.833007176154,\n      -7454.040671756168,\n      -1095.7960341867115,\n      -118.24411666465777,\n      -6.818469345853504,\n      0.6681786379192989,\n      0.7653668647301797,\n      -0.1716176790982088,\n      39.11551877123304,\n      298.3413246578966,\n      503.5259106886539,\n      12679.589408408976,\n      1516.5821921214542,\n      355.9850766329023,\n      31.395241710249053,\n      /* 11 */\n      2.9164211881972335,\n      33.79716964664243,\n      574.8943997801362,\n      4853.234992253242,\n      -7997.57021486075,\n      -1189.7624067269965,\n      -133.6444792601766,\n      -7.7202770609839915,\n      0.5993769336819237,\n      0.9427934736519954,\n      -0.17645823955292173,\n      40.21879108166477,\n      289.9982036694474,\n      359.3226160751053,\n      12950.259102786438,\n      1612.1013903507662,\n      362.85067106591504,\n      31.045922092242872,\n      /* 10 */\n      2.822222032597987,\n      26.988862316190684,\n      529.8996541764288,\n      4671.371946949588,\n      -8535.899136645805,\n      -1282.5898586244496,\n      -149.58553632943463,\n      -8.643494270763135,\n      0.5345111359507916,\n      1.111140466039205,\n      -0.36174739330527045,\n      41.04429910497807,\n      277.5463268268618,\n      195.6386023135583,\n      13169.43812144731,\n      1697.6433561479398,\n      367.40983966190305,\n      30.557037410382826,\n      /* 9 */\n      2.531473372857427,\n      20.070154905927314,\n      481.50208566532336,\n      4464.970341588308,\n      -9065.36882077239,\n      -1373.62841526722,\n      -166.1660487028118,\n      -9.58289321133207,\n      0.4729647758913199,\n      1.268786568327291,\n      -0.36970682634889585,\n      41.393213350082036,\n      261.2935935556502,\n      12.935476055240873,\n      13336.131683328815,\n      1772.508612059496,\n      369.76534388639965,\n      29.751323653701338,\n      2.4023193045459172,\n      13.304795348228817,\n      430.5615775526625,\n      4237.0568611071185,\n      -9581.931701634761,\n      -1461.6913552409758,\n      -183.12733958476446,\n      -10.718010163869403,\n      0.41421356237309503,\n      /* tan(PI/8) */\n      1.414213562373095,\n      -0.37677560326535325,\n      41.619486213528496,\n      241.05423794991074,\n      -187.94665032361226,\n      13450.063605744153,\n      1836.153896465782,\n      369.4908799925761,\n      29.001847876923147,\n      /* 7 */\n      2.0714759319987186,\n      6.779591200894186,\n      377.7767837205709,\n      3990.386575512536,\n      -10081.709459700915,\n      -1545.947424837898,\n      -200.3762958015653,\n      -11.864482073055006,\n      0.3578057213145241,\n      1.546020906725474,\n      -0.3829366947518991,\n      41.1516456456653,\n      216.47684307105183,\n      -406.1569483347166,\n      13511.136535077321,\n      1887.8076599260432,\n      367.3025214564151,\n      28.136213436723654,\n      /* 6 */\n      1.913880671464418,\n      0.3829366947518991,\n      323.85365704338597,\n      3728.1472257487526,\n      -10561.233882199509,\n      -1625.2025997821418,\n      -217.62525175416,\n      -13.015432208941645,\n      0.3033466836073424,\n      1.66293922460509,\n      -0.5822628872992417,\n      40.35639251440489,\n      188.20071124269245,\n      -640.2706748618148,\n      13519.21490106562,\n      1927.6022433578062,\n      362.8197642637487,\n      26.968821921868447,\n      /* 5 */\n      1.7463817695935329,\n      -5.62650678237171,\n      269.3016715297017,\n      3453.386536448852,\n      -11016.145278780888,\n      -1698.6569643425091,\n      -234.7658734267683,\n      -14.16351421663124,\n      0.2504869601913055,\n      1.76384252869671,\n      -0.5887180101749253,\n      39.23429103868072,\n      155.76096234403798,\n      -889.2492977967378,\n      13475.470561874661,\n      1955.0535223723712,\n      356.4450994756727,\n      25.894952980042156,\n      /* 4 */\n      1.5695032905781554,\n      -11.181939564328772,\n      214.80884394039484,\n      3169.1640829158237,\n      -11443.321309975563,\n      -1765.1588461316153,\n      -251.68908574481912,\n      -15.49755935939164,\n      0.198912367379658,\n      1.847759065022573,\n      -0.7912582233652842,\n      37.39369355329111,\n      119.699486012458,\n      -1151.0956593239027,\n      13380.446257078214,\n      1970.3952110853447,\n      348.01959814116185,\n      24.731487364283044,\n      /* 3 */\n      1.3850130831637748,\n      -16.421408865300393,\n      161.05030052864092,\n      2878.3322807850063,\n      -11838.991423510031,\n      -1823.985884688674,\n      -268.2854986386903,\n      -16.81724543849939,\n      0.1483359875383474,\n      1.913880671464418,\n      -0.7960642926861912,\n      35.2322109610459,\n      80.01928065061526,\n      -1424.0212633405113,\n      13235.794061869668,\n      1973.804052543835,\n      337.9908651258184,\n      23.289159354463873,\n      1.3934255946442087,\n      -21.099669467133474,\n      108.48348407242611,\n      2583.700758091299,\n      -12199.726194855148,\n      -1874.2780658979746,\n      -284.2467154529415,\n      -18.11369784385905,\n      0.09849140335716425,\n      1.961570560806461,\n      -0.998795456205172,\n      32.56307803611191,\n      36.958364584370486,\n      -1706.075448829146,\n      13043.287458812016,\n      1965.3831106103316,\n      326.43182772364605,\n      22.175018750622293,\n      1.198638339011324,\n      -25.371248002043963,\n      57.53505923036915,\n      2288.41886619975,\n      -12522.674544337233,\n      -1914.8400385312243,\n      -299.26241273417224,\n      -19.37805630698734,\n      0.04912684976946725,\n      1.990369453344394,\n      0.035780907 * X.SQRT2 * 0.5 / 2384e-9,\n      0.017876148 * X.SQRT2 * 0.5 / 2384e-9,\n      3134727e-9 * X.SQRT2 * 0.5 / 2384e-9,\n      2457142e-9 * X.SQRT2 * 0.5 / 2384e-9,\n      971317e-9 * X.SQRT2 * 0.5 / 2384e-9,\n      218868e-9 * X.SQRT2 * 0.5 / 2384e-9,\n      101566e-9 * X.SQRT2 * 0.5 / 2384e-9,\n      13828e-9 * X.SQRT2 * 0.5 / 2384e-9,\n      12804.797818791945,\n      1945.5515939597317,\n      313.4244966442953,\n      20.801593959731544,\n      1995.1556208053692,\n      9.000838926174497,\n      -29.20218120805369\n      /* 2.384e-06/2.384e-06 */\n    ], g = 12, f0 = 36, A = [\n      [\n        2382191739347913e-28,\n        6423305872147834e-28,\n        9400849094049688e-28,\n        1122435026096556e-27,\n        1183840321267481e-27,\n        1122435026096556e-27,\n        940084909404969e-27,\n        6423305872147839e-28,\n        2382191739347918e-28,\n        5456116108943412e-27,\n        4878985199565852e-27,\n        4240448995017367e-27,\n        3559909094758252e-27,\n        2858043359288075e-27,\n        2156177623817898e-27,\n        1475637723558783e-27,\n        8371015190102974e-28,\n        2599706096327376e-28,\n        -5456116108943412e-27,\n        -4878985199565852e-27,\n        -4240448995017367e-27,\n        -3559909094758252e-27,\n        -2858043359288076e-27,\n        -2156177623817898e-27,\n        -1475637723558783e-27,\n        -8371015190102975e-28,\n        -2599706096327376e-28,\n        -2382191739347923e-28,\n        -6423305872147843e-28,\n        -9400849094049696e-28,\n        -1122435026096556e-27,\n        -1183840321267481e-27,\n        -1122435026096556e-27,\n        -9400849094049694e-28,\n        -642330587214784e-27,\n        -2382191739347918e-28\n      ],\n      [\n        2382191739347913e-28,\n        6423305872147834e-28,\n        9400849094049688e-28,\n        1122435026096556e-27,\n        1183840321267481e-27,\n        1122435026096556e-27,\n        9400849094049688e-28,\n        6423305872147841e-28,\n        2382191739347918e-28,\n        5456116108943413e-27,\n        4878985199565852e-27,\n        4240448995017367e-27,\n        3559909094758253e-27,\n        2858043359288075e-27,\n        2156177623817898e-27,\n        1475637723558782e-27,\n        8371015190102975e-28,\n        2599706096327376e-28,\n        -5461314069809755e-27,\n        -4921085770524055e-27,\n        -4343405037091838e-27,\n        -3732668368707687e-27,\n        -3093523840190885e-27,\n        -2430835727329465e-27,\n        -1734679010007751e-27,\n        -974825365660928e-27,\n        -2797435120168326e-28,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -2283748241799531e-28,\n        -4037858874020686e-28,\n        -2146547464825323e-28\n      ],\n      [\n        0.1316524975873958,\n        /* win[SHORT_TYPE] */\n        0.414213562373095,\n        0.7673269879789602,\n        1.091308501069271,\n        /* tantab_l */\n        1.303225372841206,\n        1.56968557711749,\n        1.920982126971166,\n        2.414213562373094,\n        3.171594802363212,\n        4.510708503662055,\n        7.595754112725146,\n        22.90376554843115,\n        0.984807753012208,\n        /* cx */\n        0.6427876096865394,\n        0.3420201433256688,\n        0.9396926207859084,\n        -0.1736481776669303,\n        -0.7660444431189779,\n        0.8660254037844387,\n        0.5,\n        -0.5144957554275265,\n        /* ca */\n        -0.4717319685649723,\n        -0.3133774542039019,\n        -0.1819131996109812,\n        -0.09457419252642064,\n        -0.04096558288530405,\n        -0.01419856857247115,\n        -0.003699974673760037,\n        0.8574929257125442,\n        /* cs */\n        0.8817419973177052,\n        0.9496286491027329,\n        0.9833145924917901,\n        0.9955178160675857,\n        0.9991605581781475,\n        0.999899195244447,\n        0.9999931550702802\n      ],\n      [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        2283748241799531e-28,\n        4037858874020686e-28,\n        2146547464825323e-28,\n        5461314069809755e-27,\n        4921085770524055e-27,\n        4343405037091838e-27,\n        3732668368707687e-27,\n        3093523840190885e-27,\n        2430835727329466e-27,\n        1734679010007751e-27,\n        974825365660928e-27,\n        2797435120168326e-28,\n        -5456116108943413e-27,\n        -4878985199565852e-27,\n        -4240448995017367e-27,\n        -3559909094758253e-27,\n        -2858043359288075e-27,\n        -2156177623817898e-27,\n        -1475637723558782e-27,\n        -8371015190102975e-28,\n        -2599706096327376e-28,\n        -2382191739347913e-28,\n        -6423305872147834e-28,\n        -9400849094049688e-28,\n        -1122435026096556e-27,\n        -1183840321267481e-27,\n        -1122435026096556e-27,\n        -9400849094049688e-28,\n        -6423305872147841e-28,\n        -2382191739347918e-28\n      ]\n    ], m = A[W.SHORT_TYPE], O = A[W.SHORT_TYPE], s0 = A[W.SHORT_TYPE], K = A[W.SHORT_TYPE], t0 = [\n      0,\n      1,\n      16,\n      17,\n      8,\n      9,\n      24,\n      25,\n      4,\n      5,\n      20,\n      21,\n      12,\n      13,\n      28,\n      29,\n      2,\n      3,\n      18,\n      19,\n      10,\n      11,\n      26,\n      27,\n      6,\n      7,\n      22,\n      23,\n      14,\n      15,\n      30,\n      31\n    ];\n    function U(u, d, e) {\n      for (var l = 10, M = d + 238 - 14 - 286, p = -15; p < 0; p++) {\n        var H, B, I;\n        H = D[l + -10], B = u[M + -224] * H, I = u[d + 224] * H, H = D[l + -9], B += u[M + -160] * H, I += u[d + 160] * H, H = D[l + -8], B += u[M + -96] * H, I += u[d + 96] * H, H = D[l + -7], B += u[M + -32] * H, I += u[d + 32] * H, H = D[l + -6], B += u[M + 32] * H, I += u[d + -32] * H, H = D[l + -5], B += u[M + 96] * H, I += u[d + -96] * H, H = D[l + -4], B += u[M + 160] * H, I += u[d + -160] * H, H = D[l + -3], B += u[M + 224] * H, I += u[d + -224] * H, H = D[l + -2], B += u[d + -256] * H, I -= u[M + 256] * H, H = D[l + -1], B += u[d + -192] * H, I -= u[M + 192] * H, H = D[l + 0], B += u[d + -128] * H, I -= u[M + 128] * H, H = D[l + 1], B += u[d + -64] * H, I -= u[M + 64] * H, H = D[l + 2], B += u[d + 0] * H, I -= u[M + 0] * H, H = D[l + 3], B += u[d + 64] * H, I -= u[M + -64] * H, H = D[l + 4], B += u[d + 128] * H, I -= u[M + -128] * H, H = D[l + 5], B += u[d + 192] * H, I -= u[M + -192] * H, B *= D[l + 6], H = I - B, e[30 + p * 2] = I + B, e[31 + p * 2] = D[l + 7] * H, l += 18, d--, M++;\n      }\n      {\n        var B, I, v0, b;\n        I = u[d + -16] * D[l + -10], B = u[d + -32] * D[l + -2], I += (u[d + -48] - u[d + 16]) * D[l + -9], B += u[d + -96] * D[l + -1], I += (u[d + -80] + u[d + 48]) * D[l + -8], B += u[d + -160] * D[l + 0], I += (u[d + -112] - u[d + 80]) * D[l + -7], B += u[d + -224] * D[l + 1], I += (u[d + -144] + u[d + 112]) * D[l + -6], B -= u[d + 32] * D[l + 2], I += (u[d + -176] - u[d + 144]) * D[l + -5], B -= u[d + 96] * D[l + 3], I += (u[d + -208] + u[d + 176]) * D[l + -4], B -= u[d + 160] * D[l + 4], I += (u[d + -240] - u[d + 208]) * D[l + -3], B -= u[d + 224], v0 = B - I, b = B + I, I = e[14], B = e[15] - I, e[31] = b + I, e[30] = v0 + B, e[15] = v0 - B, e[14] = b - I;\n      }\n      {\n        var a;\n        a = e[28] - e[0], e[0] += e[28], e[28] = a * D[l + -2 * 18 + 7], a = e[29] - e[1], e[1] += e[29], e[29] = a * D[l + -2 * 18 + 7], a = e[26] - e[2], e[2] += e[26], e[26] = a * D[l + -4 * 18 + 7], a = e[27] - e[3], e[3] += e[27], e[27] = a * D[l + -4 * 18 + 7], a = e[24] - e[4], e[4] += e[24], e[24] = a * D[l + -6 * 18 + 7], a = e[25] - e[5], e[5] += e[25], e[25] = a * D[l + -6 * 18 + 7], a = e[22] - e[6], e[6] += e[22], e[22] = a * X.SQRT2, a = e[23] - e[7], e[7] += e[23], e[23] = a * X.SQRT2 - e[7], e[7] -= e[6], e[22] -= e[7], e[23] -= e[22], a = e[6], e[6] = e[31] - a, e[31] = e[31] + a, a = e[7], e[7] = e[30] - a, e[30] = e[30] + a, a = e[22], e[22] = e[15] - a, e[15] = e[15] + a, a = e[23], e[23] = e[14] - a, e[14] = e[14] + a, a = e[20] - e[8], e[8] += e[20], e[20] = a * D[l + -10 * 18 + 7], a = e[21] - e[9], e[9] += e[21], e[21] = a * D[l + -10 * 18 + 7], a = e[18] - e[10], e[10] += e[18], e[18] = a * D[l + -12 * 18 + 7], a = e[19] - e[11], e[11] += e[19], e[19] = a * D[l + -12 * 18 + 7], a = e[16] - e[12], e[12] += e[16], e[16] = a * D[l + -14 * 18 + 7], a = e[17] - e[13], e[13] += e[17], e[17] = a * D[l + -14 * 18 + 7], a = -e[20] + e[24], e[20] += e[24], e[24] = a * D[l + -12 * 18 + 7], a = -e[21] + e[25], e[21] += e[25], e[25] = a * D[l + -12 * 18 + 7], a = e[4] - e[8], e[4] += e[8], e[8] = a * D[l + -12 * 18 + 7], a = e[5] - e[9], e[5] += e[9], e[9] = a * D[l + -12 * 18 + 7], a = e[0] - e[12], e[0] += e[12], e[12] = a * D[l + -4 * 18 + 7], a = e[1] - e[13], e[1] += e[13], e[13] = a * D[l + -4 * 18 + 7], a = e[16] - e[28], e[16] += e[28], e[28] = a * D[l + -4 * 18 + 7], a = -e[17] + e[29], e[17] += e[29], e[29] = a * D[l + -4 * 18 + 7], a = X.SQRT2 * (e[2] - e[10]), e[2] += e[10], e[10] = a, a = X.SQRT2 * (e[3] - e[11]), e[3] += e[11], e[11] = a, a = X.SQRT2 * (-e[18] + e[26]), e[18] += e[26], e[26] = a - e[18], a = X.SQRT2 * (-e[19] + e[27]), e[19] += e[27], e[27] = a - e[19], a = e[2], e[19] -= e[3], e[3] -= a, e[2] = e[31] - a, e[31] += a, a = e[3], e[11] -= e[19], e[18] -= a, e[3] = e[30] - a, e[30] += a, a = e[18], e[27] -= e[11], e[19] -= a, e[18] = e[15] - a, e[15] += a, a = e[19], e[10] -= a, e[19] = e[14] - a, e[14] += a, a = e[10], e[11] -= a, e[10] = e[23] - a, e[23] += a, a = e[11], e[26] -= a, e[11] = e[22] - a, e[22] += a, a = e[26], e[27] -= a, e[26] = e[7] - a, e[7] += a, a = e[27], e[27] = e[6] - a, e[6] += a, a = X.SQRT2 * (e[0] - e[4]), e[0] += e[4], e[4] = a, a = X.SQRT2 * (e[1] - e[5]), e[1] += e[5], e[5] = a, a = X.SQRT2 * (e[16] - e[20]), e[16] += e[20], e[20] = a, a = X.SQRT2 * (e[17] - e[21]), e[17] += e[21], e[21] = a, a = -X.SQRT2 * (e[8] - e[12]), e[8] += e[12], e[12] = a - e[8], a = -X.SQRT2 * (e[9] - e[13]), e[9] += e[13], e[13] = a - e[9], a = -X.SQRT2 * (e[25] - e[29]), e[25] += e[29], e[29] = a - e[25], a = -X.SQRT2 * (e[24] + e[28]), e[24] -= e[28], e[28] = a - e[24], a = e[24] - e[16], e[24] = a, a = e[20] - a, e[20] = a, a = e[28] - a, e[28] = a, a = e[25] - e[17], e[25] = a, a = e[21] - a, e[21] = a, a = e[29] - a, e[29] = a, a = e[17] - e[1], e[17] = a, a = e[9] - a, e[9] = a, a = e[25] - a, e[25] = a, a = e[5] - a, e[5] = a, a = e[21] - a, e[21] = a, a = e[13] - a, e[13] = a, a = e[29] - a, e[29] = a, a = e[1] - e[0], e[1] = a, a = e[16] - a, e[16] = a, a = e[17] - a, e[17] = a, a = e[8] - a, e[8] = a, a = e[9] - a, e[9] = a, a = e[24] - a, e[24] = a, a = e[25] - a, e[25] = a, a = e[4] - a, e[4] = a, a = e[5] - a, e[5] = a, a = e[20] - a, e[20] = a, a = e[21] - a, e[21] = a, a = e[12] - a, e[12] = a, a = e[13] - a, e[13] = a, a = e[28] - a, e[28] = a, a = e[29] - a, e[29] = a, a = e[0], e[0] += e[31], e[31] -= a, a = e[1], e[1] += e[30], e[30] -= a, a = e[16], e[16] += e[15], e[15] -= a, a = e[17], e[17] += e[14], e[14] -= a, a = e[8], e[8] += e[23], e[23] -= a, a = e[9], e[9] += e[22], e[22] -= a, a = e[24], e[24] += e[7], e[7] -= a, a = e[25], e[25] += e[6], e[6] -= a, a = e[4], e[4] += e[27], e[27] -= a, a = e[5], e[5] += e[26], e[26] -= a, a = e[20], e[20] += e[11], e[11] -= a, a = e[21], e[21] += e[10], e[10] -= a, a = e[12], e[12] += e[19], e[19] -= a, a = e[13], e[13] += e[18], e[18] -= a, a = e[28], e[28] += e[3], e[3] -= a, a = e[29], e[29] += e[2], e[2] -= a;\n      }\n    }\n    function R(u, d) {\n      for (var e = 0; e < 3; e++) {\n        var l, M, p, H, B, I;\n        H = u[d + 2 * 3] * A[W.SHORT_TYPE][0] - u[d + 5 * 3], l = u[d + 0 * 3] * A[W.SHORT_TYPE][2] - u[d + 3 * 3], M = H + l, p = H - l, H = u[d + 5 * 3] * A[W.SHORT_TYPE][0] + u[d + 2 * 3], l = u[d + 3 * 3] * A[W.SHORT_TYPE][2] + u[d + 0 * 3], B = H + l, I = -H + l, l = (u[d + 1 * 3] * A[W.SHORT_TYPE][1] - u[d + 4 * 3]) * 2069978111953089e-26, H = (u[d + 4 * 3] * A[W.SHORT_TYPE][1] + u[d + 1 * 3]) * 2069978111953089e-26, u[d + 3 * 0] = M * 190752519173728e-25 + l, u[d + 3 * 5] = -B * 190752519173728e-25 + H, p = p * 0.8660254037844387 * 1907525191737281e-26, B = B * 0.5 * 1907525191737281e-26 + H, u[d + 3 * 1] = p - B, u[d + 3 * 2] = p + B, M = M * 0.5 * 1907525191737281e-26 - l, I = I * 0.8660254037844387 * 1907525191737281e-26, u[d + 3 * 3] = M + I, u[d + 3 * 4] = M - I, d++;\n      }\n    }\n    function o(u, d, e) {\n      var l, M;\n      {\n        var p, H, B, I, v0, b, a, S;\n        p = e[17] - e[9], B = e[15] - e[11], I = e[14] - e[12], v0 = e[0] + e[8], b = e[1] + e[7], a = e[2] + e[6], S = e[3] + e[5], u[d + 17] = v0 + a - S - (b - e[4]), M = (v0 + a - S) * O[12 + 7] + (b - e[4]), l = (p - B - I) * O[12 + 6], u[d + 5] = l + M, u[d + 6] = l - M, H = (e[16] - e[10]) * O[12 + 6], b = b * O[12 + 7] + e[4], l = p * O[12 + 0] + H + B * O[12 + 1] + I * O[12 + 2], M = -v0 * O[12 + 4] + b - a * O[12 + 5] + S * O[12 + 3], u[d + 1] = l + M, u[d + 2] = l - M, l = p * O[12 + 1] - H - B * O[12 + 2] + I * O[12 + 0], M = -v0 * O[12 + 5] + b - a * O[12 + 3] + S * O[12 + 4], u[d + 9] = l + M, u[d + 10] = l - M, l = p * O[12 + 2] - H + B * O[12 + 0] - I * O[12 + 1], M = v0 * O[12 + 3] - b + a * O[12 + 4] - S * O[12 + 5], u[d + 13] = l + M, u[d + 14] = l - M;\n      }\n      {\n        var L, V, N, P, E, i, s, r;\n        L = e[8] - e[0], N = e[6] - e[2], P = e[5] - e[3], E = e[17] + e[9], i = e[16] + e[10], s = e[15] + e[11], r = e[14] + e[12], u[d + 0] = E + s + r + (i + e[13]), l = (E + s + r) * O[12 + 7] - (i + e[13]), M = (L - N + P) * O[12 + 6], u[d + 11] = l + M, u[d + 12] = l - M, V = (e[7] - e[1]) * O[12 + 6], i = e[13] - i * O[12 + 7], l = E * O[12 + 3] - i + s * O[12 + 4] + r * O[12 + 5], M = L * O[12 + 2] + V + N * O[12 + 0] + P * O[12 + 1], u[d + 3] = l + M, u[d + 4] = l - M, l = -E * O[12 + 5] + i - s * O[12 + 3] - r * O[12 + 4], M = L * O[12 + 1] + V - N * O[12 + 2] - P * O[12 + 0], u[d + 7] = l + M, u[d + 8] = l - M, l = -E * O[12 + 4] + i - s * O[12 + 5] - r * O[12 + 3], M = L * O[12 + 0] - V + N * O[12 + 1] - P * O[12 + 2], u[d + 15] = l + M, u[d + 16] = l - M;\n      }\n    }\n    this.mdct_sub48 = function(u, d, e) {\n      for (var l = d, M = 286, p = 0; p < u.channels_out; p++) {\n        for (var H = 0; H < u.mode_gr; H++) {\n          for (var B, I = u.l3_side.tt[H][p], v0 = I.xr, b = 0, a = u.sb_sample[p][1 - H], S = 0, L = 0; L < 18 / 2; L++)\n            for (U(l, M, a[S]), U(l, M + 32, a[S + 1]), S += 2, M += 64, B = 1; B < 32; B += 2)\n              a[S - 1][B] *= -1;\n          for (B = 0; B < 32; B++, b += 18) {\n            var V = I.block_type, N = u.sb_sample[p][H], P = u.sb_sample[p][1 - H];\n            if (I.mixed_block_flag != 0 && B < 2 && (V = 0), u.amp_filter[B] < 1e-12)\n              z.fill(\n                v0,\n                b + 0,\n                b + 18,\n                0\n              );\n            else {\n              if (u.amp_filter[B] < 1)\n                for (var L = 0; L < 18; L++)\n                  P[L][t0[B]] *= u.amp_filter[B];\n              if (V == W.SHORT_TYPE) {\n                for (var L = -g / 4; L < 0; L++) {\n                  var E = A[W.SHORT_TYPE][L + 3];\n                  v0[b + L * 3 + 9] = N[9 + L][t0[B]] * E - N[8 - L][t0[B]], v0[b + L * 3 + 18] = N[14 - L][t0[B]] * E + N[15 + L][t0[B]], v0[b + L * 3 + 10] = N[15 + L][t0[B]] * E - N[14 - L][t0[B]], v0[b + L * 3 + 19] = P[2 - L][t0[B]] * E + P[3 + L][t0[B]], v0[b + L * 3 + 11] = P[3 + L][t0[B]] * E - P[2 - L][t0[B]], v0[b + L * 3 + 20] = P[8 - L][t0[B]] * E + P[9 + L][t0[B]];\n                }\n                R(v0, b);\n              } else {\n                for (var i = u0(18), L = -f0 / 4; L < 0; L++) {\n                  var s, r;\n                  s = A[V][L + 27] * P[L + 9][t0[B]] + A[V][L + 36] * P[8 - L][t0[B]], r = A[V][L + 9] * N[L + 9][t0[B]] - A[V][L + 18] * N[8 - L][t0[B]], i[L + 9] = s - r * m[3 + L + 9], i[L + 18] = s * m[3 + L + 9] + r;\n                }\n                o(v0, b, i);\n              }\n            }\n            if (V != W.SHORT_TYPE && B != 0)\n              for (var L = 7; L >= 0; --L) {\n                var n, f;\n                n = v0[b + L] * s0[20 + L] + v0[b + -1 - L] * K[28 + L], f = v0[b + L] * K[28 + L] - v0[b + -1 - L] * s0[20 + L], v0[b + -1 - L] = n, v0[b + L] = f;\n              }\n          }\n        }\n        if (l = e, M = 286, u.mode_gr == 1)\n          for (var Y = 0; Y < 18; Y++)\n            Z.arraycopy(\n              u.sb_sample[p][1][Y],\n              0,\n              u.sb_sample[p][0][Y],\n              0,\n              32\n            );\n      }\n    };\n  }\n  return ce = Q, ce;\n}\nvar Se, Ge;\nfunction Ea() {\n  if (Ge)\n    return Se;\n  Ge = 1;\n  var w = t1(), Z = Q0, X = Z.System, z = Z.new_float, u0 = Z.new_float_n;\n  function W() {\n    this.l = z(w.SBMAX_l), this.s = u0([w.SBMAX_s, 3]);\n    var Q = this;\n    this.assign = function(D) {\n      X.arraycopy(D.l, 0, Q.l, 0, w.SBMAX_l);\n      for (var g = 0; g < w.SBMAX_s; g++)\n        for (var f0 = 0; f0 < 3; f0++)\n          Q.s[g][f0] = D.s[g][f0];\n    };\n  }\n  return Se = W, Se;\n}\nvar de, $e;\nfunction Ga() {\n  if ($e)\n    return de;\n  $e = 1;\n  var w = Ea();\n  function Z() {\n    this.thm = new w(), this.en = new w();\n  }\n  return de = Z, de;\n}\nfunction R1(w) {\n  var Z = w;\n  this.ordinal = function() {\n    return Z;\n  };\n}\nR1.STEREO = new R1(0);\nR1.JOINT_STEREO = new R1(1);\nR1.DUAL_CHANNEL = new R1(2);\nR1.MONO = new R1(3);\nR1.NOT_SET = new R1(4);\nvar j1 = R1, Ae, Pe;\nfunction t1() {\n  if (Pe)\n    return Ae;\n  Pe = 1;\n  var w = Q0, Z = w.System, X = w.VbrMode, z = w.new_array_n, u0 = w.new_float, W = w.new_float_n, Q = w.new_int, D = w.assert;\n  g.ENCDELAY = 576, g.POSTDELAY = 1152, g.MDCTDELAY = 48, g.FFTOFFSET = 224 + g.MDCTDELAY, g.DECDELAY = 528, g.SBLIMIT = 32, g.CBANDS = 64, g.SBPSY_l = 21, g.SBPSY_s = 12, g.SBMAX_l = 22, g.SBMAX_s = 13, g.PSFB21 = 6, g.PSFB12 = 6, g.BLKSIZE = 1024, g.HBLKSIZE = g.BLKSIZE / 2 + 1, g.BLKSIZE_s = 256, g.HBLKSIZE_s = g.BLKSIZE_s / 2 + 1, g.NORM_TYPE = 0, g.START_TYPE = 1, g.SHORT_TYPE = 2, g.STOP_TYPE = 3, g.MPG_MD_LR_LR = 0, g.MPG_MD_LR_I = 1, g.MPG_MD_MS_LR = 2, g.MPG_MD_MS_I = 3, g.fircoef = [\n    -0.0207887 * 5,\n    -0.0378413 * 5,\n    -0.0432472 * 5,\n    -0.031183 * 5,\n    779609e-23 * 5,\n    0.0467745 * 5,\n    0.10091 * 5,\n    0.151365 * 5,\n    0.187098 * 5\n  ];\n  function g() {\n    var f0 = Da(), A = Ga(), m = j1, O = g.FFTOFFSET, s0 = g.MPG_MD_MS_LR, K = null;\n    this.psy = null;\n    var t0 = null, U = null, R = null;\n    this.setModules = function(l, M, p, H) {\n      K = l, this.psy = M, t0 = M, U = H, R = p;\n    };\n    var o = new f0();\n    function u(l) {\n      var M, p;\n      if (l.ATH.useAdjust == 0) {\n        l.ATH.adjust = 1;\n        return;\n      }\n      if (p = l.loudness_sq[0][0], M = l.loudness_sq[1][0], l.channels_out == 2 ? (p += l.loudness_sq[0][1], M += l.loudness_sq[1][1]) : (p += p, M += M), l.mode_gr == 2 && (p = Math.max(p, M)), p *= 0.5, p *= l.ATH.aaSensitivityP, p > 0.03125)\n        l.ATH.adjust >= 1 ? l.ATH.adjust = 1 : l.ATH.adjust < l.ATH.adjustLimit && (l.ATH.adjust = l.ATH.adjustLimit), l.ATH.adjustLimit = 1;\n      else {\n        var H = 31.98 * p + 625e-6;\n        l.ATH.adjust >= H ? (l.ATH.adjust *= H * 0.075 + 0.925, l.ATH.adjust < H && (l.ATH.adjust = H)) : l.ATH.adjustLimit >= H ? l.ATH.adjust = H : l.ATH.adjust < l.ATH.adjustLimit && (l.ATH.adjust = l.ATH.adjustLimit), l.ATH.adjustLimit = H;\n      }\n    }\n    function d(l) {\n      var M, p;\n      for (D(0 <= l.bitrate_index && l.bitrate_index < 16), D(0 <= l.mode_ext && l.mode_ext < 4), l.bitrate_stereoMode_Hist[l.bitrate_index][4]++, l.bitrate_stereoMode_Hist[15][4]++, l.channels_out == 2 && (l.bitrate_stereoMode_Hist[l.bitrate_index][l.mode_ext]++, l.bitrate_stereoMode_Hist[15][l.mode_ext]++), M = 0; M < l.mode_gr; ++M)\n        for (p = 0; p < l.channels_out; ++p) {\n          var H = l.l3_side.tt[M][p].block_type | 0;\n          l.l3_side.tt[M][p].mixed_block_flag != 0 && (H = 4), l.bitrate_blockType_Hist[l.bitrate_index][H]++, l.bitrate_blockType_Hist[l.bitrate_index][5]++, l.bitrate_blockType_Hist[15][H]++, l.bitrate_blockType_Hist[15][5]++;\n        }\n    }\n    function e(l, M) {\n      var p = l.internal_flags, H, B;\n      if (p.lame_encode_frame_init == 0) {\n        var I, v0, b = u0(2014), a = u0(286 + 1152 + 576);\n        for (p.lame_encode_frame_init = 1, I = 0, v0 = 0; I < 286 + 576 * (1 + p.mode_gr); ++I)\n          I < 576 * p.mode_gr ? (b[I] = 0, p.channels_out == 2 && (a[I] = 0)) : (b[I] = M[0][v0], p.channels_out == 2 && (a[I] = M[1][v0]), ++v0);\n        for (B = 0; B < p.mode_gr; B++)\n          for (H = 0; H < p.channels_out; H++)\n            p.l3_side.tt[B][H].block_type = g.SHORT_TYPE;\n        o.mdct_sub48(p, b, a), D(576 >= g.FFTOFFSET), D(p.mf_size >= g.BLKSIZE + l.framesize - g.FFTOFFSET), D(p.mf_size >= 512 + l.framesize - 32);\n      }\n    }\n    this.lame_encode_mp3_frame = function(l, M, p, H, B, I) {\n      var v0, b = z([2, 2]);\n      b[0][0] = new A(), b[0][1] = new A(), b[1][0] = new A(), b[1][1] = new A();\n      var a = z([2, 2]);\n      a[0][0] = new A(), a[0][1] = new A(), a[1][0] = new A(), a[1][1] = new A();\n      var S, L = [null, null], V = l.internal_flags, N = W([2, 4]), P = [0.5, 0.5], E = [[0, 0], [0, 0]], i = [[0, 0], [0, 0]], s, r, n;\n      if (L[0] = M, L[1] = p, V.lame_encode_frame_init == 0 && e(l, L), V.padding = 0, (V.slot_lag -= V.frac_SpF) < 0 && (V.slot_lag += l.out_samplerate, V.padding = 1), V.psymodel != 0) {\n        var f, Y = [null, null], J = 0, T = Q(2);\n        for (n = 0; n < V.mode_gr; n++) {\n          for (r = 0; r < V.channels_out; r++)\n            Y[r] = L[r], J = 576 + n * 576 - g.FFTOFFSET;\n          if (l.VBR == X.vbr_mtrh || l.VBR == X.vbr_mt ? f = t0.L3psycho_anal_vbr(\n            l,\n            Y,\n            J,\n            n,\n            b,\n            a,\n            E[n],\n            i[n],\n            N[n],\n            T\n          ) : f = t0.L3psycho_anal_ns(\n            l,\n            Y,\n            J,\n            n,\n            b,\n            a,\n            E[n],\n            i[n],\n            N[n],\n            T\n          ), f != 0)\n            return -4;\n          for (l.mode == m.JOINT_STEREO && (P[n] = N[n][2] + N[n][3], P[n] > 0 && (P[n] = N[n][3] / P[n])), r = 0; r < V.channels_out; r++) {\n            var q = V.l3_side.tt[n][r];\n            q.block_type = T[r], q.mixed_block_flag = 0;\n          }\n        }\n      } else\n        for (n = 0; n < V.mode_gr; n++)\n          for (r = 0; r < V.channels_out; r++)\n            V.l3_side.tt[n][r].block_type = g.NORM_TYPE, V.l3_side.tt[n][r].mixed_block_flag = 0, i[n][r] = E[n][r] = 700;\n      if (u(V), o.mdct_sub48(V, L[0], L[1]), V.mode_ext = g.MPG_MD_LR_LR, l.force_ms)\n        V.mode_ext = g.MPG_MD_MS_LR;\n      else if (l.mode == m.JOINT_STEREO) {\n        var i0 = 0, h0 = 0;\n        for (n = 0; n < V.mode_gr; n++)\n          for (r = 0; r < V.channels_out; r++)\n            i0 += i[n][r], h0 += E[n][r];\n        if (i0 <= 1 * h0) {\n          var d0 = V.l3_side.tt[0], M0 = V.l3_side.tt[V.mode_gr - 1];\n          d0[0].block_type == d0[1].block_type && M0[0].block_type == M0[1].block_type && (V.mode_ext = g.MPG_MD_MS_LR);\n        }\n      }\n      if (V.mode_ext == s0 ? (S = a, s = i) : (S = b, s = E), l.analysis && V.pinfo != null)\n        for (n = 0; n < V.mode_gr; n++)\n          for (r = 0; r < V.channels_out; r++)\n            V.pinfo.ms_ratio[n] = V.ms_ratio[n], V.pinfo.ms_ener_ratio[n] = P[n], V.pinfo.blocktype[n][r] = V.l3_side.tt[n][r].block_type, V.pinfo.pe[n][r] = s[n][r], Z.arraycopy(\n              V.l3_side.tt[n][r].xr,\n              0,\n              V.pinfo.xr[n][r],\n              0,\n              576\n            ), V.mode_ext == s0 && (V.pinfo.ers[n][r] = V.pinfo.ers[n][r + 2], Z.arraycopy(\n              V.pinfo.energy[n][r + 2],\n              0,\n              V.pinfo.energy[n][r],\n              0,\n              V.pinfo.energy[n][r].length\n            ));\n      if (l.VBR == X.vbr_off || l.VBR == X.vbr_abr) {\n        var R0, A0;\n        for (R0 = 0; R0 < 18; R0++)\n          V.nsPsy.pefirbuf[R0] = V.nsPsy.pefirbuf[R0 + 1];\n        for (A0 = 0, n = 0; n < V.mode_gr; n++)\n          for (r = 0; r < V.channels_out; r++)\n            A0 += s[n][r];\n        for (V.nsPsy.pefirbuf[18] = A0, A0 = V.nsPsy.pefirbuf[9], R0 = 0; R0 < 9; R0++)\n          A0 += (V.nsPsy.pefirbuf[R0] + V.nsPsy.pefirbuf[18 - R0]) * g.fircoef[R0];\n        for (A0 = 670 * 5 * V.mode_gr * V.channels_out / A0, n = 0; n < V.mode_gr; n++)\n          for (r = 0; r < V.channels_out; r++)\n            s[n][r] *= A0;\n      }\n      if (V.iteration_loop.iteration_loop(l, s, P, S), K.format_bitstream(l), v0 = K.copy_buffer(V, H, B, I, 1), l.bWriteVbrTag && U.addVbrFrame(l), l.analysis && V.pinfo != null) {\n        for (r = 0; r < V.channels_out; r++) {\n          var w0;\n          for (w0 = 0; w0 < O; w0++)\n            V.pinfo.pcmdata[r][w0] = V.pinfo.pcmdata[r][w0 + l.framesize];\n          for (w0 = O; w0 < 1600; w0++)\n            V.pinfo.pcmdata[r][w0] = L[r][w0 - O];\n        }\n        R.set_frame_pinfo(l, S);\n      }\n      return d(V), v0;\n    };\n  }\n  return Ae = g, Ae;\n}\nvar Ba = Q0, Ze = Ba.Util, Ke = Ba.new_float, J0 = t1();\nfunction $a() {\n  var w = Ke(J0.BLKSIZE), Z = Ke(J0.BLKSIZE_s / 2), X = [\n    0.9238795325112867,\n    0.3826834323650898,\n    0.9951847266721969,\n    0.0980171403295606,\n    0.9996988186962042,\n    0.02454122852291229,\n    0.9999811752826011,\n    0.006135884649154475\n  ];\n  function z(W, Q, D) {\n    var g = 0, f0, A, m;\n    D <<= 1;\n    var O = Q + D;\n    f0 = 4;\n    do {\n      var s0, K, t0, U, R, o, u;\n      u = f0 >> 1, U = f0, R = f0 << 1, o = R + U, f0 = R << 1, A = Q, m = A + u;\n      do {\n        var d, e, l, M;\n        e = W[A + 0] - W[A + U], d = W[A + 0] + W[A + U], M = W[A + R] - W[A + o], l = W[A + R] + W[A + o], W[A + R] = d - l, W[A + 0] = d + l, W[A + o] = e - M, W[A + U] = e + M, e = W[m + 0] - W[m + U], d = W[m + 0] + W[m + U], M = Ze.SQRT2 * W[m + o], l = Ze.SQRT2 * W[m + R], W[m + R] = d - l, W[m + 0] = d + l, W[m + o] = e - M, W[m + U] = e + M, m += f0, A += f0;\n      } while (A < O);\n      for (K = X[g + 0], s0 = X[g + 1], t0 = 1; t0 < u; t0++) {\n        var p, H;\n        p = 1 - 2 * s0 * s0, H = 2 * s0 * K, A = Q + t0, m = Q + U - t0;\n        do {\n          var B, I, v0, d, e, b, l, a, M, S;\n          I = H * W[A + U] - p * W[m + U], B = p * W[A + U] + H * W[m + U], e = W[A + 0] - B, d = W[A + 0] + B, b = W[m + 0] - I, v0 = W[m + 0] + I, I = H * W[A + o] - p * W[m + o], B = p * W[A + o] + H * W[m + o], M = W[A + R] - B, l = W[A + R] + B, S = W[m + R] - I, a = W[m + R] + I, I = s0 * l - K * S, B = K * l + s0 * S, W[A + R] = d - B, W[A + 0] = d + B, W[m + o] = b - I, W[m + U] = b + I, I = K * a - s0 * M, B = s0 * a + K * M, W[m + R] = v0 - B, W[m + 0] = v0 + B, W[A + o] = e - I, W[A + U] = e + I, m += f0, A += f0;\n        } while (A < O);\n        p = K, K = p * X[g + 0] - s0 * X[g + 1], s0 = p * X[g + 1] + s0 * X[g + 0];\n      }\n      g += 2;\n    } while (f0 < D);\n  }\n  var u0 = [\n    0,\n    128,\n    64,\n    192,\n    32,\n    160,\n    96,\n    224,\n    16,\n    144,\n    80,\n    208,\n    48,\n    176,\n    112,\n    240,\n    8,\n    136,\n    72,\n    200,\n    40,\n    168,\n    104,\n    232,\n    24,\n    152,\n    88,\n    216,\n    56,\n    184,\n    120,\n    248,\n    4,\n    132,\n    68,\n    196,\n    36,\n    164,\n    100,\n    228,\n    20,\n    148,\n    84,\n    212,\n    52,\n    180,\n    116,\n    244,\n    12,\n    140,\n    76,\n    204,\n    44,\n    172,\n    108,\n    236,\n    28,\n    156,\n    92,\n    220,\n    60,\n    188,\n    124,\n    252,\n    2,\n    130,\n    66,\n    194,\n    34,\n    162,\n    98,\n    226,\n    18,\n    146,\n    82,\n    210,\n    50,\n    178,\n    114,\n    242,\n    10,\n    138,\n    74,\n    202,\n    42,\n    170,\n    106,\n    234,\n    26,\n    154,\n    90,\n    218,\n    58,\n    186,\n    122,\n    250,\n    6,\n    134,\n    70,\n    198,\n    38,\n    166,\n    102,\n    230,\n    22,\n    150,\n    86,\n    214,\n    54,\n    182,\n    118,\n    246,\n    14,\n    142,\n    78,\n    206,\n    46,\n    174,\n    110,\n    238,\n    30,\n    158,\n    94,\n    222,\n    62,\n    190,\n    126,\n    254\n  ];\n  this.fft_short = function(W, Q, D, g, f0) {\n    for (var A = 0; A < 3; A++) {\n      var m = J0.BLKSIZE_s / 2, O = 65535 & 576 / 3 * (A + 1), s0 = J0.BLKSIZE_s / 8 - 1;\n      do {\n        var K, t0, U, R, o, u = u0[s0 << 2] & 255;\n        K = Z[u] * g[D][f0 + u + O], o = Z[127 - u] * g[D][f0 + u + O + 128], t0 = K - o, K = K + o, U = Z[u + 64] * g[D][f0 + u + O + 64], o = Z[63 - u] * g[D][f0 + u + O + 192], R = U - o, U = U + o, m -= 4, Q[A][m + 0] = K + U, Q[A][m + 2] = K - U, Q[A][m + 1] = t0 + R, Q[A][m + 3] = t0 - R, K = Z[u + 1] * g[D][f0 + u + O + 1], o = Z[126 - u] * g[D][f0 + u + O + 129], t0 = K - o, K = K + o, U = Z[u + 65] * g[D][f0 + u + O + 65], o = Z[62 - u] * g[D][f0 + u + O + 193], R = U - o, U = U + o, Q[A][m + J0.BLKSIZE_s / 2 + 0] = K + U, Q[A][m + J0.BLKSIZE_s / 2 + 2] = K - U, Q[A][m + J0.BLKSIZE_s / 2 + 1] = t0 + R, Q[A][m + J0.BLKSIZE_s / 2 + 3] = t0 - R;\n      } while (--s0 >= 0);\n      z(Q[A], m, J0.BLKSIZE_s / 2);\n    }\n  }, this.fft_long = function(W, Q, D, g, f0) {\n    var A = J0.BLKSIZE / 8 - 1, m = J0.BLKSIZE / 2;\n    do {\n      var O, s0, K, t0, U, R = u0[A] & 255;\n      O = w[R] * g[D][f0 + R], U = w[R + 512] * g[D][f0 + R + 512], s0 = O - U, O = O + U, K = w[R + 256] * g[D][f0 + R + 256], U = w[R + 768] * g[D][f0 + R + 768], t0 = K - U, K = K + U, m -= 4, Q[m + 0] = O + K, Q[m + 2] = O - K, Q[m + 1] = s0 + t0, Q[m + 3] = s0 - t0, O = w[R + 1] * g[D][f0 + R + 1], U = w[R + 513] * g[D][f0 + R + 513], s0 = O - U, O = O + U, K = w[R + 257] * g[D][f0 + R + 257], U = w[R + 769] * g[D][f0 + R + 769], t0 = K - U, K = K + U, Q[m + J0.BLKSIZE / 2 + 0] = O + K, Q[m + J0.BLKSIZE / 2 + 2] = O - K, Q[m + J0.BLKSIZE / 2 + 1] = s0 + t0, Q[m + J0.BLKSIZE / 2 + 3] = s0 - t0;\n    } while (--A >= 0);\n    z(Q, m, J0.BLKSIZE / 2);\n  }, this.init_fft = function(W) {\n    for (var Q = 0; Q < J0.BLKSIZE; Q++)\n      w[Q] = 0.42 - 0.5 * Math.cos(2 * Math.PI * (Q + 0.5) / J0.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (Q + 0.5) / J0.BLKSIZE);\n    for (var Q = 0; Q < J0.BLKSIZE_s / 2; Q++)\n      Z[Q] = 0.5 * (1 - Math.cos(2 * Math.PI * (Q + 0.5) / J0.BLKSIZE_s));\n  };\n}\nvar Pa = $a, T1 = Q0, C1 = T1.VbrMode, Ue = T1.Float, F1 = T1.ShortBlock, n1 = T1.Util, Za = T1.Arrays, g0 = T1.new_float, m1 = T1.new_float_n, L1 = T1.new_int, C0 = T1.assert, Ka = Pa, r0 = t1();\nfunction Ua() {\n  var w = j1, Z = new Ka(), X = 2.302585092994046, z = 2, u0 = 16, W = 2, Q = 16, D = 0.34, g = 1 / (14752 * 14752) / (r0.BLKSIZE / 2), f0 = 0.01, A = 0.8, m = 0.6, O = 0.3, s0 = 3.5, K = 21, t0 = 0.2302585093;\n  function U(v) {\n    return v;\n  }\n  function R(v, h) {\n    for (var x = 0, y = 0; y < r0.BLKSIZE / 2; ++y)\n      x += v[y] * h.ATH.eql_w[y];\n    return x *= g, x;\n  }\n  function o(v, h, x, y, k, c, C, G, F, e0, $) {\n    var a0 = v.internal_flags;\n    if (F < 2)\n      Z.fft_long(a0, y[k], F, e0, $), Z.fft_short(a0, c[C], F, e0, $);\n    else if (F == 2) {\n      for (var m0 = r0.BLKSIZE - 1; m0 >= 0; --m0) {\n        var N0 = y[k + 0][m0], n0 = y[k + 1][m0];\n        y[k + 0][m0] = (N0 + n0) * n1.SQRT2 * 0.5, y[k + 1][m0] = (N0 - n0) * n1.SQRT2 * 0.5;\n      }\n      for (var L0 = 2; L0 >= 0; --L0)\n        for (var m0 = r0.BLKSIZE_s - 1; m0 >= 0; --m0) {\n          var N0 = c[C + 0][L0][m0], n0 = c[C + 1][L0][m0];\n          c[C + 0][L0][m0] = (N0 + n0) * n1.SQRT2 * 0.5, c[C + 1][L0][m0] = (N0 - n0) * n1.SQRT2 * 0.5;\n        }\n    }\n    h[0] = y[k + 0][0], h[0] *= h[0];\n    for (var m0 = r0.BLKSIZE / 2 - 1; m0 >= 0; --m0) {\n      var j = y[k + 0][r0.BLKSIZE / 2 - m0], x0 = y[k + 0][r0.BLKSIZE / 2 + m0];\n      h[r0.BLKSIZE / 2 - m0] = (j * j + x0 * x0) * 0.5;\n    }\n    for (var L0 = 2; L0 >= 0; --L0) {\n      x[L0][0] = c[C + 0][L0][0], x[L0][0] *= x[L0][0];\n      for (var m0 = r0.BLKSIZE_s / 2 - 1; m0 >= 0; --m0) {\n        var j = c[C + 0][L0][r0.BLKSIZE_s / 2 - m0], x0 = c[C + 0][L0][r0.BLKSIZE_s / 2 + m0];\n        x[L0][r0.BLKSIZE_s / 2 - m0] = (j * j + x0 * x0) * 0.5;\n      }\n    }\n    {\n      for (var k0 = 0, m0 = 11; m0 < r0.HBLKSIZE; m0++)\n        k0 += h[m0];\n      a0.tot_ener[F] = k0;\n    }\n    if (v.analysis) {\n      for (var m0 = 0; m0 < r0.HBLKSIZE; m0++)\n        a0.pinfo.energy[G][F][m0] = a0.pinfo.energy_save[F][m0], a0.pinfo.energy_save[F][m0] = h[m0];\n      a0.pinfo.pe[G][F] = a0.pe[F];\n    }\n    v.athaa_loudapprox == 2 && F < 2 && (a0.loudness_sq[G][F] = a0.loudness_sq_save[F], a0.loudness_sq_save[F] = R(h, a0));\n  }\n  var u = 8, d = 23, e = 15, l, M, p, H = [\n    1,\n    0.79433,\n    0.63096,\n    0.63096,\n    0.63096,\n    0.63096,\n    0.63096,\n    0.25119,\n    0.11749\n  ];\n  function B() {\n    l = Math.pow(10, (u + 1) / 16), M = Math.pow(10, (d + 1) / 16), p = Math.pow(10, e / 10);\n  }\n  var I = [\n    3.3246 * 3.3246,\n    3.23837 * 3.23837,\n    3.15437 * 3.15437,\n    3.00412 * 3.00412,\n    2.86103 * 2.86103,\n    2.65407 * 2.65407,\n    2.46209 * 2.46209,\n    2.284 * 2.284,\n    2.11879 * 2.11879,\n    1.96552 * 1.96552,\n    1.82335 * 1.82335,\n    1.69146 * 1.69146,\n    1.56911 * 1.56911,\n    1.46658 * 1.46658,\n    1.37074 * 1.37074,\n    1.31036 * 1.31036,\n    1.25264 * 1.25264,\n    1.20648 * 1.20648,\n    1.16203 * 1.16203,\n    1.12765 * 1.12765,\n    1.09428 * 1.09428,\n    1.0659 * 1.0659,\n    1.03826 * 1.03826,\n    1.01895 * 1.01895,\n    1\n  ], v0 = [\n    1.33352 * 1.33352,\n    1.35879 * 1.35879,\n    1.38454 * 1.38454,\n    1.39497 * 1.39497,\n    1.40548 * 1.40548,\n    1.3537 * 1.3537,\n    1.30382 * 1.30382,\n    1.22321 * 1.22321,\n    1.14758 * 1.14758,\n    1\n  ], b = [\n    2.35364 * 2.35364,\n    2.29259 * 2.29259,\n    2.23313 * 2.23313,\n    2.12675 * 2.12675,\n    2.02545 * 2.02545,\n    1.87894 * 1.87894,\n    1.74303 * 1.74303,\n    1.61695 * 1.61695,\n    1.49999 * 1.49999,\n    1.39148 * 1.39148,\n    1.29083 * 1.29083,\n    1.19746 * 1.19746,\n    1.11084 * 1.11084,\n    1.03826 * 1.03826\n  ];\n  function a(v, h, x, y, k, c) {\n    var C;\n    if (h > v)\n      if (h < v * M)\n        C = h / v;\n      else\n        return v + h;\n    else {\n      if (v >= h * M)\n        return v + h;\n      C = v / h;\n    }\n    if (v += h, y + 3 <= 3 + 3) {\n      if (C >= l)\n        return v;\n      var G = 0 | n1.FAST_LOG10_X(C, 16);\n      return v * v0[G];\n    }\n    var G = 0 | n1.FAST_LOG10_X(C, 16);\n    if (c != 0 ? h = k.ATH.cb_s[x] * k.ATH.adjust : h = k.ATH.cb_l[x] * k.ATH.adjust, v < p * h) {\n      if (v > h) {\n        var F, e0;\n        return F = 1, G <= 13 && (F = b[G]), e0 = n1.FAST_LOG10_X(v / h, 10 / 15), v * ((I[G] - F) * e0 + F);\n      }\n      return G > 13 ? v : v * b[G];\n    }\n    return v * I[G];\n  }\n  var S = [\n    1.33352 * 1.33352,\n    1.35879 * 1.35879,\n    1.38454 * 1.38454,\n    1.39497 * 1.39497,\n    1.40548 * 1.40548,\n    1.3537 * 1.3537,\n    1.30382 * 1.30382,\n    1.22321 * 1.22321,\n    1.14758 * 1.14758,\n    1\n  ];\n  function L(v, h, x) {\n    var y;\n    if (v < 0 && (v = 0), h < 0 && (h = 0), v <= 0)\n      return h;\n    if (h <= 0)\n      return v;\n    if (h > v ? y = h / v : y = v / h, -2 <= x && x <= 2) {\n      if (y >= l)\n        return v + h;\n      var k = 0 | n1.FAST_LOG10_X(y, 16);\n      return (v + h) * S[k];\n    }\n    return y < M ? v + h : (v < h && (v = h), v);\n  }\n  function V(v, h) {\n    var x = v.internal_flags;\n    if (x.channels_out > 1) {\n      for (var y = 0; y < r0.SBMAX_l; y++) {\n        var k = x.thm[0].l[y], c = x.thm[1].l[y];\n        x.thm[0].l[y] += c * h, x.thm[1].l[y] += k * h;\n      }\n      for (var y = 0; y < r0.SBMAX_s; y++)\n        for (var C = 0; C < 3; C++) {\n          var k = x.thm[0].s[y][C], c = x.thm[1].s[y][C];\n          x.thm[0].s[y][C] += c * h, x.thm[1].s[y][C] += k * h;\n        }\n    }\n  }\n  function N(v) {\n    for (var h = 0; h < r0.SBMAX_l; h++)\n      if (!(v.thm[0].l[h] > 1.58 * v.thm[1].l[h] || v.thm[1].l[h] > 1.58 * v.thm[0].l[h])) {\n        var x = v.mld_l[h] * v.en[3].l[h], y = Math.max(\n          v.thm[2].l[h],\n          Math.min(v.thm[3].l[h], x)\n        );\n        x = v.mld_l[h] * v.en[2].l[h];\n        var k = Math.max(\n          v.thm[3].l[h],\n          Math.min(v.thm[2].l[h], x)\n        );\n        v.thm[2].l[h] = y, v.thm[3].l[h] = k;\n      }\n    for (var h = 0; h < r0.SBMAX_s; h++)\n      for (var c = 0; c < 3; c++)\n        if (!(v.thm[0].s[h][c] > 1.58 * v.thm[1].s[h][c] || v.thm[1].s[h][c] > 1.58 * v.thm[0].s[h][c])) {\n          var x = v.mld_s[h] * v.en[3].s[h][c], y = Math.max(\n            v.thm[2].s[h][c],\n            Math.min(v.thm[3].s[h][c], x)\n          );\n          x = v.mld_s[h] * v.en[2].s[h][c];\n          var k = Math.max(\n            v.thm[3].s[h][c],\n            Math.min(v.thm[2].s[h][c], x)\n          );\n          v.thm[2].s[h][c] = y, v.thm[3].s[h][c] = k;\n        }\n  }\n  function P(v, h, x) {\n    var y = h, k = Math.pow(10, x);\n    h *= 2, y *= 2;\n    for (var c = 0; c < r0.SBMAX_l; c++) {\n      var C, G, F, e0;\n      if (e0 = v.ATH.cb_l[v.bm_l[c]] * k, C = Math.min(\n        Math.max(v.thm[0].l[c], e0),\n        Math.max(v.thm[1].l[c], e0)\n      ), G = Math.max(v.thm[2].l[c], e0), F = Math.max(v.thm[3].l[c], e0), C * h < G + F) {\n        var $ = C * y / (G + F);\n        G *= $, F *= $;\n      }\n      v.thm[2].l[c] = Math.min(G, v.thm[2].l[c]), v.thm[3].l[c] = Math.min(F, v.thm[3].l[c]);\n    }\n    k *= r0.BLKSIZE_s / r0.BLKSIZE;\n    for (var c = 0; c < r0.SBMAX_s; c++)\n      for (var a0 = 0; a0 < 3; a0++) {\n        var C, G, F, e0;\n        if (e0 = v.ATH.cb_s[v.bm_s[c]] * k, C = Math.min(\n          Math.max(v.thm[0].s[c][a0], e0),\n          Math.max(v.thm[1].s[c][a0], e0)\n        ), G = Math.max(v.thm[2].s[c][a0], e0), F = Math.max(v.thm[3].s[c][a0], e0), C * h < G + F) {\n          var $ = C * h / (G + F);\n          G *= $, F *= $;\n        }\n        v.thm[2].s[c][a0] = Math.min(\n          v.thm[2].s[c][a0],\n          G\n        ), v.thm[3].s[c][a0] = Math.min(\n          v.thm[3].s[c][a0],\n          F\n        );\n      }\n  }\n  function E(v, h, x, y, k) {\n    var c, C, G = 0, F = 0;\n    for (c = C = 0; c < r0.SBMAX_s; ++C, ++c) {\n      for (var e0 = v.bo_s[c], $ = v.npart_s, a0 = e0 < $ ? e0 : $; C < a0; )\n        C0(h[C] >= 0), C0(x[C] >= 0), G += h[C], F += x[C], C++;\n      if (v.en[y].s[c][k] = G, v.thm[y].s[c][k] = F, C >= $) {\n        ++c;\n        break;\n      }\n      C0(h[C] >= 0), C0(x[C] >= 0);\n      {\n        var m0 = v.PSY.bo_s_weight[c], N0 = 1 - m0;\n        G = m0 * h[C], F = m0 * x[C], v.en[y].s[c][k] += G, v.thm[y].s[c][k] += F, G = N0 * h[C], F = N0 * x[C];\n      }\n    }\n    for (; c < r0.SBMAX_s; ++c)\n      v.en[y].s[c][k] = 0, v.thm[y].s[c][k] = 0;\n  }\n  function i(v, h, x, y) {\n    var k, c, C = 0, G = 0;\n    for (k = c = 0; k < r0.SBMAX_l; ++c, ++k) {\n      for (var F = v.bo_l[k], e0 = v.npart_l, $ = F < e0 ? F : e0; c < $; )\n        C0(h[c] >= 0), C0(x[c] >= 0), C += h[c], G += x[c], c++;\n      if (v.en[y].l[k] = C, v.thm[y].l[k] = G, c >= e0) {\n        ++k;\n        break;\n      }\n      C0(h[c] >= 0), C0(x[c] >= 0);\n      {\n        var a0 = v.PSY.bo_l_weight[k], m0 = 1 - a0;\n        C = a0 * h[c], G = a0 * x[c], v.en[y].l[k] += C, v.thm[y].l[k] += G, C = m0 * h[c], G = m0 * x[c];\n      }\n    }\n    for (; k < r0.SBMAX_l; ++k)\n      v.en[y].l[k] = 0, v.thm[y].l[k] = 0;\n  }\n  function s(v, h, x, y, k, c) {\n    var C = v.internal_flags, G, F;\n    for (F = G = 0; F < C.npart_s; ++F) {\n      for (var e0 = 0, $ = C.numlines_s[F], a0 = 0; a0 < $; ++a0, ++G) {\n        var m0 = h[c][G];\n        e0 += m0;\n      }\n      x[F] = e0;\n    }\n    for (C0(F == C.npart_s), G = F = 0; F < C.npart_s; F++) {\n      var N0 = C.s3ind_s[F][0], n0 = C.s3_ss[G++] * x[N0];\n      for (++N0; N0 <= C.s3ind_s[F][1]; )\n        n0 += C.s3_ss[G] * x[N0], ++G, ++N0;\n      {\n        var L0 = W * C.nb_s1[k][F];\n        y[F] = Math.min(n0, L0);\n      }\n      if (C.blocktype_old[k & 1] == r0.SHORT_TYPE) {\n        var L0 = Q * C.nb_s2[k][F], j = y[F];\n        y[F] = Math.min(L0, j);\n      }\n      C.nb_s2[k][F] = C.nb_s1[k][F], C.nb_s1[k][F] = n0, C0(y[F] >= 0);\n    }\n    for (; F <= r0.CBANDS; ++F)\n      x[F] = 0, y[F] = 0;\n  }\n  function r(v, h, x, y) {\n    var k = v.internal_flags;\n    v.short_blocks == F1.short_block_coupled && !(h[0] != 0 && h[1] != 0) && (h[0] = h[1] = 0);\n    for (var c = 0; c < k.channels_out; c++)\n      y[c] = r0.NORM_TYPE, v.short_blocks == F1.short_block_dispensed && (h[c] = 1), v.short_blocks == F1.short_block_forced && (h[c] = 0), h[c] != 0 ? (C0(k.blocktype_old[c] != r0.START_TYPE), k.blocktype_old[c] == r0.SHORT_TYPE && (y[c] = r0.STOP_TYPE)) : (y[c] = r0.SHORT_TYPE, k.blocktype_old[c] == r0.NORM_TYPE && (k.blocktype_old[c] = r0.START_TYPE), k.blocktype_old[c] == r0.STOP_TYPE && (k.blocktype_old[c] = r0.SHORT_TYPE)), x[c] = k.blocktype_old[c], k.blocktype_old[c] = y[c];\n  }\n  function n(v, h, x) {\n    return x >= 1 ? v : x <= 0 ? h : h > 0 ? Math.pow(v / h, x) * h : 0;\n  }\n  var f = [\n    11.8,\n    13.6,\n    17.2,\n    32,\n    46.5,\n    51.3,\n    57.5,\n    67.1,\n    71.5,\n    84.6,\n    97.6,\n    130\n    /* 255.8 */\n  ];\n  function Y(v, h) {\n    for (var x = 309.07, y = 0; y < r0.SBMAX_s - 1; y++)\n      for (var k = 0; k < 3; k++) {\n        var c = v.thm.s[y][k];\n        if (c > 0) {\n          var C = c * h, G = v.en.s[y][k];\n          G > C && (G > C * 1e10 ? x += f[y] * (10 * X) : x += f[y] * n1.FAST_LOG10(G / C));\n        }\n      }\n    return x;\n  }\n  var J = [\n    6.8,\n    5.8,\n    5.8,\n    6.4,\n    6.5,\n    9.9,\n    12.1,\n    14.4,\n    15,\n    18.9,\n    21.6,\n    26.9,\n    34.2,\n    40.2,\n    46.8,\n    56.5,\n    60.7,\n    73.9,\n    85.7,\n    93.4,\n    126.1\n    /* 241.3 */\n  ];\n  function T(v, h) {\n    for (var x = 281.0575, y = 0; y < r0.SBMAX_l - 1; y++) {\n      var k = v.thm.l[y];\n      if (k > 0) {\n        var c = k * h, C = v.en.l[y];\n        C > c && (C > c * 1e10 ? x += J[y] * (10 * X) : x += J[y] * n1.FAST_LOG10(C / c));\n      }\n    }\n    return x;\n  }\n  function q(v, h, x, y, k) {\n    var c, C;\n    for (c = C = 0; c < v.npart_l; ++c) {\n      var G = 0, F = 0, e0;\n      for (e0 = 0; e0 < v.numlines_l[c]; ++e0, ++C) {\n        var $ = h[C];\n        G += $, F < $ && (F = $);\n      }\n      x[c] = G, y[c] = F, k[c] = G * v.rnumlines_l[c], C0(v.rnumlines_l[c] >= 0), C0(x[c] >= 0), C0(y[c] >= 0), C0(k[c] >= 0);\n    }\n  }\n  function i0(v, h, x, y) {\n    var k = H.length - 1, c = 0, C = x[c] + x[c + 1];\n    if (C > 0) {\n      var G = h[c];\n      G < h[c + 1] && (G = h[c + 1]), C0(v.numlines_l[c] + v.numlines_l[c + 1] - 1 > 0), C = 20 * (G * 2 - C) / (C * (v.numlines_l[c] + v.numlines_l[c + 1] - 1));\n      var F = 0 | C;\n      F > k && (F = k), y[c] = F;\n    } else\n      y[c] = 0;\n    for (c = 1; c < v.npart_l - 1; c++)\n      if (C = x[c - 1] + x[c] + x[c + 1], C > 0) {\n        var G = h[c - 1];\n        G < h[c] && (G = h[c]), G < h[c + 1] && (G = h[c + 1]), C0(v.numlines_l[c - 1] + v.numlines_l[c] + v.numlines_l[c + 1] - 1 > 0), C = 20 * (G * 3 - C) / (C * (v.numlines_l[c - 1] + v.numlines_l[c] + v.numlines_l[c + 1] - 1));\n        var F = 0 | C;\n        F > k && (F = k), y[c] = F;\n      } else\n        y[c] = 0;\n    if (C0(c == v.npart_l - 1), C = x[c - 1] + x[c], C > 0) {\n      var G = h[c - 1];\n      G < h[c] && (G = h[c]), C0(v.numlines_l[c - 1] + v.numlines_l[c] - 1 > 0), C = 20 * (G * 2 - C) / (C * (v.numlines_l[c - 1] + v.numlines_l[c] - 1));\n      var F = 0 | C;\n      F > k && (F = k), y[c] = F;\n    } else\n      y[c] = 0;\n    C0(c == v.npart_l - 1);\n  }\n  var h0 = [\n    -865163e-23 * 2,\n    -851586e-8 * 2,\n    -674764e-23 * 2,\n    0.0209036 * 2,\n    -336639e-22 * 2,\n    -0.0438162 * 2,\n    -154175e-22 * 2,\n    0.0931738 * 2,\n    -552212e-22 * 2,\n    -0.313819 * 2\n  ];\n  this.L3psycho_anal_ns = function(v, h, x, y, k, c, C, G, F, e0) {\n    var $ = v.internal_flags, a0 = m1([2, r0.BLKSIZE]), m0 = m1([2, 3, r0.BLKSIZE_s]), N0 = g0(r0.CBANDS + 1), n0 = g0(r0.CBANDS + 1), L0 = g0(r0.CBANDS + 2), j = L1(2), x0 = L1(2), k0, _0, B0, l0, p0, P0, c0, O0, X0 = m1([2, 576]), Z0, v1 = L1(r0.CBANDS + 2), z0 = L1(r0.CBANDS + 2);\n    for (Za.fill(z0, 0), k0 = $.channels_out, v.mode == w.JOINT_STEREO && (k0 = 4), v.VBR == C1.vbr_off ? Z0 = $.ResvMax == 0 ? 0 : $.ResvSize / $.ResvMax * 0.5 : v.VBR == C1.vbr_rh || v.VBR == C1.vbr_mtrh || v.VBR == C1.vbr_mt ? Z0 = 0.6 : Z0 = 1, _0 = 0; _0 < $.channels_out; _0++) {\n      var K0 = h[_0], s1 = x + 576 - 350 - K + 192;\n      for (l0 = 0; l0 < 576; l0++) {\n        var o1, h1;\n        for (o1 = K0[s1 + l0 + 10], h1 = 0, p0 = 0; p0 < (K - 1) / 2 - 1; p0 += 2)\n          o1 += h0[p0] * (K0[s1 + l0 + p0] + K0[s1 + l0 + K - p0]), h1 += h0[p0 + 1] * (K0[s1 + l0 + p0 + 1] + K0[s1 + l0 + K - p0 - 1]);\n        X0[_0][l0] = o1 + h1;\n      }\n      k[y][_0].en.assign($.en[_0]), k[y][_0].thm.assign($.thm[_0]), k0 > 2 && (c[y][_0].en.assign($.en[_0 + 2]), c[y][_0].thm.assign($.thm[_0 + 2]));\n    }\n    for (_0 = 0; _0 < k0; _0++) {\n      var c1, S1, r1 = g0(12), x1 = [0, 0, 0, 0], O1 = g0(12), le = 1, Ce, Fe = g0(r0.CBANDS), ke = g0(r0.CBANDS), U0 = [0, 0, 0, 0], Xe = g0(r0.HBLKSIZE), Ye = m1([3, r0.HBLKSIZE_s]);\n      for (C0($.npart_s <= r0.CBANDS), C0($.npart_l <= r0.CBANDS), l0 = 0; l0 < 3; l0++)\n        r1[l0] = $.nsPsy.last_en_subshort[_0][l0 + 6], C0($.nsPsy.last_en_subshort[_0][l0 + 4] > 0), O1[l0] = r1[l0] / $.nsPsy.last_en_subshort[_0][l0 + 4], x1[0] += r1[l0];\n      if (_0 == 2)\n        for (l0 = 0; l0 < 576; l0++) {\n          var ve, oe;\n          ve = X0[0][l0], oe = X0[1][l0], X0[0][l0] = ve + oe, X0[1][l0] = ve - oe;\n        }\n      {\n        var qe = X0[_0 & 1], G1 = 0;\n        for (l0 = 0; l0 < 9; l0++) {\n          for (var ka = G1 + 64, a1 = 1; G1 < ka; G1++)\n            a1 < Math.abs(qe[G1]) && (a1 = Math.abs(qe[G1]));\n          $.nsPsy.last_en_subshort[_0][l0] = r1[l0 + 3] = a1, x1[1 + l0 / 3] += a1, a1 > r1[l0 + 3 - 2] ? (C0(r1[l0 + 3 - 2] > 0), a1 = a1 / r1[l0 + 3 - 2]) : r1[l0 + 3 - 2] > a1 * 10 ? a1 = r1[l0 + 3 - 2] / (a1 * 10) : a1 = 0, O1[l0 + 3] = a1;\n        }\n      }\n      if (v.analysis) {\n        var he = O1[0];\n        for (l0 = 1; l0 < 12; l0++)\n          he < O1[l0] && (he = O1[l0]);\n        $.pinfo.ers[y][_0] = $.pinfo.ers_save[_0], $.pinfo.ers_save[_0] = he;\n      }\n      for (Ce = _0 == 3 ? $.nsPsy.attackthre_s : $.nsPsy.attackthre, l0 = 0; l0 < 12; l0++)\n        U0[l0 / 3] == 0 && O1[l0] > Ce && (U0[l0 / 3] = l0 % 3 + 1);\n      for (l0 = 1; l0 < 4; l0++) {\n        var ue;\n        x1[l0 - 1] > x1[l0] ? (C0(x1[l0] > 0), ue = x1[l0 - 1] / x1[l0]) : (C0(x1[l0 - 1] > 0), ue = x1[l0] / x1[l0 - 1]), ue < 1.7 && (U0[l0] = 0, l0 == 1 && (U0[0] = 0));\n      }\n      for (U0[0] != 0 && $.nsPsy.lastAttacks[_0] != 0 && (U0[0] = 0), ($.nsPsy.lastAttacks[_0] == 3 || U0[0] + U0[1] + U0[2] + U0[3] != 0) && (le = 0, U0[1] != 0 && U0[0] != 0 && (U0[1] = 0), U0[2] != 0 && U0[1] != 0 && (U0[2] = 0), U0[3] != 0 && U0[2] != 0 && (U0[3] = 0)), _0 < 2 ? x0[_0] = le : le == 0 && (x0[0] = x0[1] = 0), F[_0] = $.tot_ener[_0], S1 = m0, c1 = a0, o(\n        v,\n        Xe,\n        Ye,\n        c1,\n        _0 & 1,\n        S1,\n        _0 & 1,\n        y,\n        _0,\n        h,\n        x\n      ), q($, Xe, N0, Fe, ke), i0($, Fe, ke, v1), O0 = 0; O0 < 3; O0++) {\n        var fe, i1;\n        for (s(v, Ye, n0, L0, _0, O0), E($, n0, L0, _0, O0), c0 = 0; c0 < r0.SBMAX_s; c0++) {\n          if (i1 = $.thm[_0].s[c0][O0], i1 *= A, U0[O0] >= 2 || U0[O0 + 1] == 1) {\n            var $1 = O0 != 0 ? O0 - 1 : 2, a1 = n(\n              $.thm[_0].s[c0][$1],\n              i1,\n              m * Z0\n            );\n            i1 = Math.min(i1, a1);\n          }\n          if (U0[O0] == 1) {\n            var $1 = O0 != 0 ? O0 - 1 : 2, a1 = n(\n              $.thm[_0].s[c0][$1],\n              i1,\n              O * Z0\n            );\n            i1 = Math.min(i1, a1);\n          } else if (O0 != 0 && U0[O0 - 1] == 3 || O0 == 0 && $.nsPsy.lastAttacks[_0] == 3) {\n            var $1 = O0 != 2 ? O0 + 1 : 0, a1 = n(\n              $.thm[_0].s[c0][$1],\n              i1,\n              O * Z0\n            );\n            i1 = Math.min(i1, a1);\n          }\n          fe = r1[O0 * 3 + 3] + r1[O0 * 3 + 4] + r1[O0 * 3 + 5], r1[O0 * 3 + 5] * 6 < fe && (i1 *= 0.5, r1[O0 * 3 + 4] * 6 < fe && (i1 *= 0.5)), $.thm[_0].s[c0][O0] = i1;\n        }\n      }\n      for ($.nsPsy.lastAttacks[_0] = U0[2], P0 = 0, B0 = 0; B0 < $.npart_l; B0++) {\n        for (var w1 = $.s3ind[B0][0], me = N0[w1] * H[v1[w1]], I1 = $.s3_ll[P0++] * me; ++w1 <= $.s3ind[B0][1]; )\n          me = N0[w1] * H[v1[w1]], I1 = a(\n            I1,\n            $.s3_ll[P0++] * me,\n            w1,\n            w1 - B0,\n            $,\n            0\n          );\n        I1 *= 0.158489319246111, $.blocktype_old[_0 & 1] == r0.SHORT_TYPE ? L0[B0] = I1 : L0[B0] = n(\n          Math.min(I1, Math.min(z * $.nb_1[_0][B0], u0 * $.nb_2[_0][B0])),\n          I1,\n          Z0\n        ), $.nb_2[_0][B0] = $.nb_1[_0][B0], $.nb_1[_0][B0] = I1;\n      }\n      for (; B0 <= r0.CBANDS; ++B0)\n        N0[B0] = 0, L0[B0] = 0;\n      i($, N0, L0, _0);\n    }\n    if ((v.mode == w.STEREO || v.mode == w.JOINT_STEREO) && v.interChRatio > 0 && V(v, v.interChRatio), v.mode == w.JOINT_STEREO) {\n      var be;\n      N($), be = v.msfix, Math.abs(be) > 0 && P($, be, v.ATHlower * $.ATH.adjust);\n    }\n    for (r(v, x0, e0, j), _0 = 0; _0 < k0; _0++) {\n      var P1, Z1 = 0, z1, J1;\n      _0 > 1 ? (P1 = G, Z1 = -2, z1 = r0.NORM_TYPE, (e0[0] == r0.SHORT_TYPE || e0[1] == r0.SHORT_TYPE) && (z1 = r0.SHORT_TYPE), J1 = c[y][_0 - 2]) : (P1 = C, Z1 = 0, z1 = e0[_0], J1 = k[y][_0]), z1 == r0.SHORT_TYPE ? P1[Z1 + _0] = Y(J1, $.masking_lower) : P1[Z1 + _0] = T(J1, $.masking_lower), v.analysis && ($.pinfo.pe[y][_0] = P1[Z1 + _0]);\n    }\n    return 0;\n  };\n  function d0(v, h, x, y, k, c, C, G) {\n    var F = v.internal_flags;\n    if (y < 2)\n      Z.fft_long(F, C[G], y, h, x);\n    else if (y == 2)\n      for (var e0 = r0.BLKSIZE - 1; e0 >= 0; --e0) {\n        var $ = C[G + 0][e0], a0 = C[G + 1][e0];\n        C[G + 0][e0] = ($ + a0) * n1.SQRT2 * 0.5, C[G + 1][e0] = ($ - a0) * n1.SQRT2 * 0.5;\n      }\n    c[0] = C[G + 0][0], c[0] *= c[0];\n    for (var e0 = r0.BLKSIZE / 2 - 1; e0 >= 0; --e0) {\n      var m0 = C[G + 0][r0.BLKSIZE / 2 - e0], N0 = C[G + 0][r0.BLKSIZE / 2 + e0];\n      c[r0.BLKSIZE / 2 - e0] = (m0 * m0 + N0 * N0) * 0.5;\n    }\n    {\n      for (var n0 = 0, e0 = 11; e0 < r0.HBLKSIZE; e0++)\n        n0 += c[e0];\n      F.tot_ener[y] = n0;\n    }\n    if (v.analysis) {\n      for (var e0 = 0; e0 < r0.HBLKSIZE; e0++)\n        F.pinfo.energy[k][y][e0] = F.pinfo.energy_save[y][e0], F.pinfo.energy_save[y][e0] = c[e0];\n      F.pinfo.pe[k][y] = F.pe[y];\n    }\n  }\n  function M0(v, h, x, y, k, c, C, G) {\n    var F = v.internal_flags;\n    if (k == 0 && y < 2 && Z.fft_short(F, C[G], y, h, x), y == 2)\n      for (var e0 = r0.BLKSIZE_s - 1; e0 >= 0; --e0) {\n        var $ = C[G + 0][k][e0], a0 = C[G + 1][k][e0];\n        C[G + 0][k][e0] = ($ + a0) * n1.SQRT2 * 0.5, C[G + 1][k][e0] = ($ - a0) * n1.SQRT2 * 0.5;\n      }\n    c[k][0] = C[G + 0][k][0], c[k][0] *= c[k][0];\n    for (var e0 = r0.BLKSIZE_s / 2 - 1; e0 >= 0; --e0) {\n      var m0 = C[G + 0][k][r0.BLKSIZE_s / 2 - e0], N0 = C[G + 0][k][r0.BLKSIZE_s / 2 + e0];\n      c[k][r0.BLKSIZE_s / 2 - e0] = (m0 * m0 + N0 * N0) * 0.5;\n    }\n  }\n  function R0(v, h, x, y) {\n    var k = v.internal_flags;\n    v.athaa_loudapprox == 2 && x < 2 && (k.loudness_sq[h][x] = k.loudness_sq_save[x], k.loudness_sq_save[x] = R(y, k));\n  }\n  var A0 = [\n    -865163e-23 * 2,\n    -851586e-8 * 2,\n    -674764e-23 * 2,\n    0.0209036 * 2,\n    -336639e-22 * 2,\n    -0.0438162 * 2,\n    -154175e-22 * 2,\n    0.0931738 * 2,\n    -552212e-22 * 2,\n    -0.313819 * 2\n  ];\n  function w0(v, h, x, y, k, c, C, G, F, e0) {\n    for (var $ = m1([2, 576]), a0 = v.internal_flags, m0 = a0.channels_out, N0 = v.mode == w.JOINT_STEREO ? 4 : m0, n0 = 0; n0 < m0; n0++) {\n      firbuf = h[n0];\n      for (var L0 = x + 576 - 350 - K + 192, j = 0; j < 576; j++) {\n        var x0, k0;\n        x0 = firbuf[L0 + j + 10], k0 = 0;\n        for (var _0 = 0; _0 < (K - 1) / 2 - 1; _0 += 2)\n          x0 += A0[_0] * (firbuf[L0 + j + _0] + firbuf[L0 + j + K - _0]), k0 += A0[_0 + 1] * (firbuf[L0 + j + _0 + 1] + firbuf[L0 + j + K - _0 - 1]);\n        $[n0][j] = x0 + k0;\n      }\n      k[y][n0].en.assign(a0.en[n0]), k[y][n0].thm.assign(a0.thm[n0]), N0 > 2 && (c[y][n0].en.assign(a0.en[n0 + 2]), c[y][n0].thm.assign(a0.thm[n0 + 2]));\n    }\n    for (var n0 = 0; n0 < N0; n0++) {\n      var B0 = g0(12), l0 = g0(12), p0 = [0, 0, 0, 0], P0 = $[n0 & 1], c0 = 0, O0 = n0 == 3 ? a0.nsPsy.attackthre_s : a0.nsPsy.attackthre, X0 = 1;\n      if (n0 == 2)\n        for (var j = 0, _0 = 576; _0 > 0; ++j, --_0) {\n          var Z0 = $[0][j], v1 = $[1][j];\n          $[0][j] = Z0 + v1, $[1][j] = Z0 - v1;\n        }\n      for (var j = 0; j < 3; j++)\n        l0[j] = a0.nsPsy.last_en_subshort[n0][j + 6], C0(a0.nsPsy.last_en_subshort[n0][j + 4] > 0), B0[j] = l0[j] / a0.nsPsy.last_en_subshort[n0][j + 4], p0[0] += l0[j];\n      for (var j = 0; j < 9; j++) {\n        for (var z0 = c0 + 64, K0 = 1; c0 < z0; c0++)\n          K0 < Math.abs(P0[c0]) && (K0 = Math.abs(P0[c0]));\n        a0.nsPsy.last_en_subshort[n0][j] = l0[j + 3] = K0, p0[1 + j / 3] += K0, K0 > l0[j + 3 - 2] ? (C0(l0[j + 3 - 2] > 0), K0 = K0 / l0[j + 3 - 2]) : l0[j + 3 - 2] > K0 * 10 ? K0 = l0[j + 3 - 2] / (K0 * 10) : K0 = 0, B0[j + 3] = K0;\n      }\n      for (var j = 0; j < 3; ++j) {\n        var s1 = l0[j * 3 + 3] + l0[j * 3 + 4] + l0[j * 3 + 5], o1 = 1;\n        l0[j * 3 + 5] * 6 < s1 && (o1 *= 0.5, l0[j * 3 + 4] * 6 < s1 && (o1 *= 0.5)), G[n0][j] = o1;\n      }\n      if (v.analysis) {\n        for (var h1 = B0[0], j = 1; j < 12; j++)\n          h1 < B0[j] && (h1 = B0[j]);\n        a0.pinfo.ers[y][n0] = a0.pinfo.ers_save[n0], a0.pinfo.ers_save[n0] = h1;\n      }\n      for (var j = 0; j < 12; j++)\n        F[n0][j / 3] == 0 && B0[j] > O0 && (F[n0][j / 3] = j % 3 + 1);\n      for (var j = 1; j < 4; j++) {\n        var c1 = p0[j - 1], S1 = p0[j], r1 = Math.max(c1, S1);\n        r1 < 4e4 && c1 < 1.7 * S1 && S1 < 1.7 * c1 && (j == 1 && F[n0][0] <= F[n0][j] && (F[n0][0] = 0), F[n0][j] = 0);\n      }\n      F[n0][0] <= a0.nsPsy.lastAttacks[n0] && (F[n0][0] = 0), (a0.nsPsy.lastAttacks[n0] == 3 || F[n0][0] + F[n0][1] + F[n0][2] + F[n0][3] != 0) && (X0 = 0, F[n0][1] != 0 && F[n0][0] != 0 && (F[n0][1] = 0), F[n0][2] != 0 && F[n0][1] != 0 && (F[n0][2] = 0), F[n0][3] != 0 && F[n0][2] != 0 && (F[n0][3] = 0)), n0 < 2 ? e0[n0] = X0 : X0 == 0 && (e0[0] = e0[1] = 0), C[n0] = a0.tot_ener[n0];\n    }\n  }\n  function $0(v, h, x) {\n    if (x == 0)\n      for (var y = 0; y < v.npart_s; y++)\n        v.nb_s2[h][y] = v.nb_s1[h][y], v.nb_s1[h][y] = 0;\n  }\n  function f1(v, h) {\n    for (var x = 0; x < v.npart_l; x++)\n      v.nb_2[h][x] = v.nb_1[h][x], v.nb_1[h][x] = 0;\n  }\n  function t(v, h, x, y) {\n    var k = H.length - 1, c = 0, C = x[c] + x[c + 1];\n    if (C > 0) {\n      var G = h[c];\n      G < h[c + 1] && (G = h[c + 1]), C0(v.numlines_s[c] + v.numlines_s[c + 1] - 1 > 0), C = 20 * (G * 2 - C) / (C * (v.numlines_s[c] + v.numlines_s[c + 1] - 1));\n      var F = 0 | C;\n      F > k && (F = k), y[c] = F;\n    } else\n      y[c] = 0;\n    for (c = 1; c < v.npart_s - 1; c++)\n      if (C = x[c - 1] + x[c] + x[c + 1], C0(c + 1 < v.npart_s), C > 0) {\n        var G = h[c - 1];\n        G < h[c] && (G = h[c]), G < h[c + 1] && (G = h[c + 1]), C0(v.numlines_s[c - 1] + v.numlines_s[c] + v.numlines_s[c + 1] - 1 > 0), C = 20 * (G * 3 - C) / (C * (v.numlines_s[c - 1] + v.numlines_s[c] + v.numlines_s[c + 1] - 1));\n        var F = 0 | C;\n        F > k && (F = k), y[c] = F;\n      } else\n        y[c] = 0;\n    if (C0(c == v.npart_s - 1), C = x[c - 1] + x[c], C > 0) {\n      var G = h[c - 1];\n      G < h[c] && (G = h[c]), C0(v.numlines_s[c - 1] + v.numlines_s[c] - 1 > 0), C = 20 * (G * 2 - C) / (C * (v.numlines_s[c - 1] + v.numlines_s[c] - 1));\n      var F = 0 | C;\n      F > k && (F = k), y[c] = F;\n    } else\n      y[c] = 0;\n    C0(c == v.npart_s - 1);\n  }\n  function _(v, h, x, y, k, c) {\n    var C = v.internal_flags, G = new float[r0.CBANDS](), F = g0(r0.CBANDS), e0, $, a0, m0 = new int[r0.CBANDS]();\n    for (a0 = $ = 0; a0 < C.npart_s; ++a0) {\n      var N0 = 0, n0 = 0, L0 = C.numlines_s[a0];\n      for (e0 = 0; e0 < L0; ++e0, ++$) {\n        var j = h[c][$];\n        N0 += j, n0 < j && (n0 = j);\n      }\n      x[a0] = N0, G[a0] = n0, F[a0] = N0 / L0, C0(F[a0] >= 0);\n    }\n    for (C0(a0 == C.npart_s); a0 < r0.CBANDS; ++a0)\n      G[a0] = 0, F[a0] = 0;\n    for (t(C, G, F, m0), $ = a0 = 0; a0 < C.npart_s; a0++) {\n      var x0 = C.s3ind_s[a0][0], k0 = C.s3ind_s[a0][1], _0, B0, l0, p0, P0;\n      for (_0 = m0[x0], B0 = 1, p0 = C.s3_ss[$] * x[x0] * H[m0[x0]], ++$, ++x0; x0 <= k0; )\n        _0 += m0[x0], B0 += 1, l0 = C.s3_ss[$] * x[x0] * H[m0[x0]], p0 = L(p0, l0, x0 - a0), ++$, ++x0;\n      _0 = (1 + 2 * _0) / (2 * B0), P0 = H[_0] * 0.5, p0 *= P0, y[a0] = p0, C.nb_s2[k][a0] = C.nb_s1[k][a0], C.nb_s1[k][a0] = p0, l0 = G[a0], l0 *= C.minval_s[a0], l0 *= P0, y[a0] > l0 && (y[a0] = l0), C.masking_lower > 1 && (y[a0] *= C.masking_lower), y[a0] > x[a0] && (y[a0] = x[a0]), C.masking_lower < 1 && (y[a0] *= C.masking_lower), C0(y[a0] >= 0);\n    }\n    for (; a0 < r0.CBANDS; ++a0)\n      x[a0] = 0, y[a0] = 0;\n  }\n  function S0(v, h, x, y, k) {\n    var c = g0(r0.CBANDS), C = g0(r0.CBANDS), G = L1(r0.CBANDS + 2), F;\n    q(v, h, x, c, C), i0(v, c, C, G);\n    var e0 = 0;\n    for (F = 0; F < v.npart_l; F++) {\n      var $, a0, m0, N0, n0 = v.s3ind[F][0], L0 = v.s3ind[F][1], j = 0, x0 = 0;\n      for (j = G[n0], x0 += 1, a0 = v.s3_ll[e0] * x[n0] * H[G[n0]], ++e0, ++n0; n0 <= L0; )\n        j += G[n0], x0 += 1, $ = v.s3_ll[e0] * x[n0] * H[G[n0]], N0 = L(a0, $, n0 - F), a0 = N0, ++e0, ++n0;\n      if (j = (1 + 2 * j) / (2 * x0), m0 = H[j] * 0.5, a0 *= m0, v.blocktype_old[k & 1] == r0.SHORT_TYPE) {\n        var k0 = z * v.nb_1[k][F];\n        k0 > 0 ? y[F] = Math.min(a0, k0) : y[F] = Math.min(a0, x[F] * O);\n      } else {\n        var _0 = u0 * v.nb_2[k][F], B0 = z * v.nb_1[k][F], k0;\n        _0 <= 0 && (_0 = a0), B0 <= 0 && (B0 = a0), v.blocktype_old[k & 1] == r0.NORM_TYPE ? k0 = Math.min(B0, _0) : k0 = B0, y[F] = Math.min(a0, k0);\n      }\n      v.nb_2[k][F] = v.nb_1[k][F], v.nb_1[k][F] = a0, $ = c[F], $ *= v.minval_l[F], $ *= m0, y[F] > $ && (y[F] = $), v.masking_lower > 1 && (y[F] *= v.masking_lower), y[F] > x[F] && (y[F] = x[F]), v.masking_lower < 1 && (y[F] *= v.masking_lower), C0(y[F] >= 0);\n    }\n    for (; F < r0.CBANDS; ++F)\n      x[F] = 0, y[F] = 0;\n  }\n  function E0(v, h) {\n    var x = v.internal_flags;\n    v.short_blocks == F1.short_block_coupled && !(h[0] != 0 && h[1] != 0) && (h[0] = h[1] = 0);\n    for (var y = 0; y < x.channels_out; y++)\n      v.short_blocks == F1.short_block_dispensed && (h[y] = 1), v.short_blocks == F1.short_block_forced && (h[y] = 0);\n  }\n  function V0(v, h, x) {\n    for (var y = v.internal_flags, k = 0; k < y.channels_out; k++) {\n      var c = r0.NORM_TYPE;\n      h[k] != 0 ? (C0(y.blocktype_old[k] != r0.START_TYPE), y.blocktype_old[k] == r0.SHORT_TYPE && (c = r0.STOP_TYPE)) : (c = r0.SHORT_TYPE, y.blocktype_old[k] == r0.NORM_TYPE && (y.blocktype_old[k] = r0.START_TYPE), y.blocktype_old[k] == r0.STOP_TYPE && (y.blocktype_old[k] = r0.SHORT_TYPE)), x[k] = y.blocktype_old[k], y.blocktype_old[k] = c;\n    }\n  }\n  function H0(v, h, x, y, k, c, C) {\n    for (var G = c * 2, F = c > 0 ? Math.pow(10, k) : 1, e0, $, a0 = 0; a0 < C; ++a0) {\n      var m0 = v[2][a0], N0 = v[3][a0], n0 = h[0][a0], L0 = h[1][a0], j = h[2][a0], x0 = h[3][a0];\n      if (n0 <= 1.58 * L0 && L0 <= 1.58 * n0) {\n        var k0 = x[a0] * N0, _0 = x[a0] * m0;\n        $ = Math.max(j, Math.min(x0, k0)), e0 = Math.max(x0, Math.min(j, _0));\n      } else\n        $ = j, e0 = x0;\n      if (c > 0) {\n        var B0, l0, p0 = y[a0] * F;\n        if (B0 = Math.min(Math.max(n0, p0), Math.max(L0, p0)), j = Math.max($, p0), x0 = Math.max(e0, p0), l0 = j + x0, l0 > 0 && B0 * G < l0) {\n          var P0 = B0 * G / l0;\n          j *= P0, x0 *= P0;\n        }\n        $ = Math.min(j, $), e0 = Math.min(x0, e0);\n      }\n      $ > m0 && ($ = m0), e0 > N0 && (e0 = N0), h[2][a0] = $, h[3][a0] = e0;\n    }\n  }\n  this.L3psycho_anal_vbr = function(v, h, x, y, k, c, C, G, F, e0) {\n    var $ = v.internal_flags, a0, m0, N0 = g0(r0.HBLKSIZE), n0 = m1([3, r0.HBLKSIZE_s]), L0 = m1([2, r0.BLKSIZE]), j = m1([2, 3, r0.BLKSIZE_s]), x0 = m1([4, r0.CBANDS]), k0 = m1([4, r0.CBANDS]), _0 = m1([4, 3]), B0 = 0.6, l0 = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]\n    ], p0 = L1(2), P0 = v.mode == w.JOINT_STEREO ? 4 : $.channels_out;\n    w0(\n      v,\n      h,\n      x,\n      y,\n      k,\n      c,\n      F,\n      _0,\n      l0,\n      p0\n    ), E0(v, p0);\n    {\n      for (var c0 = 0; c0 < P0; c0++) {\n        var O0 = c0 & 1;\n        a0 = L0, d0(\n          v,\n          h,\n          x,\n          c0,\n          y,\n          N0,\n          a0,\n          O0\n        ), R0(\n          v,\n          y,\n          c0,\n          N0\n        ), p0[O0] != 0 ? S0(\n          $,\n          N0,\n          x0[c0],\n          k0[c0],\n          c0\n        ) : f1($, c0);\n      }\n      p0[0] + p0[1] == 2 && v.mode == w.JOINT_STEREO && H0(\n        x0,\n        k0,\n        $.mld_cb_l,\n        $.ATH.cb_l,\n        v.ATHlower * $.ATH.adjust,\n        v.msfix,\n        $.npart_l\n      );\n      for (var c0 = 0; c0 < P0; c0++) {\n        var O0 = c0 & 1;\n        p0[O0] != 0 && i($, x0[c0], k0[c0], c0);\n      }\n    }\n    {\n      for (var X0 = 0; X0 < 3; X0++) {\n        for (var c0 = 0; c0 < P0; ++c0) {\n          var O0 = c0 & 1;\n          p0[O0] != 0 ? $0($, c0, X0) : (m0 = j, M0(\n            v,\n            h,\n            x,\n            c0,\n            X0,\n            n0,\n            m0,\n            O0\n          ), _(\n            v,\n            n0,\n            x0[c0],\n            k0[c0],\n            c0,\n            X0\n          ));\n        }\n        p0[0] + p0[1] == 0 && v.mode == w.JOINT_STEREO && H0(\n          x0,\n          k0,\n          $.mld_cb_s,\n          $.ATH.cb_s,\n          v.ATHlower * $.ATH.adjust,\n          v.msfix,\n          $.npart_s\n        );\n        for (var c0 = 0; c0 < P0; ++c0) {\n          var O0 = c0 & 1;\n          p0[O0] == 0 && E(\n            $,\n            x0[c0],\n            k0[c0],\n            c0,\n            X0\n          );\n        }\n      }\n      for (var c0 = 0; c0 < P0; c0++) {\n        var O0 = c0 & 1;\n        if (p0[O0] == 0)\n          for (var Z0 = 0; Z0 < r0.SBMAX_s; Z0++) {\n            for (var v1 = g0(3), X0 = 0; X0 < 3; X0++) {\n              var z0 = $.thm[c0].s[Z0][X0];\n              if (z0 *= A, l0[c0][X0] >= 2 || l0[c0][X0 + 1] == 1) {\n                var K0 = X0 != 0 ? X0 - 1 : 2, s1 = n(\n                  $.thm[c0].s[Z0][K0],\n                  z0,\n                  m * B0\n                );\n                z0 = Math.min(z0, s1);\n              } else if (l0[c0][X0] == 1) {\n                var K0 = X0 != 0 ? X0 - 1 : 2, s1 = n(\n                  $.thm[c0].s[Z0][K0],\n                  z0,\n                  O * B0\n                );\n                z0 = Math.min(z0, s1);\n              } else if (X0 != 0 && l0[c0][X0 - 1] == 3 || X0 == 0 && $.nsPsy.lastAttacks[c0] == 3) {\n                var K0 = X0 != 2 ? X0 + 1 : 0, s1 = n(\n                  $.thm[c0].s[Z0][K0],\n                  z0,\n                  O * B0\n                );\n                z0 = Math.min(z0, s1);\n              }\n              z0 *= _0[c0][X0], v1[X0] = z0;\n            }\n            for (var X0 = 0; X0 < 3; X0++)\n              $.thm[c0].s[Z0][X0] = v1[X0];\n          }\n      }\n    }\n    for (var c0 = 0; c0 < P0; c0++)\n      $.nsPsy.lastAttacks[c0] = l0[c0][2];\n    V0(v, p0, e0);\n    for (var c0 = 0; c0 < P0; c0++) {\n      var o1, h1, c1, S1;\n      c0 > 1 ? (o1 = G, h1 = -2, c1 = r0.NORM_TYPE, (e0[0] == r0.SHORT_TYPE || e0[1] == r0.SHORT_TYPE) && (c1 = r0.SHORT_TYPE), S1 = c[y][c0 - 2]) : (o1 = C, h1 = 0, c1 = e0[c0], S1 = k[y][c0]), c1 == r0.SHORT_TYPE ? o1[h1 + c0] = Y(S1, $.masking_lower) : o1[h1 + c0] = T(S1, $.masking_lower), v.analysis && ($.pinfo.pe[y][c0] = o1[h1 + c0]);\n    }\n    return 0;\n  };\n  function y0(v, h) {\n    var x = v, y;\n    return x >= 0 ? y = -x * 27 : y = x * h, y <= -72 ? 0 : Math.exp(y * t0);\n  }\n  function T0(v) {\n    var h = 0, x = 0;\n    {\n      var y = 0, k, c;\n      for (y = 0; y0(y, v) > 1e-20; y -= 1)\n        ;\n      for (k = y, c = 0; Math.abs(c - k) > 1e-12; )\n        y = (c + k) / 2, y0(y, v) > 0 ? c = y : k = y;\n      h = k;\n    }\n    {\n      var y = 0, k, c;\n      for (y = 0; y0(y, v) > 1e-20; y += 1)\n        ;\n      for (k = 0, c = y; Math.abs(c - k) > 1e-12; )\n        y = (c + k) / 2, y0(y, v) > 0 ? k = y : c = y;\n      x = c;\n    }\n    {\n      var C = 0, G = 1e3, F;\n      for (F = 0; F <= G; ++F) {\n        var y = h + F * (x - h) / G, e0 = y0(y, v);\n        C += e0;\n      }\n      {\n        var $ = (G + 1) / (C * (x - h));\n        return $;\n      }\n    }\n  }\n  function F0(v) {\n    var h, x, y, k;\n    return h = v, h >= 0 ? h *= 3 : h *= 1.5, h >= 0.5 && h <= 2.5 ? (k = h - 0.5, x = 8 * (k * k - 2 * k)) : x = 0, h += 0.474, y = 15.811389 + 7.5 * h - 17.5 * Math.sqrt(1 + h * h), y <= -60 ? 0 : (h = Math.exp((x + y) * t0), h /= 0.6609193, h);\n  }\n  function I0(v) {\n    return v < 0 && (v = 0), v = v * 1e-3, 13 * Math.atan(0.76 * v) + 3.5 * Math.atan(v * v / (7.5 * 7.5));\n  }\n  function b0(v, h, x, y, k, c, C, G, F, e0, $, a0) {\n    var m0 = g0(r0.CBANDS + 1), N0 = G / (a0 > 15 ? 2 * 576 : 2 * 192), n0 = L1(r0.HBLKSIZE), L0;\n    G /= F;\n    var j = 0, x0 = 0;\n    for (L0 = 0; L0 < r0.CBANDS; L0++) {\n      var k0, _0;\n      for (k0 = I0(G * j), m0[L0] = G * j, _0 = j; I0(G * _0) - k0 < D && _0 <= F / 2; _0++)\n        ;\n      for (v[L0] = _0 - j, x0 = L0 + 1; j < _0; )\n        C0(j < r0.HBLKSIZE), n0[j++] = L0;\n      if (j > F / 2) {\n        j = F / 2, ++L0;\n        break;\n      }\n    }\n    C0(L0 < r0.CBANDS), m0[L0] = G * j;\n    for (var B0 = 0; B0 < a0; B0++) {\n      var l0, p0, P0, c0, O0;\n      P0 = e0[B0], c0 = e0[B0 + 1], l0 = 0 | Math.floor(0.5 + $ * (P0 - 0.5)), l0 < 0 && (l0 = 0), p0 = 0 | Math.floor(0.5 + $ * (c0 - 0.5)), p0 > F / 2 && (p0 = F / 2), x[B0] = (n0[l0] + n0[p0]) / 2, h[B0] = n0[p0];\n      var X0 = N0 * c0;\n      C[B0] = (X0 - m0[h[B0]]) / (m0[h[B0] + 1] - m0[h[B0]]), C[B0] < 0 ? C[B0] = 0 : C[B0] > 1 && (C[B0] = 1), O0 = I0(G * e0[B0] * $), O0 = Math.min(O0, 15.5) / 15.5, c[B0] = Math.pow(\n        10,\n        1.25 * (1 - Math.cos(Math.PI * O0)) - 2.5\n      );\n    }\n    j = 0;\n    for (var Z0 = 0; Z0 < x0; Z0++) {\n      var v1 = v[Z0], k0, z0;\n      k0 = I0(G * j), z0 = I0(G * (j + v1 - 1)), y[Z0] = 0.5 * (k0 + z0), k0 = I0(G * (j - 0.5)), z0 = I0(G * (j + v1 - 0.5)), k[Z0] = z0 - k0, j += v1;\n    }\n    return x0;\n  }\n  function G0(v, h, x, y, k, c) {\n    var C = m1([r0.CBANDS, r0.CBANDS]), G, F = 0;\n    if (c)\n      for (var e0 = 0; e0 < h; e0++)\n        for (G = 0; G < h; G++) {\n          var $ = F0(x[e0] - x[G]) * y[G];\n          C[e0][G] = $ * k[e0];\n        }\n    else\n      for (G = 0; G < h; G++)\n        for (var a0 = 15 + Math.min(21 / x[G], 12), m0 = T0(a0), e0 = 0; e0 < h; e0++) {\n          var $ = m0 * y0(x[e0] - x[G], a0) * y[G];\n          C[e0][G] = $ * k[e0];\n        }\n    for (var e0 = 0; e0 < h; e0++) {\n      for (G = 0; G < h && !(C[e0][G] > 0); G++)\n        ;\n      for (v[e0][0] = G, G = h - 1; G > 0 && !(C[e0][G] > 0); G--)\n        ;\n      v[e0][1] = G, F += v[e0][1] - v[e0][0] + 1;\n    }\n    for (var N0 = g0(F), n0 = 0, e0 = 0; e0 < h; e0++)\n      for (G = v[e0][0]; G <= v[e0][1]; G++)\n        N0[n0++] = C[e0][G];\n    return N0;\n  }\n  function e1(v) {\n    var h = I0(v);\n    return h = Math.min(h, 15.5) / 15.5, Math.pow(\n      10,\n      1.25 * (1 - Math.cos(Math.PI * h)) - 2.5\n    );\n  }\n  this.psymodel_init = function(v) {\n    var h = v.internal_flags, x, y = !0, k = 13, c = 24, C = 0, G = 0, F = -8.25, e0 = -4.5, $ = g0(r0.CBANDS), a0 = g0(r0.CBANDS), m0 = g0(r0.CBANDS), N0 = v.out_samplerate;\n    switch (v.experimentalZ) {\n      default:\n      case 0:\n        y = !0;\n        break;\n      case 1:\n        y = !(v.VBR == C1.vbr_mtrh || v.VBR == C1.vbr_mt);\n        break;\n      case 2:\n        y = !1;\n        break;\n      case 3:\n        k = 8, C = -1.75, G = -0.0125, F = -8.25, e0 = -2.25;\n        break;\n    }\n    for (h.ms_ener_ratio_old = 0.25, h.blocktype_old[0] = h.blocktype_old[1] = r0.NORM_TYPE, x = 0; x < 4; ++x) {\n      for (var j = 0; j < r0.CBANDS; ++j)\n        h.nb_1[x][j] = 1e20, h.nb_2[x][j] = 1e20, h.nb_s1[x][j] = h.nb_s2[x][j] = 1;\n      for (var n0 = 0; n0 < r0.SBMAX_l; n0++)\n        h.en[x].l[n0] = 1e20, h.thm[x].l[n0] = 1e20;\n      for (var j = 0; j < 3; ++j) {\n        for (var n0 = 0; n0 < r0.SBMAX_s; n0++)\n          h.en[x].s[n0][j] = 1e20, h.thm[x].s[n0][j] = 1e20;\n        h.nsPsy.lastAttacks[x] = 0;\n      }\n      for (var j = 0; j < 9; j++)\n        h.nsPsy.last_en_subshort[x][j] = 10;\n    }\n    for (h.loudness_sq_save[0] = h.loudness_sq_save[1] = 0, h.npart_l = b0(\n      h.numlines_l,\n      h.bo_l,\n      h.bm_l,\n      $,\n      a0,\n      h.mld_l,\n      h.PSY.bo_l_weight,\n      N0,\n      r0.BLKSIZE,\n      h.scalefac_band.l,\n      r0.BLKSIZE / (2 * 576),\n      r0.SBMAX_l\n    ), C0(h.npart_l < r0.CBANDS), x = 0; x < h.npart_l; x++) {\n      var L0 = C;\n      $[x] >= k && (L0 = G * ($[x] - k) / (c - k) + C * (c - $[x]) / (c - k)), m0[x] = Math.pow(10, L0 / 10), h.numlines_l[x] > 0 ? h.rnumlines_l[x] = 1 / h.numlines_l[x] : h.rnumlines_l[x] = 0;\n    }\n    h.s3_ll = G0(\n      h.s3ind,\n      h.npart_l,\n      $,\n      a0,\n      m0,\n      y\n    );\n    var j = 0;\n    for (x = 0; x < h.npart_l; x++) {\n      var x0;\n      x0 = Ue.MAX_VALUE;\n      for (var k0 = 0; k0 < h.numlines_l[x]; k0++, j++) {\n        var _0 = N0 * j / (1e3 * r0.BLKSIZE), B0;\n        B0 = this.ATHformula(_0 * 1e3, v) - 20, B0 = Math.pow(10, 0.1 * B0), B0 *= h.numlines_l[x], x0 > B0 && (x0 = B0);\n      }\n      h.ATH.cb_l[x] = x0, x0 = -20 + $[x] * 20 / 10, x0 > 6 && (x0 = 100), x0 < -15 && (x0 = -15), x0 -= 8, h.minval_l[x] = Math.pow(10, x0 / 10) * h.numlines_l[x];\n    }\n    for (h.npart_s = b0(\n      h.numlines_s,\n      h.bo_s,\n      h.bm_s,\n      $,\n      a0,\n      h.mld_s,\n      h.PSY.bo_s_weight,\n      N0,\n      r0.BLKSIZE_s,\n      h.scalefac_band.s,\n      r0.BLKSIZE_s / (2 * 192),\n      r0.SBMAX_s\n    ), C0(h.npart_s < r0.CBANDS), j = 0, x = 0; x < h.npart_s; x++) {\n      var x0, L0 = F;\n      $[x] >= k && (L0 = e0 * ($[x] - k) / (c - k) + F * (c - $[x]) / (c - k)), m0[x] = Math.pow(10, L0 / 10), x0 = Ue.MAX_VALUE;\n      for (var k0 = 0; k0 < h.numlines_s[x]; k0++, j++) {\n        var _0 = N0 * j / (1e3 * r0.BLKSIZE_s), B0;\n        B0 = this.ATHformula(_0 * 1e3, v) - 20, B0 = Math.pow(10, 0.1 * B0), B0 *= h.numlines_s[x], x0 > B0 && (x0 = B0);\n      }\n      h.ATH.cb_s[x] = x0, x0 = -7 + $[x] * 7 / 12, $[x] > 12 && (x0 *= 1 + Math.log(1 + x0) * 3.1), $[x] < 12 && (x0 *= 1 + Math.log(1 - x0) * 2.3), x0 < -15 && (x0 = -15), x0 -= 8, h.minval_s[x] = Math.pow(10, x0 / 10) * h.numlines_s[x];\n    }\n    h.s3_ss = G0(\n      h.s3ind_s,\n      h.npart_s,\n      $,\n      a0,\n      m0,\n      y\n    ), B(), Z.init_fft(h), h.decay = Math.exp(-1 * X / (f0 * N0 / 192));\n    {\n      var l0;\n      l0 = s0, v.exp_nspsytune & 2 && (l0 = 1), Math.abs(v.msfix) > 0 && (l0 = v.msfix), v.msfix = l0;\n      for (var p0 = 0; p0 < h.npart_l; p0++)\n        h.s3ind[p0][1] > h.npart_l - 1 && (h.s3ind[p0][1] = h.npart_l - 1);\n    }\n    var P0 = 576 * h.mode_gr / N0;\n    if (h.ATH.decay = Math.pow(10, -12 / 10 * P0), h.ATH.adjust = 0.01, h.ATH.adjustLimit = 1, C0(h.bo_l[r0.SBMAX_l - 1] <= h.npart_l), C0(h.bo_s[r0.SBMAX_s - 1] <= h.npart_s), v.ATHtype != -1) {\n      var _0, c0 = v.out_samplerate / r0.BLKSIZE, O0 = 0;\n      for (_0 = 0, x = 0; x < r0.BLKSIZE / 2; ++x)\n        _0 += c0, h.ATH.eql_w[x] = 1 / Math.pow(10, this.ATHformula(_0, v) / 10), O0 += h.ATH.eql_w[x];\n      for (O0 = 1 / O0, x = r0.BLKSIZE / 2; --x >= 0; )\n        h.ATH.eql_w[x] *= O0;\n    }\n    {\n      for (var p0 = j = 0; p0 < h.npart_s; ++p0)\n        for (x = 0; x < h.numlines_s[p0]; ++x)\n          ++j;\n      for (var p0 = j = 0; p0 < h.npart_l; ++p0)\n        for (x = 0; x < h.numlines_l[p0]; ++x)\n          ++j;\n    }\n    for (j = 0, x = 0; x < h.npart_l; x++) {\n      var _0 = N0 * (j + h.numlines_l[x] / 2) / (1 * r0.BLKSIZE);\n      h.mld_cb_l[x] = e1(_0), j += h.numlines_l[x];\n    }\n    for (; x < r0.CBANDS; ++x)\n      h.mld_cb_l[x] = 1;\n    for (j = 0, x = 0; x < h.npart_s; x++) {\n      var _0 = N0 * (j + h.numlines_s[x] / 2) / (1 * r0.BLKSIZE_s);\n      h.mld_cb_s[x] = e1(_0), j += h.numlines_s[x];\n    }\n    for (; x < r0.CBANDS; ++x)\n      h.mld_cb_s[x] = 1;\n    return 0;\n  };\n  function Y0(v, h) {\n    v < -0.3 && (v = 3410), v /= 1e3, v = Math.max(0.1, v);\n    var x = 3.64 * Math.pow(v, -0.8) - 6.8 * Math.exp(-0.6 * Math.pow(v - 3.4, 2)) + 6 * Math.exp(-0.15 * Math.pow(v - 8.7, 2)) + (0.6 + 0.04 * h) * 1e-3 * Math.pow(v, 4);\n    return x;\n  }\n  this.ATHformula = function(v, h) {\n    var x;\n    switch (h.ATHtype) {\n      case 0:\n        x = Y0(v, 9);\n        break;\n      case 1:\n        x = Y0(v, -1);\n        break;\n      case 2:\n        x = Y0(v, 0);\n        break;\n      case 3:\n        x = Y0(v, 1) + 6;\n        break;\n      case 4:\n        x = Y0(v, h.ATHcurve);\n        break;\n      default:\n        x = Y0(v, 0);\n        break;\n    }\n    return x;\n  };\n}\nvar Qa = Ua, Wa = j1;\nfunction ja() {\n  this.class_id = 0, this.num_samples = 0, this.num_channels = 0, this.in_samplerate = 0, this.out_samplerate = 0, this.scale = 0, this.scale_left = 0, this.scale_right = 0, this.analysis = !1, this.bWriteVbrTag = !1, this.decode_only = !1, this.quality = 0, this.mode = Wa.STEREO, this.force_ms = !1, this.free_format = !1, this.findReplayGain = !1, this.decode_on_the_fly = !1, this.write_id3tag_automatic = !1, this.brate = 0, this.compression_ratio = 0, this.copyright = 0, this.original = 0, this.extension = 0, this.emphasis = 0, this.error_protection = 0, this.strict_ISO = !1, this.disable_reservoir = !1, this.quant_comp = 0, this.quant_comp_short = 0, this.experimentalY = !1, this.experimentalZ = 0, this.exp_nspsytune = 0, this.preset = 0, this.VBR = null, this.VBR_q_frac = 0, this.VBR_q = 0, this.VBR_mean_bitrate_kbps = 0, this.VBR_min_bitrate_kbps = 0, this.VBR_max_bitrate_kbps = 0, this.VBR_hard_min = 0, this.lowpassfreq = 0, this.highpassfreq = 0, this.lowpasswidth = 0, this.highpasswidth = 0, this.maskingadjust = 0, this.maskingadjust_short = 0, this.ATHonly = !1, this.ATHshort = !1, this.noATH = !1, this.ATHtype = 0, this.ATHcurve = 0, this.ATHlower = 0, this.athaa_type = 0, this.athaa_loudapprox = 0, this.athaa_sensitivity = 0, this.short_blocks = null, this.useTemporal = !1, this.interChRatio = 0, this.msfix = 0, this.tune = !1, this.tune_value_a = 0, this.version = 0, this.encoder_delay = 0, this.encoder_padding = 0, this.framesize = 0, this.frameNum = 0, this.lame_allocated_gfp = 0, this.internal_flags = null;\n}\nvar za = ja, Ja = t1(), Ta = {};\nTa.SFBMAX = Ja.SBMAX_s * 3;\nvar ie = Ta, ya = Q0, ga = ya.new_float, N1 = ya.new_int, Re = ie;\nfunction e2() {\n  this.xr = ga(576), this.l3_enc = N1(576), this.scalefac = N1(Re.SFBMAX), this.xrpow_max = 0, this.part2_3_length = 0, this.big_values = 0, this.count1 = 0, this.global_gain = 0, this.scalefac_compress = 0, this.block_type = 0, this.mixed_block_flag = 0, this.table_select = N1(3), this.subblock_gain = N1(3 + 1), this.region0_count = 0, this.region1_count = 0, this.preflag = 0, this.scalefac_scale = 0, this.count1table_select = 0, this.part2_length = 0, this.sfb_lmax = 0, this.sfb_smin = 0, this.psy_lmax = 0, this.sfbmax = 0, this.psymax = 0, this.sfbdivide = 0, this.width = N1(Re.SFBMAX), this.window = N1(Re.SFBMAX), this.count1bits = 0, this.sfb_partition_table = null, this.slen = N1(4), this.max_nonzero_coeff = 0;\n  var w = this;\n  function Z(z) {\n    return new Int32Array(z);\n  }\n  function X(z) {\n    return new Float32Array(z);\n  }\n  this.assign = function(z) {\n    w.xr = X(z.xr), w.l3_enc = Z(z.l3_enc), w.scalefac = Z(z.scalefac), w.xrpow_max = z.xrpow_max, w.part2_3_length = z.part2_3_length, w.big_values = z.big_values, w.count1 = z.count1, w.global_gain = z.global_gain, w.scalefac_compress = z.scalefac_compress, w.block_type = z.block_type, w.mixed_block_flag = z.mixed_block_flag, w.table_select = Z(z.table_select), w.subblock_gain = Z(z.subblock_gain), w.region0_count = z.region0_count, w.region1_count = z.region1_count, w.preflag = z.preflag, w.scalefac_scale = z.scalefac_scale, w.count1table_select = z.count1table_select, w.part2_length = z.part2_length, w.sfb_lmax = z.sfb_lmax, w.sfb_smin = z.sfb_smin, w.psy_lmax = z.psy_lmax, w.sfbmax = z.sfbmax, w.psymax = z.psymax, w.sfbdivide = z.sfbdivide, w.width = Z(z.width), w.window = Z(z.window), w.count1bits = z.count1bits, w.sfb_partition_table = z.sfb_partition_table.slice(0), w.slen = Z(z.slen), w.max_nonzero_coeff = z.max_nonzero_coeff;\n  };\n}\nvar Le = e2, a2 = Q0, Qe = a2.new_int, r2 = Le;\nfunction t2() {\n  this.tt = [[null, null], [null, null]], this.main_data_begin = 0, this.private_bits = 0, this.resvDrain_pre = 0, this.resvDrain_post = 0, this.scfsi = [Qe(4), Qe(4)];\n  for (var w = 0; w < 2; w++)\n    for (var Z = 0; Z < 2; Z++)\n      this.tt[w][Z] = new r2();\n}\nvar s2 = t2, wa = Q0, g1 = wa.System, ee = wa.new_int, ae = t1();\nfunction i2(w, Z, X, z) {\n  this.l = ee(1 + ae.SBMAX_l), this.s = ee(1 + ae.SBMAX_s), this.psfb21 = ee(1 + ae.PSFB21), this.psfb12 = ee(1 + ae.PSFB12);\n  var u0 = this.l, W = this.s;\n  arguments.length == 4 && (this.arrL = arguments[0], this.arrS = arguments[1], this.arr21 = arguments[2], this.arr12 = arguments[3], g1.arraycopy(this.arrL, 0, u0, 0, Math.min(this.arrL.length, this.l.length)), g1.arraycopy(this.arrS, 0, W, 0, Math.min(this.arrS.length, this.s.length)), g1.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length)), g1.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length)));\n}\nvar Ia = i2, Ne = Q0, xe = Ne.new_float, n2 = Ne.new_float_n, _2 = Ne.new_int, We = t1();\nfunction l2() {\n  this.last_en_subshort = n2([4, 9]), this.lastAttacks = _2(4), this.pefirbuf = xe(19), this.longfact = xe(We.SBMAX_l), this.shortfact = xe(We.SBMAX_s), this.attackthre = 0, this.attackthre_s = 0;\n}\nvar v2 = l2;\nfunction o2() {\n  this.sum = 0, this.seen = 0, this.want = 0, this.pos = 0, this.size = 0, this.bag = null, this.nVbrNumFrames = 0, this.nBytesWritten = 0, this.TotalFrameSize = 0;\n}\nvar h2 = o2, Y1 = Q0, u2 = Y1.new_byte, f2 = Y1.new_double, b1 = Y1.new_float, p1 = Y1.new_float_n, d1 = Y1.new_int, re = Y1.new_int_n, m2 = s2, b2 = Ia, c2 = v2, S2 = h2, je = Ea(), W0 = t1(), d2 = ie;\nE1.MFSIZE = 3 * 1152 + W0.ENCDELAY - W0.MDCTDELAY;\nE1.MAX_HEADER_BUF = 256;\nE1.MAX_BITS_PER_CHANNEL = 4095;\nE1.MAX_BITS_PER_GRANULE = 7680;\nE1.BPC = 320;\nfunction E1() {\n  var w = 40;\n  this.Class_ID = 0, this.lame_encode_frame_init = 0, this.iteration_init_init = 0, this.fill_buffer_resample_init = 0, this.mfbuf = p1([2, E1.MFSIZE]), this.mode_gr = 0, this.channels_in = 0, this.channels_out = 0, this.resample_ratio = 0, this.mf_samples_to_encode = 0, this.mf_size = 0, this.VBR_min_bitrate = 0, this.VBR_max_bitrate = 0, this.bitrate_index = 0, this.samplerate_index = 0, this.mode_ext = 0, this.lowpass1 = 0, this.lowpass2 = 0, this.highpass1 = 0, this.highpass2 = 0, this.noise_shaping = 0, this.noise_shaping_amp = 0, this.substep_shaping = 0, this.psymodel = 0, this.noise_shaping_stop = 0, this.subblock_gain = 0, this.use_best_huffman = 0, this.full_outer_loop = 0, this.l3_side = new m2(), this.ms_ratio = b1(2), this.padding = 0, this.frac_SpF = 0, this.slot_lag = 0, this.tag_spec = null, this.nMusicCRC = 0, this.OldValue = d1(2), this.CurrentStep = d1(2), this.masking_lower = 0, this.bv_scf = d1(576), this.pseudohalf = d1(d2.SFBMAX), this.sfb21_extra = !1, this.inbuf_old = new Array(2), this.blackfilt = new Array(2 * E1.BPC + 1), this.itime = f2(2), this.sideinfo_len = 0, this.sb_sample = p1([2, 2, 18, W0.SBLIMIT]), this.amp_filter = b1(32);\n  function Z() {\n    this.write_timing = 0, this.ptr = 0, this.buf = u2(w);\n  }\n  this.header = new Array(E1.MAX_HEADER_BUF), this.h_ptr = 0, this.w_ptr = 0, this.ancillary_flag = 0, this.ResvSize = 0, this.ResvMax = 0, this.scalefac_band = new b2(), this.minval_l = b1(W0.CBANDS), this.minval_s = b1(W0.CBANDS), this.nb_1 = p1([4, W0.CBANDS]), this.nb_2 = p1([4, W0.CBANDS]), this.nb_s1 = p1([4, W0.CBANDS]), this.nb_s2 = p1([4, W0.CBANDS]), this.s3_ss = null, this.s3_ll = null, this.decay = 0, this.thm = new Array(4), this.en = new Array(4), this.tot_ener = b1(4), this.loudness_sq = p1([2, 2]), this.loudness_sq_save = b1(2), this.mld_l = b1(W0.SBMAX_l), this.mld_s = b1(W0.SBMAX_s), this.bm_l = d1(W0.SBMAX_l), this.bo_l = d1(W0.SBMAX_l), this.bm_s = d1(W0.SBMAX_s), this.bo_s = d1(W0.SBMAX_s), this.npart_l = 0, this.npart_s = 0, this.s3ind = re([W0.CBANDS, 2]), this.s3ind_s = re([W0.CBANDS, 2]), this.numlines_s = d1(W0.CBANDS), this.numlines_l = d1(W0.CBANDS), this.rnumlines_l = b1(W0.CBANDS), this.mld_cb_l = b1(W0.CBANDS), this.mld_cb_s = b1(W0.CBANDS), this.numlines_s_num1 = 0, this.numlines_l_num1 = 0, this.pe = b1(4), this.ms_ratio_s_old = 0, this.ms_ratio_l_old = 0, this.ms_ener_ratio_old = 0, this.blocktype_old = d1(2), this.nsPsy = new c2(), this.VBR_seek_table = new S2(), this.ATH = null, this.PSY = null, this.nogap_total = 0, this.nogap_current = 0, this.decode_on_the_fly = !0, this.findReplayGain = !0, this.findPeakSample = !0, this.PeakSample = 0, this.RadioGain = 0, this.AudiophileGain = 0, this.rgdata = null, this.noclipGainChange = 0, this.noclipScale = 0, this.bitrate_stereoMode_Hist = re([16, 4 + 1]), this.bitrate_blockType_Hist = re([16, 4 + 1 + 1]), this.pinfo = null, this.hip = null, this.in_buffer_nsamples = 0, this.in_buffer_0 = null, this.in_buffer_1 = null, this.iteration_loop = null;\n  for (var X = 0; X < this.en.length; X++)\n    this.en[X] = new je();\n  for (var X = 0; X < this.thm.length; X++)\n    this.thm[X] = new je();\n  for (var X = 0; X < this.header.length; X++)\n    this.header[X] = new Z();\n}\nvar ne = E1, A2 = Q0, H1 = A2.new_float, V1 = t1();\nfunction R2() {\n  this.useAdjust = 0, this.aaSensitivityP = 0, this.adjust = 0, this.adjustLimit = 0, this.decay = 0, this.floor = 0, this.l = H1(V1.SBMAX_l), this.s = H1(V1.SBMAX_s), this.psfb21 = H1(V1.PSFB21), this.psfb12 = H1(V1.PSFB12), this.cb_l = H1(V1.CBANDS), this.cb_s = H1(V1.CBANDS), this.eql_w = H1(V1.BLKSIZE / 2);\n}\nvar x2 = R2, La = Q0, _1 = La.System, ze = La.Arrays;\nj0.STEPS_per_dB = 100;\nj0.MAX_dB = 120;\nj0.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nj0.GAIN_ANALYSIS_ERROR = 0;\nj0.GAIN_ANALYSIS_OK = 1;\nj0.INIT_GAIN_ANALYSIS_ERROR = 0;\nj0.INIT_GAIN_ANALYSIS_OK = 1;\nj0.YULE_ORDER = 10;\nj0.MAX_ORDER = j0.YULE_ORDER;\nj0.MAX_SAMP_FREQ = 48e3;\nj0.RMS_WINDOW_TIME_NUMERATOR = 1;\nj0.RMS_WINDOW_TIME_DENOMINATOR = 20;\nj0.MAX_SAMPLES_PER_WINDOW = j0.MAX_SAMP_FREQ * j0.RMS_WINDOW_TIME_NUMERATOR / j0.RMS_WINDOW_TIME_DENOMINATOR + 1;\nfunction j0() {\n  var w = 64.82, Z = 0.95, X = j0.RMS_WINDOW_TIME_NUMERATOR, z = j0.RMS_WINDOW_TIME_DENOMINATOR, u0 = [\n    [\n      0.038575994352,\n      -3.84664617118067,\n      -0.02160367184185,\n      7.81501653005538,\n      -0.00123395316851,\n      -11.34170355132042,\n      -9291677959e-14,\n      13.05504219327545,\n      -0.01655260341619,\n      -12.28759895145294,\n      0.02161526843274,\n      9.4829380631979,\n      -0.02074045215285,\n      -5.87257861775999,\n      0.00594298065125,\n      2.75465861874613,\n      0.00306428023191,\n      -0.86984376593551,\n      12025322027e-14,\n      0.13919314567432,\n      0.00288463683916\n    ],\n    [\n      0.0541865640643,\n      -3.47845948550071,\n      -0.02911007808948,\n      6.36317777566148,\n      -0.00848709379851,\n      -8.54751527471874,\n      -0.00851165645469,\n      9.4769360780128,\n      -0.00834990904936,\n      -8.81498681370155,\n      0.02245293253339,\n      6.85401540936998,\n      -0.02596338512915,\n      -4.39470996079559,\n      0.01624864962975,\n      2.19611684890774,\n      -0.00240879051584,\n      -0.75104302451432,\n      0.00674613682247,\n      0.13149317958808,\n      -0.00187763777362\n    ],\n    [\n      0.15457299681924,\n      -2.37898834973084,\n      -0.09331049056315,\n      2.84868151156327,\n      -0.06247880153653,\n      -2.64577170229825,\n      0.02163541888798,\n      2.23697657451713,\n      -0.05588393329856,\n      -1.67148153367602,\n      0.04781476674921,\n      1.00595954808547,\n      0.00222312597743,\n      -0.45953458054983,\n      0.03174092540049,\n      0.16378164858596,\n      -0.01390589421898,\n      -0.05032077717131,\n      0.00651420667831,\n      0.0234789740702,\n      -0.00881362733839\n    ],\n    [\n      0.30296907319327,\n      -1.61273165137247,\n      -0.22613988682123,\n      1.0797749225997,\n      -0.08587323730772,\n      -0.2565625775407,\n      0.03282930172664,\n      -0.1627671912044,\n      -0.00915702933434,\n      -0.22638893773906,\n      -0.02364141202522,\n      0.39120800788284,\n      -0.00584456039913,\n      -0.22138138954925,\n      0.06276101321749,\n      0.04500235387352,\n      -828086748e-14,\n      0.02005851806501,\n      0.00205861885564,\n      0.00302439095741,\n      -0.02950134983287\n    ],\n    [\n      0.33642304856132,\n      -1.49858979367799,\n      -0.2557224142557,\n      0.87350271418188,\n      -0.11828570177555,\n      0.12205022308084,\n      0.11921148675203,\n      -0.80774944671438,\n      -0.07834489609479,\n      0.47854794562326,\n      -0.0046997791438,\n      -0.12453458140019,\n      -0.0058950022444,\n      -0.04067510197014,\n      0.05724228140351,\n      0.08333755284107,\n      0.00832043980773,\n      -0.04237348025746,\n      -0.0163538138454,\n      0.02977207319925,\n      -0.0176017656815\n    ],\n    [\n      0.4491525660845,\n      -0.62820619233671,\n      -0.14351757464547,\n      0.29661783706366,\n      -0.22784394429749,\n      -0.372563729424,\n      -0.01419140100551,\n      0.00213767857124,\n      0.04078262797139,\n      -0.42029820170918,\n      -0.12398163381748,\n      0.22199650564824,\n      0.04097565135648,\n      0.00613424350682,\n      0.10478503600251,\n      0.06747620744683,\n      -0.01863887810927,\n      0.05784820375801,\n      -0.03193428438915,\n      0.03222754072173,\n      0.00541907748707\n    ],\n    [\n      0.56619470757641,\n      -1.04800335126349,\n      -0.75464456939302,\n      0.29156311971249,\n      0.1624213774223,\n      -0.26806001042947,\n      0.16744243493672,\n      0.00819999645858,\n      -0.18901604199609,\n      0.45054734505008,\n      0.3093178284183,\n      -0.33032403314006,\n      -0.27562961986224,\n      0.0673936833311,\n      0.00647310677246,\n      -0.04784254229033,\n      0.08647503780351,\n      0.01639907836189,\n      -0.0378898455484,\n      0.01807364323573,\n      -0.00588215443421\n    ],\n    [\n      0.58100494960553,\n      -0.51035327095184,\n      -0.53174909058578,\n      -0.31863563325245,\n      -0.14289799034253,\n      -0.20256413484477,\n      0.17520704835522,\n      0.1472815413433,\n      0.02377945217615,\n      0.38952639978999,\n      0.15558449135573,\n      -0.23313271880868,\n      -0.25344790059353,\n      -0.05246019024463,\n      0.01628462406333,\n      -0.02505961724053,\n      0.06920467763959,\n      0.02442357316099,\n      -0.03721611395801,\n      0.01818801111503,\n      -0.00749618797172\n    ],\n    [\n      0.53648789255105,\n      -0.2504987195602,\n      -0.42163034350696,\n      -0.43193942311114,\n      -0.00275953611929,\n      -0.03424681017675,\n      0.04267842219415,\n      -0.04678328784242,\n      -0.10214864179676,\n      0.26408300200955,\n      0.14590772289388,\n      0.15113130533216,\n      -0.02459864859345,\n      -0.17556493366449,\n      -0.11202315195388,\n      -0.18823009262115,\n      -0.04060034127,\n      0.05477720428674,\n      0.0478866554818,\n      0.0470440968812,\n      -0.02217936801134\n    ]\n  ], W = [\n    [\n      0.98621192462708,\n      -1.97223372919527,\n      -1.97242384925416,\n      0.97261396931306,\n      0.98621192462708\n    ],\n    [\n      0.98500175787242,\n      -1.96977855582618,\n      -1.97000351574484,\n      0.9702284756635,\n      0.98500175787242\n    ],\n    [\n      0.97938932735214,\n      -1.95835380975398,\n      -1.95877865470428,\n      0.95920349965459,\n      0.97938932735214\n    ],\n    [\n      0.97531843204928,\n      -1.95002759149878,\n      -1.95063686409857,\n      0.95124613669835,\n      0.97531843204928\n    ],\n    [\n      0.97316523498161,\n      -1.94561023566527,\n      -1.94633046996323,\n      0.94705070426118,\n      0.97316523498161\n    ],\n    [\n      0.96454515552826,\n      -1.92783286977036,\n      -1.92909031105652,\n      0.93034775234268,\n      0.96454515552826\n    ],\n    [\n      0.96009142950541,\n      -1.91858953033784,\n      -1.92018285901082,\n      0.92177618768381,\n      0.96009142950541\n    ],\n    [\n      0.95856916599601,\n      -1.9154210807478,\n      -1.91713833199203,\n      0.91885558323625,\n      0.95856916599601\n    ],\n    [\n      0.94597685600279,\n      -1.88903307939452,\n      -1.89195371200558,\n      0.89487434461664,\n      0.94597685600279\n    ]\n  ];\n  function Q(m, O, s0, K, t0, U) {\n    for (; t0-- != 0; )\n      s0[K] = 1e-10 + m[O + 0] * U[0] - s0[K - 1] * U[1] + m[O - 1] * U[2] - s0[K - 2] * U[3] + m[O - 2] * U[4] - s0[K - 3] * U[5] + m[O - 3] * U[6] - s0[K - 4] * U[7] + m[O - 4] * U[8] - s0[K - 5] * U[9] + m[O - 5] * U[10] - s0[K - 6] * U[11] + m[O - 6] * U[12] - s0[K - 7] * U[13] + m[O - 7] * U[14] - s0[K - 8] * U[15] + m[O - 8] * U[16] - s0[K - 9] * U[17] + m[O - 9] * U[18] - s0[K - 10] * U[19] + m[O - 10] * U[20], ++K, ++O;\n  }\n  function D(m, O, s0, K, t0, U) {\n    for (; t0-- != 0; )\n      s0[K] = m[O + 0] * U[0] - s0[K - 1] * U[1] + m[O - 1] * U[2] - s0[K - 2] * U[3] + m[O - 2] * U[4], ++K, ++O;\n  }\n  function g(m, O) {\n    for (var s0 = 0; s0 < MAX_ORDER; s0++)\n      m.linprebuf[s0] = m.lstepbuf[s0] = m.loutbuf[s0] = m.rinprebuf[s0] = m.rstepbuf[s0] = m.routbuf[s0] = 0;\n    switch (0 | O) {\n      case 48e3:\n        m.reqindex = 0;\n        break;\n      case 44100:\n        m.reqindex = 1;\n        break;\n      case 32e3:\n        m.reqindex = 2;\n        break;\n      case 24e3:\n        m.reqindex = 3;\n        break;\n      case 22050:\n        m.reqindex = 4;\n        break;\n      case 16e3:\n        m.reqindex = 5;\n        break;\n      case 12e3:\n        m.reqindex = 6;\n        break;\n      case 11025:\n        m.reqindex = 7;\n        break;\n      case 8e3:\n        m.reqindex = 8;\n        break;\n      default:\n        return INIT_GAIN_ANALYSIS_ERROR;\n    }\n    return m.sampleWindow = 0 | (O * X + z - 1) / z, m.lsum = 0, m.rsum = 0, m.totsamp = 0, ze.ill(m.A, 0), INIT_GAIN_ANALYSIS_OK;\n  }\n  this.InitGainAnalysis = function(m, O) {\n    return g(m, O) != INIT_GAIN_ANALYSIS_OK ? INIT_GAIN_ANALYSIS_ERROR : (m.linpre = MAX_ORDER, m.rinpre = MAX_ORDER, m.lstep = MAX_ORDER, m.rstep = MAX_ORDER, m.lout = MAX_ORDER, m.rout = MAX_ORDER, ze.fill(m.B, 0), INIT_GAIN_ANALYSIS_OK);\n  };\n  function f0(m) {\n    return m * m;\n  }\n  this.AnalyzeSamples = function(m, O, s0, K, t0, U, R) {\n    var o, u, d, e, l, M, p;\n    if (U == 0)\n      return GAIN_ANALYSIS_OK;\n    switch (p = 0, l = U, R) {\n      case 1:\n        K = O, t0 = s0;\n        break;\n      case 2:\n        break;\n      default:\n        return GAIN_ANALYSIS_ERROR;\n    }\n    for (U < MAX_ORDER ? (_1.arraycopy(\n      O,\n      s0,\n      m.linprebuf,\n      MAX_ORDER,\n      U\n    ), _1.arraycopy(\n      K,\n      t0,\n      m.rinprebuf,\n      MAX_ORDER,\n      U\n    )) : (_1.arraycopy(\n      O,\n      s0,\n      m.linprebuf,\n      MAX_ORDER,\n      MAX_ORDER\n    ), _1.arraycopy(\n      K,\n      t0,\n      m.rinprebuf,\n      MAX_ORDER,\n      MAX_ORDER\n    )); l > 0; ) {\n      M = l > m.sampleWindow - m.totsamp ? m.sampleWindow - m.totsamp : l, p < MAX_ORDER ? (o = m.linpre + p, u = m.linprebuf, d = m.rinpre + p, e = m.rinprebuf, M > MAX_ORDER - p && (M = MAX_ORDER - p)) : (o = s0 + p, u = O, d = t0 + p, e = K), Q(u, o, m.lstepbuf, m.lstep + m.totsamp, M, u0[m.reqindex]), Q(e, d, m.rstepbuf, m.rstep + m.totsamp, M, u0[m.reqindex]), D(\n        m.lstepbuf,\n        m.lstep + m.totsamp,\n        m.loutbuf,\n        m.lout + m.totsamp,\n        M,\n        W[m.reqindex]\n      ), D(\n        m.rstepbuf,\n        m.rstep + m.totsamp,\n        m.routbuf,\n        m.rout + m.totsamp,\n        M,\n        W[m.reqindex]\n      ), o = m.lout + m.totsamp, u = m.loutbuf, d = m.rout + m.totsamp, e = m.routbuf;\n      for (var H = M % 8; H-- != 0; )\n        m.lsum += f0(u[o++]), m.rsum += f0(e[d++]);\n      for (H = M / 8; H-- != 0; )\n        m.lsum += f0(u[o + 0]) + f0(u[o + 1]) + f0(u[o + 2]) + f0(u[o + 3]) + f0(u[o + 4]) + f0(u[o + 5]) + f0(u[o + 6]) + f0(u[o + 7]), o += 8, m.rsum += f0(e[d + 0]) + f0(e[d + 1]) + f0(e[d + 2]) + f0(e[d + 3]) + f0(e[d + 4]) + f0(e[d + 5]) + f0(e[d + 6]) + f0(e[d + 7]), d += 8;\n      if (l -= M, p += M, m.totsamp += M, m.totsamp == m.sampleWindow) {\n        var B = j0.STEPS_per_dB * 10 * Math.log10((m.lsum + m.rsum) / m.totsamp * 0.5 + 1e-37), I = B <= 0 ? 0 : 0 | B;\n        I >= m.A.length && (I = m.A.length - 1), m.A[I]++, m.lsum = m.rsum = 0, _1.arraycopy(\n          m.loutbuf,\n          m.totsamp,\n          m.loutbuf,\n          0,\n          MAX_ORDER\n        ), _1.arraycopy(\n          m.routbuf,\n          m.totsamp,\n          m.routbuf,\n          0,\n          MAX_ORDER\n        ), _1.arraycopy(\n          m.lstepbuf,\n          m.totsamp,\n          m.lstepbuf,\n          0,\n          MAX_ORDER\n        ), _1.arraycopy(\n          m.rstepbuf,\n          m.totsamp,\n          m.rstepbuf,\n          0,\n          MAX_ORDER\n        ), m.totsamp = 0;\n      }\n      if (m.totsamp > m.sampleWindow)\n        return GAIN_ANALYSIS_ERROR;\n    }\n    return U < MAX_ORDER ? (_1.arraycopy(\n      m.linprebuf,\n      U,\n      m.linprebuf,\n      0,\n      MAX_ORDER - U\n    ), _1.arraycopy(\n      m.rinprebuf,\n      U,\n      m.rinprebuf,\n      0,\n      MAX_ORDER - U\n    ), _1.arraycopy(\n      O,\n      s0,\n      m.linprebuf,\n      MAX_ORDER - U,\n      U\n    ), _1.arraycopy(\n      K,\n      t0,\n      m.rinprebuf,\n      MAX_ORDER - U,\n      U\n    )) : (_1.arraycopy(O, s0 + U - MAX_ORDER, m.linprebuf, 0, MAX_ORDER), _1.arraycopy(K, t0 + U - MAX_ORDER, m.rinprebuf, 0, MAX_ORDER)), GAIN_ANALYSIS_OK;\n  };\n  function A(m, O) {\n    var s0, K = 0;\n    for (s0 = 0; s0 < O; s0++)\n      K += m[s0];\n    if (K == 0)\n      return GAIN_NOT_ENOUGH_SAMPLES;\n    var t0 = 0 | Math.ceil(K * (1 - Z));\n    for (s0 = O; s0-- > 0 && !((t0 -= m[s0]) <= 0); )\n      ;\n    return w - s0 / j0.STEPS_per_dB;\n  }\n  this.GetTitleGain = function(m) {\n    for (var O = A(m.A, m.A.length), s0 = 0; s0 < m.A.length; s0++)\n      m.B[s0] += m.A[s0], m.A[s0] = 0;\n    for (var s0 = 0; s0 < MAX_ORDER; s0++)\n      m.linprebuf[s0] = m.lstepbuf[s0] = m.loutbuf[s0] = m.rinprebuf[s0] = m.rstepbuf[s0] = m.routbuf[s0] = 0;\n    return m.totsamp = 0, m.lsum = m.rsum = 0, O;\n  };\n}\nvar Na = j0, pa = Q0, k1 = pa.new_float, Je = pa.new_int, l1 = Na;\nfunction M2() {\n  this.linprebuf = k1(l1.MAX_ORDER * 2), this.linpre = 0, this.lstepbuf = k1(l1.MAX_SAMPLES_PER_WINDOW + l1.MAX_ORDER), this.lstep = 0, this.loutbuf = k1(l1.MAX_SAMPLES_PER_WINDOW + l1.MAX_ORDER), this.lout = 0, this.rinprebuf = k1(l1.MAX_ORDER * 2), this.rinpre = 0, this.rstepbuf = k1(l1.MAX_SAMPLES_PER_WINDOW + l1.MAX_ORDER), this.rstep = 0, this.routbuf = k1(l1.MAX_SAMPLES_PER_WINDOW + l1.MAX_ORDER), this.rout = 0, this.sampleWindow = 0, this.totsamp = 0, this.lsum = 0, this.rsum = 0, this.freqindex = 0, this.first = 0, this.A = Je(0 | l1.STEPS_per_dB * l1.MAX_dB), this.B = Je(0 | l1.STEPS_per_dB * l1.MAX_dB);\n}\nvar E2 = M2;\nfunction B2(w) {\n  this.bits = w;\n}\nvar Ha = B2, pe = Q0, ge = pe.new_float, T2 = pe.new_int, ea = pe.assert, y2 = Ha, aa = t1(), w2 = ie, I2 = ne;\nfunction L2(w) {\n  var Z = w;\n  this.quantize = Z, this.iteration_loop = function(X, z, u0, W) {\n    var Q = X.internal_flags, D = ge(w2.SFBMAX), g = ge(576), f0 = T2(2), A = 0, m, O = Q.l3_side, s0 = new y2(A);\n    this.quantize.rv.ResvFrameBegin(X, s0), A = s0.bits;\n    for (var K = 0; K < Q.mode_gr; K++) {\n      m = this.quantize.qupvt.on_pe(\n        X,\n        z,\n        f0,\n        A,\n        K,\n        K\n      ), Q.mode_ext == aa.MPG_MD_MS_LR && (this.quantize.ms_convert(Q.l3_side, K), this.quantize.qupvt.reduce_side(\n        f0,\n        u0[K],\n        A,\n        m\n      ));\n      for (var t0 = 0; t0 < Q.channels_out; t0++) {\n        var U, R, o = O.tt[K][t0];\n        o.block_type != aa.SHORT_TYPE ? (U = 0, R = Q.PSY.mask_adjust - U) : (U = 0, R = Q.PSY.mask_adjust_short - U), Q.masking_lower = Math.pow(\n          10,\n          R * 0.1\n        ), this.quantize.init_outer_loop(Q, o), this.quantize.init_xrpow(Q, o, g) && (this.quantize.qupvt.calc_xmin(\n          X,\n          W[K][t0],\n          o,\n          D\n        ), this.quantize.outer_loop(\n          X,\n          o,\n          D,\n          g,\n          t0,\n          f0[t0]\n        )), this.quantize.iteration_finish_one(Q, K, t0), ea(o.part2_3_length <= I2.MAX_BITS_PER_CHANNEL), ea(o.part2_3_length <= f0[t0]);\n      }\n    }\n    this.quantize.rv.ResvFrameEnd(Q, A);\n  };\n}\nvar N2 = L2;\nfunction q0(w, Z, X, z) {\n  this.xlen = w, this.linmax = Z, this.table = X, this.hlen = z;\n}\nvar o0 = {};\no0.t1HB = [\n  1,\n  1,\n  1,\n  0\n];\no0.t2HB = [\n  1,\n  2,\n  1,\n  3,\n  1,\n  1,\n  3,\n  2,\n  0\n];\no0.t3HB = [\n  3,\n  2,\n  1,\n  1,\n  1,\n  1,\n  3,\n  2,\n  0\n];\no0.t5HB = [\n  1,\n  2,\n  6,\n  5,\n  3,\n  1,\n  4,\n  4,\n  7,\n  5,\n  7,\n  1,\n  6,\n  1,\n  1,\n  0\n];\no0.t6HB = [\n  7,\n  3,\n  5,\n  1,\n  6,\n  2,\n  3,\n  2,\n  5,\n  4,\n  4,\n  1,\n  3,\n  3,\n  2,\n  0\n];\no0.t7HB = [\n  1,\n  2,\n  10,\n  19,\n  16,\n  10,\n  3,\n  3,\n  7,\n  10,\n  5,\n  3,\n  11,\n  4,\n  13,\n  17,\n  8,\n  4,\n  12,\n  11,\n  18,\n  15,\n  11,\n  2,\n  7,\n  6,\n  9,\n  14,\n  3,\n  1,\n  6,\n  4,\n  5,\n  3,\n  2,\n  0\n];\no0.t8HB = [\n  3,\n  4,\n  6,\n  18,\n  12,\n  5,\n  5,\n  1,\n  2,\n  16,\n  9,\n  3,\n  7,\n  3,\n  5,\n  14,\n  7,\n  3,\n  19,\n  17,\n  15,\n  13,\n  10,\n  4,\n  13,\n  5,\n  8,\n  11,\n  5,\n  1,\n  12,\n  4,\n  4,\n  1,\n  1,\n  0\n];\no0.t9HB = [\n  7,\n  5,\n  9,\n  14,\n  15,\n  7,\n  6,\n  4,\n  5,\n  5,\n  6,\n  7,\n  7,\n  6,\n  8,\n  8,\n  8,\n  5,\n  15,\n  6,\n  9,\n  10,\n  5,\n  1,\n  11,\n  7,\n  9,\n  6,\n  4,\n  1,\n  14,\n  4,\n  6,\n  2,\n  6,\n  0\n];\no0.t10HB = [\n  1,\n  2,\n  10,\n  23,\n  35,\n  30,\n  12,\n  17,\n  3,\n  3,\n  8,\n  12,\n  18,\n  21,\n  12,\n  7,\n  11,\n  9,\n  15,\n  21,\n  32,\n  40,\n  19,\n  6,\n  14,\n  13,\n  22,\n  34,\n  46,\n  23,\n  18,\n  7,\n  20,\n  19,\n  33,\n  47,\n  27,\n  22,\n  9,\n  3,\n  31,\n  22,\n  41,\n  26,\n  21,\n  20,\n  5,\n  3,\n  14,\n  13,\n  10,\n  11,\n  16,\n  6,\n  5,\n  1,\n  9,\n  8,\n  7,\n  8,\n  4,\n  4,\n  2,\n  0\n];\no0.t11HB = [\n  3,\n  4,\n  10,\n  24,\n  34,\n  33,\n  21,\n  15,\n  5,\n  3,\n  4,\n  10,\n  32,\n  17,\n  11,\n  10,\n  11,\n  7,\n  13,\n  18,\n  30,\n  31,\n  20,\n  5,\n  25,\n  11,\n  19,\n  59,\n  27,\n  18,\n  12,\n  5,\n  35,\n  33,\n  31,\n  58,\n  30,\n  16,\n  7,\n  5,\n  28,\n  26,\n  32,\n  19,\n  17,\n  15,\n  8,\n  14,\n  14,\n  12,\n  9,\n  13,\n  14,\n  9,\n  4,\n  1,\n  11,\n  4,\n  6,\n  6,\n  6,\n  3,\n  2,\n  0\n];\no0.t12HB = [\n  9,\n  6,\n  16,\n  33,\n  41,\n  39,\n  38,\n  26,\n  7,\n  5,\n  6,\n  9,\n  23,\n  16,\n  26,\n  11,\n  17,\n  7,\n  11,\n  14,\n  21,\n  30,\n  10,\n  7,\n  17,\n  10,\n  15,\n  12,\n  18,\n  28,\n  14,\n  5,\n  32,\n  13,\n  22,\n  19,\n  18,\n  16,\n  9,\n  5,\n  40,\n  17,\n  31,\n  29,\n  17,\n  13,\n  4,\n  2,\n  27,\n  12,\n  11,\n  15,\n  10,\n  7,\n  4,\n  1,\n  27,\n  12,\n  8,\n  12,\n  6,\n  3,\n  1,\n  0\n];\no0.t13HB = [\n  1,\n  5,\n  14,\n  21,\n  34,\n  51,\n  46,\n  71,\n  42,\n  52,\n  68,\n  52,\n  67,\n  44,\n  43,\n  19,\n  3,\n  4,\n  12,\n  19,\n  31,\n  26,\n  44,\n  33,\n  31,\n  24,\n  32,\n  24,\n  31,\n  35,\n  22,\n  14,\n  15,\n  13,\n  23,\n  36,\n  59,\n  49,\n  77,\n  65,\n  29,\n  40,\n  30,\n  40,\n  27,\n  33,\n  42,\n  16,\n  22,\n  20,\n  37,\n  61,\n  56,\n  79,\n  73,\n  64,\n  43,\n  76,\n  56,\n  37,\n  26,\n  31,\n  25,\n  14,\n  35,\n  16,\n  60,\n  57,\n  97,\n  75,\n  114,\n  91,\n  54,\n  73,\n  55,\n  41,\n  48,\n  53,\n  23,\n  24,\n  58,\n  27,\n  50,\n  96,\n  76,\n  70,\n  93,\n  84,\n  77,\n  58,\n  79,\n  29,\n  74,\n  49,\n  41,\n  17,\n  47,\n  45,\n  78,\n  74,\n  115,\n  94,\n  90,\n  79,\n  69,\n  83,\n  71,\n  50,\n  59,\n  38,\n  36,\n  15,\n  72,\n  34,\n  56,\n  95,\n  92,\n  85,\n  91,\n  90,\n  86,\n  73,\n  77,\n  65,\n  51,\n  44,\n  43,\n  42,\n  43,\n  20,\n  30,\n  44,\n  55,\n  78,\n  72,\n  87,\n  78,\n  61,\n  46,\n  54,\n  37,\n  30,\n  20,\n  16,\n  53,\n  25,\n  41,\n  37,\n  44,\n  59,\n  54,\n  81,\n  66,\n  76,\n  57,\n  54,\n  37,\n  18,\n  39,\n  11,\n  35,\n  33,\n  31,\n  57,\n  42,\n  82,\n  72,\n  80,\n  47,\n  58,\n  55,\n  21,\n  22,\n  26,\n  38,\n  22,\n  53,\n  25,\n  23,\n  38,\n  70,\n  60,\n  51,\n  36,\n  55,\n  26,\n  34,\n  23,\n  27,\n  14,\n  9,\n  7,\n  34,\n  32,\n  28,\n  39,\n  49,\n  75,\n  30,\n  52,\n  48,\n  40,\n  52,\n  28,\n  18,\n  17,\n  9,\n  5,\n  45,\n  21,\n  34,\n  64,\n  56,\n  50,\n  49,\n  45,\n  31,\n  19,\n  12,\n  15,\n  10,\n  7,\n  6,\n  3,\n  48,\n  23,\n  20,\n  39,\n  36,\n  35,\n  53,\n  21,\n  16,\n  23,\n  13,\n  10,\n  6,\n  1,\n  4,\n  2,\n  16,\n  15,\n  17,\n  27,\n  25,\n  20,\n  29,\n  11,\n  17,\n  12,\n  16,\n  8,\n  1,\n  1,\n  0,\n  1\n];\no0.t15HB = [\n  7,\n  12,\n  18,\n  53,\n  47,\n  76,\n  124,\n  108,\n  89,\n  123,\n  108,\n  119,\n  107,\n  81,\n  122,\n  63,\n  13,\n  5,\n  16,\n  27,\n  46,\n  36,\n  61,\n  51,\n  42,\n  70,\n  52,\n  83,\n  65,\n  41,\n  59,\n  36,\n  19,\n  17,\n  15,\n  24,\n  41,\n  34,\n  59,\n  48,\n  40,\n  64,\n  50,\n  78,\n  62,\n  80,\n  56,\n  33,\n  29,\n  28,\n  25,\n  43,\n  39,\n  63,\n  55,\n  93,\n  76,\n  59,\n  93,\n  72,\n  54,\n  75,\n  50,\n  29,\n  52,\n  22,\n  42,\n  40,\n  67,\n  57,\n  95,\n  79,\n  72,\n  57,\n  89,\n  69,\n  49,\n  66,\n  46,\n  27,\n  77,\n  37,\n  35,\n  66,\n  58,\n  52,\n  91,\n  74,\n  62,\n  48,\n  79,\n  63,\n  90,\n  62,\n  40,\n  38,\n  125,\n  32,\n  60,\n  56,\n  50,\n  92,\n  78,\n  65,\n  55,\n  87,\n  71,\n  51,\n  73,\n  51,\n  70,\n  30,\n  109,\n  53,\n  49,\n  94,\n  88,\n  75,\n  66,\n  122,\n  91,\n  73,\n  56,\n  42,\n  64,\n  44,\n  21,\n  25,\n  90,\n  43,\n  41,\n  77,\n  73,\n  63,\n  56,\n  92,\n  77,\n  66,\n  47,\n  67,\n  48,\n  53,\n  36,\n  20,\n  71,\n  34,\n  67,\n  60,\n  58,\n  49,\n  88,\n  76,\n  67,\n  106,\n  71,\n  54,\n  38,\n  39,\n  23,\n  15,\n  109,\n  53,\n  51,\n  47,\n  90,\n  82,\n  58,\n  57,\n  48,\n  72,\n  57,\n  41,\n  23,\n  27,\n  62,\n  9,\n  86,\n  42,\n  40,\n  37,\n  70,\n  64,\n  52,\n  43,\n  70,\n  55,\n  42,\n  25,\n  29,\n  18,\n  11,\n  11,\n  118,\n  68,\n  30,\n  55,\n  50,\n  46,\n  74,\n  65,\n  49,\n  39,\n  24,\n  16,\n  22,\n  13,\n  14,\n  7,\n  91,\n  44,\n  39,\n  38,\n  34,\n  63,\n  52,\n  45,\n  31,\n  52,\n  28,\n  19,\n  14,\n  8,\n  9,\n  3,\n  123,\n  60,\n  58,\n  53,\n  47,\n  43,\n  32,\n  22,\n  37,\n  24,\n  17,\n  12,\n  15,\n  10,\n  2,\n  1,\n  71,\n  37,\n  34,\n  30,\n  28,\n  20,\n  17,\n  26,\n  21,\n  16,\n  10,\n  6,\n  8,\n  6,\n  2,\n  0\n];\no0.t16HB = [\n  1,\n  5,\n  14,\n  44,\n  74,\n  63,\n  110,\n  93,\n  172,\n  149,\n  138,\n  242,\n  225,\n  195,\n  376,\n  17,\n  3,\n  4,\n  12,\n  20,\n  35,\n  62,\n  53,\n  47,\n  83,\n  75,\n  68,\n  119,\n  201,\n  107,\n  207,\n  9,\n  15,\n  13,\n  23,\n  38,\n  67,\n  58,\n  103,\n  90,\n  161,\n  72,\n  127,\n  117,\n  110,\n  209,\n  206,\n  16,\n  45,\n  21,\n  39,\n  69,\n  64,\n  114,\n  99,\n  87,\n  158,\n  140,\n  252,\n  212,\n  199,\n  387,\n  365,\n  26,\n  75,\n  36,\n  68,\n  65,\n  115,\n  101,\n  179,\n  164,\n  155,\n  264,\n  246,\n  226,\n  395,\n  382,\n  362,\n  9,\n  66,\n  30,\n  59,\n  56,\n  102,\n  185,\n  173,\n  265,\n  142,\n  253,\n  232,\n  400,\n  388,\n  378,\n  445,\n  16,\n  111,\n  54,\n  52,\n  100,\n  184,\n  178,\n  160,\n  133,\n  257,\n  244,\n  228,\n  217,\n  385,\n  366,\n  715,\n  10,\n  98,\n  48,\n  91,\n  88,\n  165,\n  157,\n  148,\n  261,\n  248,\n  407,\n  397,\n  372,\n  380,\n  889,\n  884,\n  8,\n  85,\n  84,\n  81,\n  159,\n  156,\n  143,\n  260,\n  249,\n  427,\n  401,\n  392,\n  383,\n  727,\n  713,\n  708,\n  7,\n  154,\n  76,\n  73,\n  141,\n  131,\n  256,\n  245,\n  426,\n  406,\n  394,\n  384,\n  735,\n  359,\n  710,\n  352,\n  11,\n  139,\n  129,\n  67,\n  125,\n  247,\n  233,\n  229,\n  219,\n  393,\n  743,\n  737,\n  720,\n  885,\n  882,\n  439,\n  4,\n  243,\n  120,\n  118,\n  115,\n  227,\n  223,\n  396,\n  746,\n  742,\n  736,\n  721,\n  712,\n  706,\n  223,\n  436,\n  6,\n  202,\n  224,\n  222,\n  218,\n  216,\n  389,\n  386,\n  381,\n  364,\n  888,\n  443,\n  707,\n  440,\n  437,\n  1728,\n  4,\n  747,\n  211,\n  210,\n  208,\n  370,\n  379,\n  734,\n  723,\n  714,\n  1735,\n  883,\n  877,\n  876,\n  3459,\n  865,\n  2,\n  377,\n  369,\n  102,\n  187,\n  726,\n  722,\n  358,\n  711,\n  709,\n  866,\n  1734,\n  871,\n  3458,\n  870,\n  434,\n  0,\n  12,\n  10,\n  7,\n  11,\n  10,\n  17,\n  11,\n  9,\n  13,\n  12,\n  10,\n  7,\n  5,\n  3,\n  1,\n  3\n];\no0.t24HB = [\n  15,\n  13,\n  46,\n  80,\n  146,\n  262,\n  248,\n  434,\n  426,\n  669,\n  653,\n  649,\n  621,\n  517,\n  1032,\n  88,\n  14,\n  12,\n  21,\n  38,\n  71,\n  130,\n  122,\n  216,\n  209,\n  198,\n  327,\n  345,\n  319,\n  297,\n  279,\n  42,\n  47,\n  22,\n  41,\n  74,\n  68,\n  128,\n  120,\n  221,\n  207,\n  194,\n  182,\n  340,\n  315,\n  295,\n  541,\n  18,\n  81,\n  39,\n  75,\n  70,\n  134,\n  125,\n  116,\n  220,\n  204,\n  190,\n  178,\n  325,\n  311,\n  293,\n  271,\n  16,\n  147,\n  72,\n  69,\n  135,\n  127,\n  118,\n  112,\n  210,\n  200,\n  188,\n  352,\n  323,\n  306,\n  285,\n  540,\n  14,\n  263,\n  66,\n  129,\n  126,\n  119,\n  114,\n  214,\n  202,\n  192,\n  180,\n  341,\n  317,\n  301,\n  281,\n  262,\n  12,\n  249,\n  123,\n  121,\n  117,\n  113,\n  215,\n  206,\n  195,\n  185,\n  347,\n  330,\n  308,\n  291,\n  272,\n  520,\n  10,\n  435,\n  115,\n  111,\n  109,\n  211,\n  203,\n  196,\n  187,\n  353,\n  332,\n  313,\n  298,\n  283,\n  531,\n  381,\n  17,\n  427,\n  212,\n  208,\n  205,\n  201,\n  193,\n  186,\n  177,\n  169,\n  320,\n  303,\n  286,\n  268,\n  514,\n  377,\n  16,\n  335,\n  199,\n  197,\n  191,\n  189,\n  181,\n  174,\n  333,\n  321,\n  305,\n  289,\n  275,\n  521,\n  379,\n  371,\n  11,\n  668,\n  184,\n  183,\n  179,\n  175,\n  344,\n  331,\n  314,\n  304,\n  290,\n  277,\n  530,\n  383,\n  373,\n  366,\n  10,\n  652,\n  346,\n  171,\n  168,\n  164,\n  318,\n  309,\n  299,\n  287,\n  276,\n  263,\n  513,\n  375,\n  368,\n  362,\n  6,\n  648,\n  322,\n  316,\n  312,\n  307,\n  302,\n  292,\n  284,\n  269,\n  261,\n  512,\n  376,\n  370,\n  364,\n  359,\n  4,\n  620,\n  300,\n  296,\n  294,\n  288,\n  282,\n  273,\n  266,\n  515,\n  380,\n  374,\n  369,\n  365,\n  361,\n  357,\n  2,\n  1033,\n  280,\n  278,\n  274,\n  267,\n  264,\n  259,\n  382,\n  378,\n  372,\n  367,\n  363,\n  360,\n  358,\n  356,\n  0,\n  43,\n  20,\n  19,\n  17,\n  15,\n  13,\n  11,\n  9,\n  7,\n  6,\n  4,\n  7,\n  5,\n  3,\n  1,\n  3\n];\no0.t32HB = [\n  1,\n  10,\n  8,\n  20,\n  12,\n  20,\n  16,\n  32,\n  14,\n  12,\n  24,\n  0,\n  28,\n  16,\n  24,\n  16\n];\no0.t33HB = [\n  15,\n  28,\n  26,\n  48,\n  22,\n  40,\n  36,\n  64,\n  14,\n  24,\n  20,\n  32,\n  12,\n  16,\n  8,\n  0\n];\no0.t1l = [\n  1,\n  4,\n  3,\n  5\n];\no0.t2l = [\n  1,\n  4,\n  7,\n  4,\n  5,\n  7,\n  6,\n  7,\n  8\n];\no0.t3l = [\n  2,\n  3,\n  7,\n  4,\n  4,\n  7,\n  6,\n  7,\n  8\n];\no0.t5l = [\n  1,\n  4,\n  7,\n  8,\n  4,\n  5,\n  8,\n  9,\n  7,\n  8,\n  9,\n  10,\n  8,\n  8,\n  9,\n  10\n];\no0.t6l = [\n  3,\n  4,\n  6,\n  8,\n  4,\n  4,\n  6,\n  7,\n  5,\n  6,\n  7,\n  8,\n  7,\n  7,\n  8,\n  9\n];\no0.t7l = [\n  1,\n  4,\n  7,\n  9,\n  9,\n  10,\n  4,\n  6,\n  8,\n  9,\n  9,\n  10,\n  7,\n  7,\n  9,\n  10,\n  10,\n  11,\n  8,\n  9,\n  10,\n  11,\n  11,\n  11,\n  8,\n  9,\n  10,\n  11,\n  11,\n  12,\n  9,\n  10,\n  11,\n  12,\n  12,\n  12\n];\no0.t8l = [\n  2,\n  4,\n  7,\n  9,\n  9,\n  10,\n  4,\n  4,\n  6,\n  10,\n  10,\n  10,\n  7,\n  6,\n  8,\n  10,\n  10,\n  11,\n  9,\n  10,\n  10,\n  11,\n  11,\n  12,\n  9,\n  9,\n  10,\n  11,\n  12,\n  12,\n  10,\n  10,\n  11,\n  11,\n  13,\n  13\n];\no0.t9l = [\n  3,\n  4,\n  6,\n  7,\n  9,\n  10,\n  4,\n  5,\n  6,\n  7,\n  8,\n  10,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  7,\n  7,\n  8,\n  9,\n  9,\n  10,\n  8,\n  8,\n  9,\n  9,\n  10,\n  11,\n  9,\n  9,\n  10,\n  10,\n  11,\n  11\n];\no0.t10l = [\n  1,\n  4,\n  7,\n  9,\n  10,\n  10,\n  10,\n  11,\n  4,\n  6,\n  8,\n  9,\n  10,\n  11,\n  10,\n  10,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  11,\n  11,\n  8,\n  9,\n  10,\n  11,\n  12,\n  12,\n  11,\n  12,\n  9,\n  10,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  10,\n  11,\n  12,\n  12,\n  13,\n  13,\n  12,\n  13,\n  9,\n  10,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  10,\n  10,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13\n];\no0.t11l = [\n  2,\n  4,\n  6,\n  8,\n  9,\n  10,\n  9,\n  10,\n  4,\n  5,\n  6,\n  8,\n  10,\n  10,\n  9,\n  10,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  10,\n  10,\n  8,\n  8,\n  9,\n  11,\n  10,\n  12,\n  10,\n  11,\n  9,\n  10,\n  10,\n  11,\n  11,\n  12,\n  11,\n  12,\n  9,\n  10,\n  11,\n  12,\n  12,\n  13,\n  12,\n  13,\n  9,\n  9,\n  9,\n  10,\n  11,\n  12,\n  12,\n  12,\n  9,\n  9,\n  10,\n  11,\n  12,\n  12,\n  12,\n  12\n];\no0.t12l = [\n  4,\n  4,\n  6,\n  8,\n  9,\n  10,\n  10,\n  10,\n  4,\n  5,\n  6,\n  7,\n  9,\n  9,\n  10,\n  10,\n  6,\n  6,\n  7,\n  8,\n  9,\n  10,\n  9,\n  10,\n  7,\n  7,\n  8,\n  8,\n  9,\n  10,\n  10,\n  10,\n  8,\n  8,\n  9,\n  9,\n  10,\n  10,\n  10,\n  11,\n  9,\n  9,\n  10,\n  10,\n  10,\n  11,\n  10,\n  11,\n  9,\n  9,\n  9,\n  10,\n  10,\n  11,\n  11,\n  12,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12\n];\no0.t13l = [\n  1,\n  5,\n  7,\n  8,\n  9,\n  10,\n  10,\n  11,\n  10,\n  11,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  4,\n  6,\n  8,\n  9,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  13,\n  14,\n  14,\n  14,\n  7,\n  8,\n  9,\n  10,\n  11,\n  11,\n  12,\n  12,\n  11,\n  12,\n  12,\n  13,\n  13,\n  14,\n  15,\n  15,\n  8,\n  9,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  15,\n  15,\n  9,\n  9,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  12,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  16,\n  10,\n  10,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  13,\n  15,\n  15,\n  16,\n  16,\n  10,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  15,\n  15,\n  16,\n  16,\n  11,\n  11,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  16,\n  18,\n  18,\n  10,\n  10,\n  11,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  16,\n  17,\n  17,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  15,\n  14,\n  15,\n  15,\n  16,\n  16,\n  16,\n  18,\n  17,\n  11,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  15,\n  14,\n  15,\n  16,\n  15,\n  16,\n  17,\n  18,\n  19,\n  12,\n  12,\n  12,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  16,\n  17,\n  17,\n  17,\n  18,\n  12,\n  13,\n  13,\n  14,\n  14,\n  15,\n  14,\n  15,\n  16,\n  16,\n  17,\n  17,\n  17,\n  18,\n  18,\n  18,\n  13,\n  13,\n  14,\n  15,\n  15,\n  15,\n  16,\n  16,\n  16,\n  16,\n  16,\n  17,\n  18,\n  17,\n  18,\n  18,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  17,\n  16,\n  16,\n  19,\n  17,\n  17,\n  17,\n  19,\n  18,\n  18,\n  13,\n  14,\n  15,\n  16,\n  16,\n  16,\n  17,\n  16,\n  17,\n  17,\n  18,\n  18,\n  21,\n  20,\n  21,\n  18\n];\no0.t15l = [\n  3,\n  5,\n  6,\n  8,\n  8,\n  9,\n  10,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  14,\n  5,\n  5,\n  7,\n  8,\n  9,\n  9,\n  10,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  6,\n  7,\n  7,\n  8,\n  9,\n  9,\n  10,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  7,\n  8,\n  8,\n  9,\n  9,\n  10,\n  10,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  8,\n  8,\n  9,\n  9,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  9,\n  9,\n  9,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  10,\n  9,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  14,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  15,\n  14,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  15,\n  12,\n  12,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  14,\n  15,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15\n];\no0.t16_5l = [\n  1,\n  5,\n  7,\n  9,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  11,\n  4,\n  6,\n  8,\n  9,\n  10,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  14,\n  13,\n  14,\n  11,\n  7,\n  8,\n  9,\n  10,\n  11,\n  11,\n  12,\n  12,\n  13,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  12,\n  9,\n  9,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  14,\n  15,\n  15,\n  13,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  12,\n  10,\n  10,\n  11,\n  11,\n  12,\n  13,\n  13,\n  14,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  16,\n  13,\n  11,\n  11,\n  11,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  16,\n  13,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  17,\n  17,\n  13,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  16,\n  16,\n  16,\n  13,\n  12,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  16,\n  15,\n  16,\n  15,\n  14,\n  12,\n  13,\n  12,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  16,\n  16,\n  16,\n  17,\n  17,\n  16,\n  13,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  15,\n  16,\n  14,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  17,\n  16,\n  16,\n  16,\n  16,\n  18,\n  14,\n  15,\n  14,\n  14,\n  14,\n  15,\n  15,\n  16,\n  16,\n  16,\n  18,\n  17,\n  17,\n  17,\n  19,\n  17,\n  14,\n  14,\n  15,\n  13,\n  14,\n  16,\n  16,\n  15,\n  16,\n  16,\n  17,\n  18,\n  17,\n  19,\n  17,\n  16,\n  14,\n  11,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  14,\n  14,\n  14,\n  12\n];\no0.t16l = [\n  1,\n  5,\n  7,\n  9,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  10,\n  4,\n  6,\n  8,\n  9,\n  10,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  14,\n  13,\n  14,\n  10,\n  7,\n  8,\n  9,\n  10,\n  11,\n  11,\n  12,\n  12,\n  13,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  11,\n  9,\n  9,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  14,\n  15,\n  15,\n  12,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  11,\n  10,\n  10,\n  11,\n  11,\n  12,\n  13,\n  13,\n  14,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  16,\n  12,\n  11,\n  11,\n  11,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  16,\n  12,\n  11,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  17,\n  17,\n  12,\n  11,\n  12,\n  12,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  16,\n  16,\n  16,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  16,\n  15,\n  16,\n  15,\n  13,\n  12,\n  13,\n  12,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  16,\n  16,\n  16,\n  17,\n  17,\n  16,\n  12,\n  13,\n  13,\n  13,\n  13,\n  14,\n  14,\n  15,\n  16,\n  16,\n  16,\n  16,\n  16,\n  16,\n  15,\n  16,\n  13,\n  13,\n  14,\n  14,\n  14,\n  14,\n  15,\n  15,\n  15,\n  15,\n  17,\n  16,\n  16,\n  16,\n  16,\n  18,\n  13,\n  15,\n  14,\n  14,\n  14,\n  15,\n  15,\n  16,\n  16,\n  16,\n  18,\n  17,\n  17,\n  17,\n  19,\n  17,\n  13,\n  14,\n  15,\n  13,\n  14,\n  16,\n  16,\n  15,\n  16,\n  16,\n  17,\n  18,\n  17,\n  19,\n  17,\n  16,\n  13,\n  10,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  10\n];\no0.t24l = [\n  4,\n  5,\n  7,\n  8,\n  9,\n  10,\n  10,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  10,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  10,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  10,\n  7,\n  7,\n  8,\n  9,\n  9,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  13,\n  9,\n  8,\n  8,\n  9,\n  9,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  9,\n  9,\n  9,\n  9,\n  10,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  13,\n  9,\n  10,\n  9,\n  10,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  9,\n  10,\n  10,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  9,\n  11,\n  10,\n  10,\n  10,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  10,\n  11,\n  11,\n  11,\n  11,\n  11,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  10,\n  11,\n  11,\n  11,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  10,\n  12,\n  11,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  10,\n  12,\n  12,\n  11,\n  11,\n  11,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  10,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  13,\n  10,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  10,\n  13,\n  12,\n  12,\n  12,\n  12,\n  12,\n  12,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  13,\n  10,\n  9,\n  9,\n  9,\n  9,\n  9,\n  9,\n  9,\n  9,\n  9,\n  9,\n  9,\n  10,\n  10,\n  10,\n  10,\n  6\n];\no0.t32l = [\n  1 + 0,\n  4 + 1,\n  4 + 1,\n  5 + 2,\n  4 + 1,\n  6 + 2,\n  5 + 2,\n  6 + 3,\n  4 + 1,\n  5 + 2,\n  5 + 2,\n  6 + 3,\n  5 + 2,\n  6 + 3,\n  6 + 3,\n  6 + 4\n];\no0.t33l = [\n  4 + 0,\n  4 + 1,\n  4 + 1,\n  4 + 2,\n  4 + 1,\n  4 + 2,\n  4 + 2,\n  4 + 3,\n  4 + 1,\n  4 + 2,\n  4 + 2,\n  4 + 3,\n  4 + 2,\n  4 + 3,\n  4 + 3,\n  4 + 4\n];\no0.ht = [\n  /* xlen, linmax, table, hlen */\n  new q0(0, 0, null, null),\n  new q0(2, 0, o0.t1HB, o0.t1l),\n  new q0(3, 0, o0.t2HB, o0.t2l),\n  new q0(3, 0, o0.t3HB, o0.t3l),\n  new q0(0, 0, null, null),\n  /* Apparently not used */\n  new q0(4, 0, o0.t5HB, o0.t5l),\n  new q0(4, 0, o0.t6HB, o0.t6l),\n  new q0(6, 0, o0.t7HB, o0.t7l),\n  new q0(6, 0, o0.t8HB, o0.t8l),\n  new q0(6, 0, o0.t9HB, o0.t9l),\n  new q0(8, 0, o0.t10HB, o0.t10l),\n  new q0(8, 0, o0.t11HB, o0.t11l),\n  new q0(8, 0, o0.t12HB, o0.t12l),\n  new q0(16, 0, o0.t13HB, o0.t13l),\n  new q0(0, 0, null, o0.t16_5l),\n  /* Apparently not used */\n  new q0(16, 0, o0.t15HB, o0.t15l),\n  new q0(1, 1, o0.t16HB, o0.t16l),\n  new q0(2, 3, o0.t16HB, o0.t16l),\n  new q0(3, 7, o0.t16HB, o0.t16l),\n  new q0(4, 15, o0.t16HB, o0.t16l),\n  new q0(6, 63, o0.t16HB, o0.t16l),\n  new q0(8, 255, o0.t16HB, o0.t16l),\n  new q0(10, 1023, o0.t16HB, o0.t16l),\n  new q0(13, 8191, o0.t16HB, o0.t16l),\n  new q0(4, 15, o0.t24HB, o0.t24l),\n  new q0(5, 31, o0.t24HB, o0.t24l),\n  new q0(6, 63, o0.t24HB, o0.t24l),\n  new q0(7, 127, o0.t24HB, o0.t24l),\n  new q0(8, 255, o0.t24HB, o0.t24l),\n  new q0(9, 511, o0.t24HB, o0.t24l),\n  new q0(11, 2047, o0.t24HB, o0.t24l),\n  new q0(13, 8191, o0.t24HB, o0.t24l),\n  new q0(0, 0, o0.t32HB, o0.t32l),\n  new q0(0, 0, o0.t33HB, o0.t33l)\n];\no0.largetbl = [\n  65540,\n  327685,\n  458759,\n  589832,\n  655369,\n  655370,\n  720906,\n  720907,\n  786443,\n  786444,\n  786444,\n  851980,\n  851980,\n  851980,\n  917517,\n  655370,\n  262149,\n  393222,\n  524295,\n  589832,\n  655369,\n  720906,\n  720906,\n  720907,\n  786443,\n  786443,\n  786444,\n  851980,\n  917516,\n  851980,\n  917516,\n  655370,\n  458759,\n  524295,\n  589832,\n  655369,\n  720905,\n  720906,\n  786442,\n  786443,\n  851979,\n  786443,\n  851979,\n  851980,\n  851980,\n  917516,\n  917517,\n  720905,\n  589832,\n  589832,\n  655369,\n  720905,\n  720906,\n  786442,\n  786442,\n  786443,\n  851979,\n  851979,\n  917515,\n  917516,\n  917516,\n  983052,\n  983052,\n  786441,\n  655369,\n  655369,\n  720905,\n  720906,\n  786442,\n  786442,\n  851978,\n  851979,\n  851979,\n  917515,\n  917516,\n  917516,\n  983052,\n  983052,\n  983053,\n  720905,\n  655370,\n  655369,\n  720906,\n  720906,\n  786442,\n  851978,\n  851979,\n  917515,\n  851979,\n  917515,\n  917516,\n  983052,\n  983052,\n  983052,\n  1048588,\n  786441,\n  720906,\n  720906,\n  720906,\n  786442,\n  851978,\n  851979,\n  851979,\n  851979,\n  917515,\n  917516,\n  917516,\n  917516,\n  983052,\n  983052,\n  1048589,\n  786441,\n  720907,\n  720906,\n  786442,\n  786442,\n  851979,\n  851979,\n  851979,\n  917515,\n  917516,\n  983052,\n  983052,\n  983052,\n  983052,\n  1114125,\n  1114125,\n  786442,\n  720907,\n  786443,\n  786443,\n  851979,\n  851979,\n  851979,\n  917515,\n  917515,\n  983051,\n  983052,\n  983052,\n  983052,\n  1048588,\n  1048589,\n  1048589,\n  786442,\n  786443,\n  786443,\n  786443,\n  851979,\n  851979,\n  917515,\n  917515,\n  983052,\n  983052,\n  983052,\n  983052,\n  1048588,\n  983053,\n  1048589,\n  983053,\n  851978,\n  786444,\n  851979,\n  786443,\n  851979,\n  917515,\n  917516,\n  917516,\n  917516,\n  983052,\n  1048588,\n  1048588,\n  1048589,\n  1114125,\n  1114125,\n  1048589,\n  786442,\n  851980,\n  851980,\n  851979,\n  851979,\n  917515,\n  917516,\n  983052,\n  1048588,\n  1048588,\n  1048588,\n  1048588,\n  1048589,\n  1048589,\n  983053,\n  1048589,\n  851978,\n  851980,\n  917516,\n  917516,\n  917516,\n  917516,\n  983052,\n  983052,\n  983052,\n  983052,\n  1114124,\n  1048589,\n  1048589,\n  1048589,\n  1048589,\n  1179661,\n  851978,\n  983052,\n  917516,\n  917516,\n  917516,\n  983052,\n  983052,\n  1048588,\n  1048588,\n  1048589,\n  1179661,\n  1114125,\n  1114125,\n  1114125,\n  1245197,\n  1114125,\n  851978,\n  917517,\n  983052,\n  851980,\n  917516,\n  1048588,\n  1048588,\n  983052,\n  1048589,\n  1048589,\n  1114125,\n  1179661,\n  1114125,\n  1245197,\n  1114125,\n  1048589,\n  851978,\n  655369,\n  655369,\n  655369,\n  720905,\n  720905,\n  786441,\n  786441,\n  786441,\n  851977,\n  851977,\n  851977,\n  851978,\n  851978,\n  851978,\n  851978,\n  655366\n];\no0.table23 = [\n  65538,\n  262147,\n  458759,\n  262148,\n  327684,\n  458759,\n  393222,\n  458759,\n  524296\n];\no0.table56 = [\n  65539,\n  262148,\n  458758,\n  524296,\n  262148,\n  327684,\n  524294,\n  589831,\n  458757,\n  524294,\n  589831,\n  655368,\n  524295,\n  524295,\n  589832,\n  655369\n];\no0.bitrate_table = [\n  [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1],\n  /* MPEG 2 */\n  [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1],\n  /* MPEG 1 */\n  [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1]\n  /* MPEG 2.5 */\n];\no0.samplerate_table = [\n  [22050, 24e3, 16e3, -1],\n  [44100, 48e3, 32e3, -1],\n  [11025, 12e3, 8e3, -1]\n];\no0.scfsi_band = [0, 6, 11, 16, 21];\nvar He = o0, Me, ra;\nfunction Va() {\n  if (ra)\n    return Me;\n  ra = 1;\n  var w = Ia, Z = Q0, X = Z.VbrMode, z = Z.Float, u0 = Z.Util, W = Z.new_float, Q = Z.new_int, D = Z.assert, g = t1(), f0 = Ha, A = ne;\n  m.Q_MAX = 256 + 1, m.Q_MAX2 = 116, m.LARGE_BITS = 1e5, m.IXMAX_VAL = 8206;\n  function m() {\n    var O = Ve(), s0 = null, K = null, t0 = null;\n    this.setModules = function(S, L, V) {\n      s0 = S, K = L, t0 = V;\n    };\n    function U(S) {\n      return D(0 <= S + m.Q_MAX2 && S < m.Q_MAX), p[S + m.Q_MAX2];\n    }\n    this.IPOW20 = function(S) {\n      return D(0 <= S && S < m.Q_MAX), H[S];\n    };\n    var R = 2220446049250313e-31, o = m.IXMAX_VAL, u = o + 2, d = m.Q_MAX, e = m.Q_MAX2;\n    m.LARGE_BITS;\n    var l = 100;\n    this.nr_of_sfb_block = [\n      [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n      [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n      [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n      [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n      [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n      [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]\n    ];\n    var M = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      1,\n      1,\n      2,\n      2,\n      3,\n      3,\n      3,\n      2,\n      0\n    ];\n    this.pretab = M, this.sfBandIndex = [\n      // Table B.2.b: 22.05 kHz\n      new w(\n        [\n          0,\n          6,\n          12,\n          18,\n          24,\n          30,\n          36,\n          44,\n          54,\n          66,\n          80,\n          96,\n          116,\n          140,\n          168,\n          200,\n          238,\n          284,\n          336,\n          396,\n          464,\n          522,\n          576\n        ],\n        [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        //  sfb12 pseudo sub bands\n      ),\n      /* Table B.2.c: 24 kHz */\n      /* docs: 332. mpg123(broken): 330 */\n      new w(\n        [\n          0,\n          6,\n          12,\n          18,\n          24,\n          30,\n          36,\n          44,\n          54,\n          66,\n          80,\n          96,\n          114,\n          136,\n          162,\n          194,\n          232,\n          278,\n          332,\n          394,\n          464,\n          540,\n          576\n        ],\n        [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* Table B.2.a: 16 kHz */\n      new w(\n        [\n          0,\n          6,\n          12,\n          18,\n          24,\n          30,\n          36,\n          44,\n          54,\n          66,\n          80,\n          96,\n          116,\n          140,\n          168,\n          200,\n          238,\n          284,\n          336,\n          396,\n          464,\n          522,\n          576\n        ],\n        [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* Table B.8.b: 44.1 kHz */\n      new w(\n        [\n          0,\n          4,\n          8,\n          12,\n          16,\n          20,\n          24,\n          30,\n          36,\n          44,\n          52,\n          62,\n          74,\n          90,\n          110,\n          134,\n          162,\n          196,\n          238,\n          288,\n          342,\n          418,\n          576\n        ],\n        [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* Table B.8.c: 48 kHz */\n      new w(\n        [\n          0,\n          4,\n          8,\n          12,\n          16,\n          20,\n          24,\n          30,\n          36,\n          42,\n          50,\n          60,\n          72,\n          88,\n          106,\n          128,\n          156,\n          190,\n          230,\n          276,\n          330,\n          384,\n          576\n        ],\n        [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* Table B.8.a: 32 kHz */\n      new w(\n        [\n          0,\n          4,\n          8,\n          12,\n          16,\n          20,\n          24,\n          30,\n          36,\n          44,\n          54,\n          66,\n          82,\n          102,\n          126,\n          156,\n          194,\n          240,\n          296,\n          364,\n          448,\n          550,\n          576\n        ],\n        [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* MPEG-2.5 11.025 kHz */\n      new w(\n        [\n          0,\n          6,\n          12,\n          18,\n          24,\n          30,\n          36,\n          44,\n          54,\n          66,\n          80,\n          96,\n          116,\n          140,\n          168,\n          200,\n          238,\n          284,\n          336,\n          396,\n          464,\n          522,\n          576\n        ],\n        [\n          0 / 3,\n          12 / 3,\n          24 / 3,\n          36 / 3,\n          54 / 3,\n          78 / 3,\n          108 / 3,\n          144 / 3,\n          186 / 3,\n          240 / 3,\n          312 / 3,\n          402 / 3,\n          522 / 3,\n          576 / 3\n        ],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* MPEG-2.5 12 kHz */\n      new w(\n        [\n          0,\n          6,\n          12,\n          18,\n          24,\n          30,\n          36,\n          44,\n          54,\n          66,\n          80,\n          96,\n          116,\n          140,\n          168,\n          200,\n          238,\n          284,\n          336,\n          396,\n          464,\n          522,\n          576\n        ],\n        [\n          0 / 3,\n          12 / 3,\n          24 / 3,\n          36 / 3,\n          54 / 3,\n          78 / 3,\n          108 / 3,\n          144 / 3,\n          186 / 3,\n          240 / 3,\n          312 / 3,\n          402 / 3,\n          522 / 3,\n          576 / 3\n        ],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      ),\n      /* MPEG-2.5 8 kHz */\n      new w(\n        [\n          0,\n          12,\n          24,\n          36,\n          48,\n          60,\n          72,\n          88,\n          108,\n          132,\n          160,\n          192,\n          232,\n          280,\n          336,\n          400,\n          476,\n          566,\n          568,\n          570,\n          572,\n          574,\n          576\n        ],\n        [\n          0 / 3,\n          24 / 3,\n          48 / 3,\n          72 / 3,\n          108 / 3,\n          156 / 3,\n          216 / 3,\n          288 / 3,\n          372 / 3,\n          480 / 3,\n          486 / 3,\n          492 / 3,\n          498 / 3,\n          576 / 3\n        ],\n        [0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0]\n        /*  sfb12 pseudo sub bands */\n      )\n    ];\n    var p = W(d + e + 1), H = W(d), B = W(u), I = W(u);\n    this.adj43 = I;\n    function v0(S, L) {\n      var V = t0.ATHformula(L, S);\n      return V -= l, V = Math.pow(10, V / 10 + S.ATHlower), V;\n    }\n    function b(S) {\n      for (var L = S.internal_flags.ATH.l, V = S.internal_flags.ATH.psfb21, N = S.internal_flags.ATH.s, P = S.internal_flags.ATH.psfb12, E = S.internal_flags, i = S.out_samplerate, s = 0; s < g.SBMAX_l; s++) {\n        var r = E.scalefac_band.l[s], n = E.scalefac_band.l[s + 1];\n        L[s] = z.MAX_VALUE;\n        for (var f = r; f < n; f++) {\n          var Y = f * i / 1152, J = v0(S, Y);\n          L[s] = Math.min(L[s], J);\n        }\n      }\n      for (var s = 0; s < g.PSFB21; s++) {\n        var r = E.scalefac_band.psfb21[s], n = E.scalefac_band.psfb21[s + 1];\n        V[s] = z.MAX_VALUE;\n        for (var f = r; f < n; f++) {\n          var Y = f * i / 1152, J = v0(S, Y);\n          V[s] = Math.min(V[s], J);\n        }\n      }\n      for (var s = 0; s < g.SBMAX_s; s++) {\n        var r = E.scalefac_band.s[s], n = E.scalefac_band.s[s + 1];\n        N[s] = z.MAX_VALUE;\n        for (var f = r; f < n; f++) {\n          var Y = f * i / 384, J = v0(S, Y);\n          N[s] = Math.min(N[s], J);\n        }\n        N[s] *= E.scalefac_band.s[s + 1] - E.scalefac_band.s[s];\n      }\n      for (var s = 0; s < g.PSFB12; s++) {\n        var r = E.scalefac_band.psfb12[s], n = E.scalefac_band.psfb12[s + 1];\n        P[s] = z.MAX_VALUE;\n        for (var f = r; f < n; f++) {\n          var Y = f * i / 384, J = v0(S, Y);\n          P[s] = Math.min(P[s], J);\n        }\n        P[s] *= E.scalefac_band.s[13] - E.scalefac_band.s[12];\n      }\n      if (S.noATH) {\n        for (var s = 0; s < g.SBMAX_l; s++)\n          L[s] = 1e-20;\n        for (var s = 0; s < g.PSFB21; s++)\n          V[s] = 1e-20;\n        for (var s = 0; s < g.SBMAX_s; s++)\n          N[s] = 1e-20;\n        for (var s = 0; s < g.PSFB12; s++)\n          P[s] = 1e-20;\n      }\n      E.ATH.floor = 10 * Math.log10(v0(S, -1));\n    }\n    this.iteration_init = function(S) {\n      var L = S.internal_flags, V = L.l3_side, N;\n      if (L.iteration_init_init == 0) {\n        for (L.iteration_init_init = 1, V.main_data_begin = 0, b(S), B[0] = 0, N = 1; N < u; N++)\n          B[N] = Math.pow(N, 4 / 3);\n        for (N = 0; N < u - 1; N++)\n          I[N] = N + 1 - Math.pow(\n            0.5 * (B[N] + B[N + 1]),\n            0.75\n          );\n        for (I[N] = 0.5, N = 0; N < d; N++)\n          H[N] = Math.pow(2, (N - 210) * -0.1875);\n        for (N = 0; N <= d + e; N++)\n          p[N] = Math.pow(2, (N - 210 - e) * 0.25);\n        s0.huffman_init(L);\n        {\n          var P, E, i, s;\n          for (N = S.exp_nspsytune >> 2 & 63, N >= 32 && (N -= 64), P = Math.pow(10, N / 4 / 10), N = S.exp_nspsytune >> 8 & 63, N >= 32 && (N -= 64), E = Math.pow(10, N / 4 / 10), N = S.exp_nspsytune >> 14 & 63, N >= 32 && (N -= 64), i = Math.pow(10, N / 4 / 10), N = S.exp_nspsytune >> 20 & 63, N >= 32 && (N -= 64), s = i * Math.pow(10, N / 4 / 10), N = 0; N < g.SBMAX_l; N++) {\n            var r;\n            N <= 6 ? r = P : N <= 13 ? r = E : N <= 20 ? r = i : r = s, L.nsPsy.longfact[N] = r;\n          }\n          for (N = 0; N < g.SBMAX_s; N++) {\n            var r;\n            N <= 5 ? r = P : N <= 10 ? r = E : N <= 11 ? r = i : r = s, L.nsPsy.shortfact[N] = r;\n          }\n        }\n      }\n    }, this.on_pe = function(S, L, V, N, P, E) {\n      var i = S.internal_flags, s = 0, r, n = Q(2), f, Y = new f0(s), J = K.ResvMaxBits(S, N, Y, E);\n      s = Y.bits;\n      var T = s + J;\n      for (T > A.MAX_BITS_PER_GRANULE && (T = A.MAX_BITS_PER_GRANULE), r = 0, f = 0; f < i.channels_out; ++f)\n        V[f] = Math.min(\n          A.MAX_BITS_PER_CHANNEL,\n          s / i.channels_out\n        ), n[f] = 0 | V[f] * L[P][f] / 700 - V[f], n[f] > N * 3 / 4 && (n[f] = N * 3 / 4), n[f] < 0 && (n[f] = 0), n[f] + V[f] > A.MAX_BITS_PER_CHANNEL && (n[f] = Math.max(\n          0,\n          A.MAX_BITS_PER_CHANNEL - V[f]\n        )), r += n[f];\n      if (r > J)\n        for (f = 0; f < i.channels_out; ++f)\n          n[f] = J * n[f] / r;\n      for (f = 0; f < i.channels_out; ++f)\n        V[f] += n[f], J -= n[f];\n      for (r = 0, f = 0; f < i.channels_out; ++f)\n        r += V[f];\n      if (r > A.MAX_BITS_PER_GRANULE) {\n        var q = 0;\n        for (f = 0; f < i.channels_out; ++f)\n          V[f] *= A.MAX_BITS_PER_GRANULE, V[f] /= r, q += V[f];\n      }\n      return T;\n    }, this.reduce_side = function(S, L, V, N) {\n      D(S[0] + S[1] <= A.MAX_BITS_PER_GRANULE);\n      var P = 0.33 * (0.5 - L) / 0.5;\n      P < 0 && (P = 0), P > 0.5 && (P = 0.5);\n      var E = 0 | P * 0.5 * (S[0] + S[1]);\n      E > A.MAX_BITS_PER_CHANNEL - S[0] && (E = A.MAX_BITS_PER_CHANNEL - S[0]), E < 0 && (E = 0), S[1] >= 125 && (S[1] - E > 125 ? (S[0] < V && (S[0] += E), S[1] -= E) : (S[0] += S[1] - 125, S[1] = 125)), E = S[0] + S[1], E > N && (S[0] = N * S[0] / E, S[1] = N * S[1] / E), D(S[0] <= A.MAX_BITS_PER_CHANNEL), D(S[1] <= A.MAX_BITS_PER_CHANNEL), D(S[0] + S[1] <= A.MAX_BITS_PER_GRANULE);\n    }, this.athAdjust = function(S, L, V) {\n      var N = 90.30873362, P = 94.82444863, E = u0.FAST_LOG10_X(L, 10), i = S * S, s = 0;\n      return E -= V, i > 1e-20 && (s = 1 + u0.FAST_LOG10_X(i, 10 / N)), s < 0 && (s = 0), E *= s, E += V + N - P, Math.pow(10, 0.1 * E);\n    }, this.calc_xmin = function(S, L, V, N) {\n      var P = 0, E = S.internal_flags, i, s = 0, r = 0, n = E.ATH, f = V.xr, Y = S.VBR == X.vbr_mtrh ? 1 : 0, J = E.masking_lower;\n      for ((S.VBR == X.vbr_mtrh || S.VBR == X.vbr_mt) && (J = 1), i = 0; i < V.psy_lmax; i++) {\n        var T, q, i0, h0, d0, M0;\n        S.VBR == X.vbr_rh || S.VBR == X.vbr_mtrh ? q = athAdjust(n.adjust, n.l[i], n.floor) : q = n.adjust * n.l[i], d0 = V.width[i], i0 = q / d0, h0 = R, M0 = d0 >> 1, T = 0;\n        do {\n          var R0, A0;\n          R0 = f[s] * f[s], T += R0, h0 += R0 < i0 ? R0 : i0, s++, A0 = f[s] * f[s], T += A0, h0 += A0 < i0 ? A0 : i0, s++;\n        } while (--M0 > 0);\n        if (T > q && r++, i == g.SBPSY_l) {\n          var w0 = q * E.nsPsy.longfact[i];\n          h0 < w0 && (h0 = w0);\n        }\n        if (Y != 0 && (q = h0), !S.ATHonly) {\n          var $0 = L.en.l[i];\n          if ($0 > 0) {\n            var w0;\n            w0 = T * L.thm.l[i] * J / $0, Y != 0 && (w0 *= E.nsPsy.longfact[i]), q < w0 && (q = w0);\n          }\n        }\n        Y != 0 ? N[P++] = q : N[P++] = q * E.nsPsy.longfact[i];\n      }\n      var f1 = 575;\n      if (V.block_type != g.SHORT_TYPE)\n        for (var t = 576; t-- != 0 && O.EQ(f[t], 0); )\n          f1 = t;\n      V.max_nonzero_coeff = f1;\n      for (var _ = V.sfb_smin; i < V.psymax; _++, i += 3) {\n        var d0, S0, E0;\n        for (S.VBR == X.vbr_rh || S.VBR == X.vbr_mtrh ? E0 = athAdjust(n.adjust, n.s[_], n.floor) : E0 = n.adjust * n.s[_], d0 = V.width[i], S0 = 0; S0 < 3; S0++) {\n          var T = 0, q, i0, h0, M0 = d0 >> 1;\n          i0 = E0 / d0, h0 = R;\n          do {\n            var R0, A0;\n            R0 = f[s] * f[s], T += R0, h0 += R0 < i0 ? R0 : i0, s++, A0 = f[s] * f[s], T += A0, h0 += A0 < i0 ? A0 : i0, s++;\n          } while (--M0 > 0);\n          if (T > E0 && r++, _ == g.SBPSY_s) {\n            var w0 = E0 * E.nsPsy.shortfact[_];\n            h0 < w0 && (h0 = w0);\n          }\n          if (Y != 0 ? q = h0 : q = E0, !S.ATHonly && !S.ATHshort) {\n            var $0 = L.en.s[_][S0];\n            if ($0 > 0) {\n              var w0;\n              w0 = T * L.thm.s[_][S0] * J / $0, Y != 0 && (w0 *= E.nsPsy.shortfact[_]), q < w0 && (q = w0);\n            }\n          }\n          Y != 0 ? N[P++] = q : N[P++] = q * E.nsPsy.shortfact[_];\n        }\n        S.useTemporal && (N[P - 3] > N[P - 3 + 1] && (N[P - 3 + 1] += (N[P - 3] - N[P - 3 + 1]) * E.decay), N[P - 3 + 1] > N[P - 3 + 2] && (N[P - 3 + 2] += (N[P - 3 + 1] - N[P - 3 + 2]) * E.decay));\n      }\n      return r;\n    };\n    function a(S) {\n      this.s = S;\n    }\n    this.calc_noise_core = function(S, L, V, N) {\n      var P = 0, E = L.s, i = S.l3_enc;\n      if (E > S.count1)\n        for (; V-- != 0; ) {\n          var s;\n          s = S.xr[E], E++, P += s * s, s = S.xr[E], E++, P += s * s;\n        }\n      else if (E > S.big_values) {\n        var r = W(2);\n        for (r[0] = 0, r[1] = N; V-- != 0; ) {\n          var s;\n          s = Math.abs(S.xr[E]) - r[i[E]], E++, P += s * s, s = Math.abs(S.xr[E]) - r[i[E]], E++, P += s * s;\n        }\n      } else\n        for (; V-- != 0; ) {\n          var s;\n          s = Math.abs(S.xr[E]) - B[i[E]] * N, E++, P += s * s, s = Math.abs(S.xr[E]) - B[i[E]] * N, E++, P += s * s;\n        }\n      return L.s = E, P;\n    }, this.calc_noise = function(S, L, V, N, P) {\n      var E = 0, i = 0, s, r, n = 0, f = 0, Y = 0, J = -20, T = 0, q = S.scalefac, i0 = 0;\n      for (N.over_SSD = 0, s = 0; s < S.psymax; s++) {\n        var h0 = S.global_gain - (q[i0++] + (S.preflag != 0 ? M[s] : 0) << S.scalefac_scale + 1) - S.subblock_gain[S.window[s]] * 8, d0 = 0;\n        if (P != null && P.step[s] == h0)\n          d0 = P.noise[s], T += S.width[s], V[E++] = d0 / L[i++], d0 = P.noise_log[s];\n        else {\n          var M0 = U(h0);\n          if (r = S.width[s] >> 1, T + S.width[s] > S.max_nonzero_coeff) {\n            var R0;\n            R0 = S.max_nonzero_coeff - T + 1, R0 > 0 ? r = R0 >> 1 : r = 0;\n          }\n          var A0 = new a(T);\n          d0 = this.calc_noise_core(S, A0, r, M0), T = A0.s, P != null && (P.step[s] = h0, P.noise[s] = d0), d0 = V[E++] = d0 / L[i++], d0 = u0.FAST_LOG10(Math.max(d0, 1e-20)), P != null && (P.noise_log[s] = d0);\n        }\n        if (P != null && (P.global_gain = S.global_gain), Y += d0, d0 > 0) {\n          var w0;\n          w0 = Math.max(0 | d0 * 10 + 0.5, 1), N.over_SSD += w0 * w0, n++, f += d0;\n        }\n        J = Math.max(J, d0);\n      }\n      return N.over_count = n, N.tot_noise = Y, N.over_noise = f, N.max_noise = J, n;\n    }, this.set_pinfo = function(S, L, V, N, P) {\n      var E = S.internal_flags, i, s, r, n, f, Y = L.scalefac_scale == 0 ? 0.5 : 1, J = L.scalefac, T = W(L3Side.SFBMAX), q = W(L3Side.SFBMAX), i0 = new CalcNoiseResult();\n      calc_xmin(S, V, L, T), calc_noise(L, T, q, i0, null);\n      var h0 = 0;\n      for (s = L.sfb_lmax, L.block_type != g.SHORT_TYPE && L.mixed_block_flag == 0 && (s = 22), i = 0; i < s; i++) {\n        var d0 = E.scalefac_band.l[i], M0 = E.scalefac_band.l[i + 1], R0 = M0 - d0;\n        for (n = 0; h0 < M0; h0++)\n          n += L.xr[h0] * L.xr[h0];\n        n /= R0, f = 1e15, E.pinfo.en[N][P][i] = f * n, E.pinfo.xfsf[N][P][i] = f * T[i] * q[i] / R0, V.en.l[i] > 0 && !S.ATHonly ? n = n / V.en.l[i] : n = 0, E.pinfo.thr[N][P][i] = f * Math.max(n * V.thm.l[i], E.ATH.l[i]), E.pinfo.LAMEsfb[N][P][i] = 0, L.preflag != 0 && i >= 11 && (E.pinfo.LAMEsfb[N][P][i] = -Y * M[i]), i < g.SBPSY_l && (D(J[i] >= 0), E.pinfo.LAMEsfb[N][P][i] -= Y * J[i]);\n      }\n      if (L.block_type == g.SHORT_TYPE)\n        for (s = i, i = L.sfb_smin; i < g.SBMAX_s; i++)\n          for (var d0 = E.scalefac_band.s[i], M0 = E.scalefac_band.s[i + 1], R0 = M0 - d0, A0 = 0; A0 < 3; A0++) {\n            for (n = 0, r = d0; r < M0; r++)\n              n += L.xr[h0] * L.xr[h0], h0++;\n            n = Math.max(n / R0, 1e-20), f = 1e15, E.pinfo.en_s[N][P][3 * i + A0] = f * n, E.pinfo.xfsf_s[N][P][3 * i + A0] = f * T[s] * q[s] / R0, V.en.s[i][A0] > 0 ? n = n / V.en.s[i][A0] : n = 0, (S.ATHonly || S.ATHshort) && (n = 0), E.pinfo.thr_s[N][P][3 * i + A0] = f * Math.max(\n              n * V.thm.s[i][A0],\n              E.ATH.s[i]\n            ), E.pinfo.LAMEsfb_s[N][P][3 * i + A0] = -2 * L.subblock_gain[A0], i < g.SBPSY_s && (E.pinfo.LAMEsfb_s[N][P][3 * i + A0] -= Y * J[s]), s++;\n          }\n      E.pinfo.LAMEqss[N][P] = L.global_gain, E.pinfo.LAMEmainbits[N][P] = L.part2_3_length + L.part2_length, E.pinfo.LAMEsfbits[N][P] = L.part2_length, E.pinfo.over[N][P] = i0.over_count, E.pinfo.max_noise[N][P] = i0.max_noise * 10, E.pinfo.over_noise[N][P] = i0.over_noise * 10, E.pinfo.tot_noise[N][P] = i0.tot_noise * 10, E.pinfo.over_SSD[N][P] = i0.over_SSD;\n    };\n  }\n  return Me = m, Me;\n}\nvar Ee, ta;\nfunction Oa() {\n  if (ta)\n    return Ee;\n  ta = 1;\n  var w = Q0, Z = w.System, X = w.Arrays, z = w.new_int, u0 = w.assert, W = t1(), Q = He, D = Le, g = Va();\n  function f0() {\n    var A = null;\n    this.qupvt = null, this.setModules = function(E) {\n      this.qupvt = E, A = E;\n    };\n    function m(E) {\n      this.bits = 0 | E;\n    }\n    var O = [\n      [0, 0],\n      /* 0 bands */\n      [0, 0],\n      /* 1 bands */\n      [0, 0],\n      /* 2 bands */\n      [0, 0],\n      /* 3 bands */\n      [0, 0],\n      /* 4 bands */\n      [0, 1],\n      /* 5 bands */\n      [1, 1],\n      /* 6 bands */\n      [1, 1],\n      /* 7 bands */\n      [1, 2],\n      /* 8 bands */\n      [2, 2],\n      /* 9 bands */\n      [2, 3],\n      /* 10 bands */\n      [2, 3],\n      /* 11 bands */\n      [3, 4],\n      /* 12 bands */\n      [3, 4],\n      /* 13 bands */\n      [3, 4],\n      /* 14 bands */\n      [4, 5],\n      /* 15 bands */\n      [4, 5],\n      /* 16 bands */\n      [4, 6],\n      /* 17 bands */\n      [5, 6],\n      /* 18 bands */\n      [5, 6],\n      /* 19 bands */\n      [5, 7],\n      /* 20 bands */\n      [6, 7],\n      /* 21 bands */\n      [6, 7]\n      /* 22 bands */\n    ];\n    function s0(E, i, s, r, n, f) {\n      var Y = 0.5946 / i;\n      for (E = E >> 1; E-- != 0; )\n        n[f++] = Y > s[r++] ? 0 : 1, n[f++] = Y > s[r++] ? 0 : 1;\n    }\n    function K(E, i, s, r, n, f) {\n      E = E >> 1;\n      var Y = E % 2;\n      for (E = E >> 1; E-- != 0; ) {\n        var J, T, q, i0, h0, d0, M0, R0;\n        J = s[r++] * i, T = s[r++] * i, h0 = 0 | J, q = s[r++] * i, d0 = 0 | T, i0 = s[r++] * i, M0 = 0 | q, J += A.adj43[h0], R0 = 0 | i0, T += A.adj43[d0], n[f++] = 0 | J, q += A.adj43[M0], n[f++] = 0 | T, i0 += A.adj43[R0], n[f++] = 0 | q, n[f++] = 0 | i0;\n      }\n      if (Y != 0) {\n        var J, T, h0, d0;\n        J = s[r++] * i, T = s[r++] * i, h0 = 0 | J, d0 = 0 | T, J += A.adj43[h0], T += A.adj43[d0], n[f++] = 0 | J, n[f++] = 0 | T;\n      }\n    }\n    function t0(E, i, s, r, n) {\n      var f, Y, J = 0, T, q = 0, i0 = 0, h0 = 0, d0 = i, M0 = 0, R0 = d0, A0 = 0, w0 = E, $0 = 0;\n      for (T = n != null && r.global_gain == n.global_gain, r.block_type == W.SHORT_TYPE ? Y = 38 : Y = 21, f = 0; f <= Y; f++) {\n        var f1 = -1;\n        if ((T || r.block_type == W.NORM_TYPE) && (f1 = r.global_gain - (r.scalefac[f] + (r.preflag != 0 ? A.pretab[f] : 0) << r.scalefac_scale + 1) - r.subblock_gain[r.window[f]] * 8), u0(r.width[f] >= 0), T && n.step[f] == f1)\n          q != 0 && (K(\n            q,\n            s,\n            w0,\n            $0,\n            R0,\n            A0\n          ), q = 0), i0 != 0 && (s0(\n            i0,\n            s,\n            w0,\n            $0,\n            R0,\n            A0\n          ), i0 = 0);\n        else {\n          var t = r.width[f];\n          if (J + r.width[f] > r.max_nonzero_coeff) {\n            var _;\n            _ = r.max_nonzero_coeff - J + 1, X.fill(i, r.max_nonzero_coeff, 576, 0), t = _, t < 0 && (t = 0), f = Y + 1;\n          }\n          if (q == 0 && i0 == 0 && (R0 = d0, A0 = M0, w0 = E, $0 = h0), n != null && n.sfb_count1 > 0 && f >= n.sfb_count1 && n.step[f] > 0 && f1 >= n.step[f] ? (q != 0 && (K(\n            q,\n            s,\n            w0,\n            $0,\n            R0,\n            A0\n          ), q = 0, R0 = d0, A0 = M0, w0 = E, $0 = h0), i0 += t) : (i0 != 0 && (s0(\n            i0,\n            s,\n            w0,\n            $0,\n            R0,\n            A0\n          ), i0 = 0, R0 = d0, A0 = M0, w0 = E, $0 = h0), q += t), t <= 0) {\n            i0 != 0 && (s0(\n              i0,\n              s,\n              w0,\n              $0,\n              R0,\n              A0\n            ), i0 = 0), q != 0 && (K(\n              q,\n              s,\n              w0,\n              $0,\n              R0,\n              A0\n            ), q = 0);\n            break;\n          }\n        }\n        f <= Y && (M0 += r.width[f], h0 += r.width[f], J += r.width[f]);\n      }\n      q != 0 && (K(\n        q,\n        s,\n        w0,\n        $0,\n        R0,\n        A0\n      ), q = 0), i0 != 0 && (s0(\n        i0,\n        s,\n        w0,\n        $0,\n        R0,\n        A0\n      ), i0 = 0);\n    }\n    function U(E, i, s) {\n      var r = 0, n = 0;\n      do {\n        var f = E[i++], Y = E[i++];\n        r < f && (r = f), n < Y && (n = Y);\n      } while (i < s);\n      return r < n && (r = n), r;\n    }\n    function R(E, i, s, r, n, f) {\n      var Y = Q.ht[r].xlen * 65536 + Q.ht[n].xlen, J = 0, T;\n      do {\n        var q = E[i++], i0 = E[i++];\n        q != 0 && (q > 14 && (q = 15, J += Y), q *= 16), i0 != 0 && (i0 > 14 && (i0 = 15, J += Y), q += i0), J += Q.largetbl[q];\n      } while (i < s);\n      return T = J & 65535, J >>= 16, J > T && (J = T, r = n), f.bits += J, r;\n    }\n    function o(E, i, s, r) {\n      var n = 0, f = Q.ht[1].hlen;\n      do {\n        var Y = E[i + 0] * 2 + E[i + 1];\n        i += 2, n += f[Y];\n      } while (i < s);\n      return r.bits += n, 1;\n    }\n    function u(E, i, s, r, n) {\n      var f = 0, Y, J = Q.ht[r].xlen, T;\n      r == 2 ? T = Q.table23 : T = Q.table56;\n      do {\n        var q = E[i + 0] * J + E[i + 1];\n        i += 2, f += T[q];\n      } while (i < s);\n      return Y = f & 65535, f >>= 16, f > Y && (f = Y, r++), n.bits += f, r;\n    }\n    function d(E, i, s, r, n) {\n      var f = 0, Y = 0, J = 0, T = Q.ht[r].xlen, q = Q.ht[r].hlen, i0 = Q.ht[r + 1].hlen, h0 = Q.ht[r + 2].hlen;\n      do {\n        var d0 = E[i + 0] * T + E[i + 1];\n        i += 2, f += q[d0], Y += i0[d0], J += h0[d0];\n      } while (i < s);\n      var M0 = r;\n      return f > Y && (f = Y, M0++), f > J && (f = J, M0 = r + 2), n.bits += f, M0;\n    }\n    var e = [\n      1,\n      2,\n      5,\n      7,\n      7,\n      10,\n      10,\n      13,\n      13,\n      13,\n      13,\n      13,\n      13,\n      13,\n      13\n    ];\n    function l(E, i, s, r) {\n      var n = U(E, i, s);\n      switch (n) {\n        case 0:\n          return n;\n        case 1:\n          return o(E, i, s, r);\n        case 2:\n        case 3:\n          return u(\n            E,\n            i,\n            s,\n            e[n - 1],\n            r\n          );\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n          return d(\n            E,\n            i,\n            s,\n            e[n - 1],\n            r\n          );\n        default:\n          if (n > g.IXMAX_VAL)\n            return r.bits = g.LARGE_BITS, -1;\n          n -= 15;\n          var f;\n          for (f = 24; f < 32 && !(Q.ht[f].linmax >= n); f++)\n            ;\n          var Y;\n          for (Y = f - 8; Y < 24 && !(Q.ht[Y].linmax >= n); Y++)\n            ;\n          return R(E, i, s, Y, f, r);\n      }\n    }\n    this.noquant_count_bits = function(E, i, s) {\n      var r = i.l3_enc, n = Math.min(576, i.max_nonzero_coeff + 2 >> 1 << 1);\n      for (s != null && (s.sfb_count1 = 0); n > 1 && !(r[n - 1] | r[n - 2]); n -= 2)\n        ;\n      i.count1 = n;\n      for (var f = 0, Y = 0; n > 3; n -= 4) {\n        var J;\n        if (((r[n - 1] | r[n - 2] | r[n - 3] | r[n - 4]) & 2147483647) > 1)\n          break;\n        J = ((r[n - 4] * 2 + r[n - 3]) * 2 + r[n - 2]) * 2 + r[n - 1], f += Q.t32l[J], Y += Q.t33l[J];\n      }\n      var T = f;\n      if (i.count1table_select = 0, f > Y && (T = Y, i.count1table_select = 1), i.count1bits = T, i.big_values = n, n == 0)\n        return T;\n      if (i.block_type == W.SHORT_TYPE)\n        f = 3 * E.scalefac_band.s[3], f > i.big_values && (f = i.big_values), Y = i.big_values;\n      else if (i.block_type == W.NORM_TYPE) {\n        if (f = i.region0_count = E.bv_scf[n - 2], Y = i.region1_count = E.bv_scf[n - 1], u0(f + Y + 2 < W.SBPSY_l), Y = E.scalefac_band.l[f + Y + 2], f = E.scalefac_band.l[f + 1], Y < n) {\n          var q = new m(T);\n          i.table_select[2] = l(r, Y, n, q), T = q.bits;\n        }\n      } else\n        i.region0_count = 7, i.region1_count = W.SBMAX_l - 1 - 7 - 1, f = E.scalefac_band.l[7 + 1], Y = n, f > Y && (f = Y);\n      if (f = Math.min(f, n), Y = Math.min(Y, n), 0 < f) {\n        var q = new m(T);\n        i.table_select[0] = l(r, 0, f, q), T = q.bits;\n      }\n      if (f < Y) {\n        var q = new m(T);\n        i.table_select[1] = l(r, f, Y, q), T = q.bits;\n      }\n      if (E.use_best_huffman == 2 && (i.part2_3_length = T, best_huffman_divide(E, i), T = i.part2_3_length), s != null && i.block_type == W.NORM_TYPE) {\n        for (var i0 = 0; E.scalefac_band.l[i0] < i.big_values; )\n          i0++;\n        s.sfb_count1 = i0;\n      }\n      return T;\n    }, this.count_bits = function(E, i, s, r) {\n      var n = s.l3_enc, f = g.IXMAX_VAL / A.IPOW20(s.global_gain);\n      if (s.xrpow_max > f)\n        return g.LARGE_BITS;\n      if (t0(i, n, A.IPOW20(s.global_gain), s, r), E.substep_shaping & 2)\n        for (var Y = 0, J = s.global_gain + s.scalefac_scale, T = 0.634521682242439 / A.IPOW20(J), q = 0; q < s.sfbmax; q++) {\n          var i0 = s.width[q];\n          if (E.pseudohalf[q] == 0)\n            Y += i0;\n          else {\n            var h0;\n            for (h0 = Y, Y += i0; h0 < Y; ++h0)\n              n[h0] = i[h0] >= T ? n[h0] : 0;\n          }\n        }\n      return this.noquant_count_bits(E, s, r);\n    };\n    function M(E, i, s, r, n, f, Y) {\n      for (var J = i.big_values, T = 0; T <= 7 + 15; T++)\n        r[T] = g.LARGE_BITS;\n      for (var T = 0; T < 16; T++) {\n        var q = E.scalefac_band.l[T + 1];\n        if (q >= J)\n          break;\n        var i0 = 0, h0 = new m(i0), d0 = l(s, 0, q, h0);\n        i0 = h0.bits;\n        for (var M0 = 0; M0 < 8; M0++) {\n          var R0 = E.scalefac_band.l[T + M0 + 2];\n          if (R0 >= J)\n            break;\n          var A0 = i0;\n          h0 = new m(A0);\n          var w0 = l(s, q, R0, h0);\n          A0 = h0.bits, r[T + M0] > A0 && (r[T + M0] = A0, n[T + M0] = T, f[T + M0] = d0, Y[T + M0] = w0);\n        }\n      }\n    }\n    function p(E, i, s, r, n, f, Y, J) {\n      for (var T = i.big_values, q = 2; q < W.SBMAX_l + 1; q++) {\n        var i0 = E.scalefac_band.l[q];\n        if (i0 >= T)\n          break;\n        var h0 = n[q - 2] + i.count1bits;\n        if (s.part2_3_length <= h0)\n          break;\n        var d0 = new m(h0), M0 = l(r, i0, T, d0);\n        h0 = d0.bits, !(s.part2_3_length <= h0) && (s.assign(i), s.part2_3_length = h0, s.region0_count = f[q - 2], s.region1_count = q - 2 - f[q - 2], s.table_select[0] = Y[q - 2], s.table_select[1] = J[q - 2], s.table_select[2] = M0);\n      }\n    }\n    this.best_huffman_divide = function(E, i) {\n      var s = new D(), r = i.l3_enc, n = z(7 + 15 + 1), f = z(7 + 15 + 1), Y = z(7 + 15 + 1), J = z(7 + 15 + 1);\n      if (!(i.block_type == W.SHORT_TYPE && E.mode_gr == 1)) {\n        s.assign(i), i.block_type == W.NORM_TYPE && (M(E, i, r, n, f, Y, J), p(\n          E,\n          s,\n          i,\n          r,\n          n,\n          f,\n          Y,\n          J\n        ));\n        var T = s.big_values;\n        if (!(T == 0 || (r[T - 2] | r[T - 1]) > 1) && (T = i.count1 + 2, !(T > 576))) {\n          s.assign(i), s.count1 = T;\n          for (var q = 0, i0 = 0; T > s.big_values; T -= 4) {\n            var h0 = ((r[T - 4] * 2 + r[T - 3]) * 2 + r[T - 2]) * 2 + r[T - 1];\n            q += Q.t32l[h0], i0 += Q.t33l[h0];\n          }\n          if (s.big_values = T, s.count1table_select = 0, q > i0 && (q = i0, s.count1table_select = 1), s.count1bits = q, s.block_type == W.NORM_TYPE)\n            p(\n              E,\n              s,\n              i,\n              r,\n              n,\n              f,\n              Y,\n              J\n            );\n          else {\n            if (s.part2_3_length = q, q = E.scalefac_band.l[7 + 1], q > T && (q = T), q > 0) {\n              var d0 = new m(s.part2_3_length);\n              s.table_select[0] = l(r, 0, q, d0), s.part2_3_length = d0.bits;\n            }\n            if (T > q) {\n              var d0 = new m(s.part2_3_length);\n              s.table_select[1] = l(r, q, T, d0), s.part2_3_length = d0.bits;\n            }\n            i.part2_3_length > s.part2_3_length && i.assign(s);\n          }\n        }\n      }\n    };\n    var H = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16], B = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8], I = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4], v0 = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    f0.slen1_tab = I, f0.slen2_tab = v0;\n    function b(E, i) {\n      for (var s, r = i.tt[1][E], n = i.tt[0][E], f = 0; f < Q.scfsi_band.length - 1; f++) {\n        for (s = Q.scfsi_band[f]; s < Q.scfsi_band[f + 1] && !(n.scalefac[s] != r.scalefac[s] && r.scalefac[s] >= 0); s++)\n          ;\n        if (s == Q.scfsi_band[f + 1]) {\n          for (s = Q.scfsi_band[f]; s < Q.scfsi_band[f + 1]; s++)\n            r.scalefac[s] = -1;\n          i.scfsi[E][f] = 1;\n        }\n      }\n      var Y = 0, J = 0;\n      for (s = 0; s < 11; s++)\n        r.scalefac[s] != -1 && (J++, Y < r.scalefac[s] && (Y = r.scalefac[s]));\n      for (var T = 0, q = 0; s < W.SBPSY_l; s++)\n        r.scalefac[s] != -1 && (q++, T < r.scalefac[s] && (T = r.scalefac[s]));\n      for (var f = 0; f < 16; f++)\n        if (Y < H[f] && T < B[f]) {\n          var i0 = I[f] * J + v0[f] * q;\n          r.part2_length > i0 && (r.part2_length = i0, r.scalefac_compress = f);\n        }\n    }\n    this.best_scalefac_store = function(E, i, s, r) {\n      var n = r.tt[i][s], f, Y, J, T, q = 0;\n      for (J = 0, f = 0; f < n.sfbmax; f++) {\n        var i0 = n.width[f];\n        for (J += i0, T = -i0; T < 0 && n.l3_enc[T + J] == 0; T++)\n          ;\n        T == 0 && (n.scalefac[f] = q = -2);\n      }\n      if (n.scalefac_scale == 0 && n.preflag == 0) {\n        var h0 = 0;\n        for (f = 0; f < n.sfbmax; f++)\n          n.scalefac[f] > 0 && (h0 |= n.scalefac[f]);\n        if (!(h0 & 1) && h0 != 0) {\n          for (f = 0; f < n.sfbmax; f++)\n            n.scalefac[f] > 0 && (n.scalefac[f] >>= 1);\n          n.scalefac_scale = q = 1;\n        }\n      }\n      if (n.preflag == 0 && n.block_type != W.SHORT_TYPE && E.mode_gr == 2) {\n        for (f = 11; f < W.SBPSY_l && !(n.scalefac[f] < A.pretab[f] && n.scalefac[f] != -2); f++)\n          ;\n        if (f == W.SBPSY_l) {\n          for (f = 11; f < W.SBPSY_l; f++)\n            n.scalefac[f] > 0 && (n.scalefac[f] -= A.pretab[f]);\n          n.preflag = q = 1;\n        }\n      }\n      for (Y = 0; Y < 4; Y++)\n        r.scfsi[s][Y] = 0;\n      for (E.mode_gr == 2 && i == 1 && r.tt[0][s].block_type != W.SHORT_TYPE && r.tt[1][s].block_type != W.SHORT_TYPE && (b(s, r), q = 0), f = 0; f < n.sfbmax; f++)\n        n.scalefac[f] == -2 && (n.scalefac[f] = 0);\n      q != 0 && (E.mode_gr == 2 ? this.scale_bitcount(n) : this.scale_bitcount_lsf(E, n));\n    };\n    function a(E, i) {\n      for (var s = 0; s < i; ++s)\n        if (E[s] < 0)\n          return !1;\n      return !0;\n    }\n    var S = [\n      0,\n      18,\n      36,\n      54,\n      54,\n      36,\n      54,\n      72,\n      54,\n      72,\n      90,\n      72,\n      90,\n      108,\n      108,\n      126\n    ], L = [\n      0,\n      18,\n      36,\n      54,\n      51,\n      35,\n      53,\n      71,\n      52,\n      70,\n      88,\n      69,\n      87,\n      105,\n      104,\n      122\n    ], V = [\n      0,\n      10,\n      20,\n      30,\n      33,\n      21,\n      31,\n      41,\n      32,\n      42,\n      52,\n      43,\n      53,\n      63,\n      64,\n      74\n    ];\n    this.scale_bitcount = function(E) {\n      var i, s, r = 0, n = 0, f, Y = E.scalefac;\n      if (u0(a(Y, E.sfbmax)), E.block_type == W.SHORT_TYPE)\n        f = S, E.mixed_block_flag != 0 && (f = L);\n      else if (f = V, E.preflag == 0) {\n        for (s = 11; s < W.SBPSY_l && !(Y[s] < A.pretab[s]); s++)\n          ;\n        if (s == W.SBPSY_l)\n          for (E.preflag = 1, s = 11; s < W.SBPSY_l; s++)\n            Y[s] -= A.pretab[s];\n      }\n      for (s = 0; s < E.sfbdivide; s++)\n        r < Y[s] && (r = Y[s]);\n      for (; s < E.sfbmax; s++)\n        n < Y[s] && (n = Y[s]);\n      for (E.part2_length = g.LARGE_BITS, i = 0; i < 16; i++)\n        r < H[i] && n < B[i] && E.part2_length > f[i] && (E.part2_length = f[i], E.scalefac_compress = i);\n      return E.part2_length == g.LARGE_BITS;\n    };\n    var N = [\n      [15, 15, 7, 7],\n      [15, 15, 7, 0],\n      [7, 3, 0, 0],\n      [15, 31, 31, 0],\n      [7, 7, 7, 0],\n      [3, 3, 0, 0]\n    ];\n    this.scale_bitcount_lsf = function(E, i) {\n      var s, r, n, f, Y, J, T, q, i0 = z(4), h0 = i.scalefac;\n      for (i.preflag != 0 ? s = 2 : s = 0, T = 0; T < 4; T++)\n        i0[T] = 0;\n      if (i.block_type == W.SHORT_TYPE) {\n        r = 1;\n        var d0 = A.nr_of_sfb_block[s][r];\n        for (q = 0, n = 0; n < 4; n++)\n          for (f = d0[n] / 3, T = 0; T < f; T++, q++)\n            for (Y = 0; Y < 3; Y++)\n              h0[q * 3 + Y] > i0[n] && (i0[n] = h0[q * 3 + Y]);\n      } else {\n        r = 0;\n        var d0 = A.nr_of_sfb_block[s][r];\n        for (q = 0, n = 0; n < 4; n++)\n          for (f = d0[n], T = 0; T < f; T++, q++)\n            h0[q] > i0[n] && (i0[n] = h0[q]);\n      }\n      for (J = !1, n = 0; n < 4; n++)\n        i0[n] > N[s][n] && (J = !0);\n      if (!J) {\n        var M0, R0, A0, w0;\n        for (i.sfb_partition_table = A.nr_of_sfb_block[s][r], n = 0; n < 4; n++)\n          i.slen[n] = P[i0[n]];\n        switch (M0 = i.slen[0], R0 = i.slen[1], A0 = i.slen[2], w0 = i.slen[3], s) {\n          case 0:\n            i.scalefac_compress = (M0 * 5 + R0 << 4) + (A0 << 2) + w0;\n            break;\n          case 1:\n            i.scalefac_compress = 400 + (M0 * 5 + R0 << 2) + A0;\n            break;\n          case 2:\n            i.scalefac_compress = 500 + M0 * 3 + R0;\n            break;\n          default:\n            Z.err.printf(`intensity stereo not implemented yet\n`);\n            break;\n        }\n      }\n      if (!J)\n        for (u0(i.sfb_partition_table != null), i.part2_length = 0, n = 0; n < 4; n++)\n          i.part2_length += i.slen[n] * i.sfb_partition_table[n];\n      return J;\n    };\n    var P = [\n      0,\n      1,\n      2,\n      2,\n      3,\n      3,\n      3,\n      3,\n      4,\n      4,\n      4,\n      4,\n      4,\n      4,\n      4,\n      4\n    ];\n    this.huffman_init = function(E) {\n      for (var i = 2; i <= 576; i += 2) {\n        for (var s = 0, r; E.scalefac_band.l[++s] < i; )\n          ;\n        for (r = O[s][0]; E.scalefac_band.l[r + 1] > i; )\n          r--;\n        for (r < 0 && (r = O[s][0]), E.bv_scf[i - 2] = r, r = O[s][1]; E.scalefac_band.l[r + E.bv_scf[i - 2] + 2] > i; )\n          r--;\n        r < 0 && (r = O[s][1]), E.bv_scf[i - 1] = r;\n      }\n    };\n  }\n  return Ee = f0, Ee;\n}\nvar Be, sa;\nfunction Ve() {\n  if (sa)\n    return Be;\n  sa = 1;\n  var w = Q0, Z = w.System, X = w.Arrays, z = w.new_byte, u0 = w.new_float_n, W = w.new_int, Q = w.assert, D = Oa(), g = He, f0 = t1(), A = ne;\n  m.EQ = function(O, s0) {\n    return Math.abs(O) > Math.abs(s0) ? Math.abs(O - s0) <= Math.abs(O) * 1e-6 : Math.abs(O - s0) <= Math.abs(s0) * 1e-6;\n  }, m.NEQ = function(O, s0) {\n    return !m.EQ(O, s0);\n  };\n  function m() {\n    var O = Oe(), s0 = this, K = 32773, t0 = null, U = null, R = null, o = null;\n    this.setModules = function(i, s, r, n) {\n      t0 = i, U = s, R = r, o = n;\n    };\n    var u = null, d = 0, e = 0, l = 0;\n    this.getframebits = function(i) {\n      var s = i.internal_flags, r;\n      s.bitrate_index != 0 ? r = g.bitrate_table[i.version][s.bitrate_index] : r = i.brate;\n      var n = 0 | (i.version + 1) * 72e3 * r / i.out_samplerate + s.padding;\n      return 8 * n;\n    };\n    function M(i) {\n      Z.arraycopy(i.header[i.w_ptr].buf, 0, u, e, i.sideinfo_len), e += i.sideinfo_len, d += i.sideinfo_len * 8, i.w_ptr = i.w_ptr + 1 & A.MAX_HEADER_BUF - 1;\n    }\n    function p(i, s, r) {\n      for (; r > 0; ) {\n        var n;\n        l == 0 && (l = 8, e++, Q(e < O.LAME_MAXMP3BUFFER), Q(i.header[i.w_ptr].write_timing >= d), i.header[i.w_ptr].write_timing == d && M(i), u[e] = 0), n = Math.min(r, l), r -= n, l -= n, u[e] |= s >> r << l, d += n;\n      }\n    }\n    function H(i, s, r) {\n      for (; r > 0; ) {\n        var n;\n        l == 0 && (l = 8, e++, Q(e < O.LAME_MAXMP3BUFFER), u[e] = 0), n = Math.min(r, l), r -= n, l -= n, u[e] |= s >> r << l, d += n;\n      }\n    }\n    function B(i, s) {\n      var r = i.internal_flags, n;\n      if (s >= 8 && (p(r, 76, 8), s -= 8), s >= 8 && (p(r, 65, 8), s -= 8), s >= 8 && (p(r, 77, 8), s -= 8), s >= 8 && (p(r, 69, 8), s -= 8), s >= 32) {\n        var f = R.getLameShortVersion();\n        if (s >= 32)\n          for (n = 0; n < f.length && s >= 8; ++n)\n            s -= 8, p(r, f.charAt(n), 8);\n      }\n      for (; s >= 1; s -= 1)\n        p(r, r.ancillary_flag, 1), r.ancillary_flag ^= i.disable_reservoir ? 0 : 1;\n    }\n    function I(i, s, r) {\n      for (var n = i.header[i.h_ptr].ptr; r > 0; ) {\n        var f = Math.min(r, 8 - (n & 7));\n        r -= f, i.header[i.h_ptr].buf[n >> 3] |= s >> r << 8 - (n & 7) - f, n += f;\n      }\n      i.header[i.h_ptr].ptr = n;\n    }\n    function v0(i, s) {\n      i <<= 8;\n      for (var r = 0; r < 8; r++)\n        i <<= 1, s <<= 1, (s ^ i) & 65536 && (s ^= K);\n      return s;\n    }\n    this.CRC_writeheader = function(i, s) {\n      var r = 65535;\n      r = v0(s[2] & 255, r), r = v0(s[3] & 255, r);\n      for (var n = 6; n < i.sideinfo_len; n++)\n        r = v0(s[n] & 255, r);\n      s[4] = byte(r >> 8), s[5] = byte(r & 255);\n    };\n    function b(i, s) {\n      var r = i.internal_flags, n, f, Y;\n      if (n = r.l3_side, r.header[r.h_ptr].ptr = 0, X.fill(r.header[r.h_ptr].buf, 0, r.sideinfo_len, 0), i.out_samplerate < 16e3 ? I(r, 4094, 12) : I(r, 4095, 12), I(r, i.version, 1), I(r, 4 - 3, 2), I(r, i.error_protection ? 0 : 1, 1), I(r, r.bitrate_index, 4), I(r, r.samplerate_index, 2), I(r, r.padding, 1), I(r, i.extension, 1), I(r, i.mode.ordinal(), 2), I(r, r.mode_ext, 2), I(r, i.copyright, 1), I(r, i.original, 1), I(r, i.emphasis, 2), i.error_protection && I(r, 0, 16), i.version == 1) {\n        for (Q(n.main_data_begin >= 0), I(r, n.main_data_begin, 9), r.channels_out == 2 ? I(r, n.private_bits, 3) : I(r, n.private_bits, 5), Y = 0; Y < r.channels_out; Y++) {\n          var J;\n          for (J = 0; J < 4; J++)\n            I(r, n.scfsi[Y][J], 1);\n        }\n        for (f = 0; f < 2; f++)\n          for (Y = 0; Y < r.channels_out; Y++) {\n            var T = n.tt[f][Y];\n            I(r, T.part2_3_length + T.part2_length, 12), I(r, T.big_values / 2, 9), I(r, T.global_gain, 8), I(r, T.scalefac_compress, 4), T.block_type != f0.NORM_TYPE ? (I(r, 1, 1), I(r, T.block_type, 2), I(r, T.mixed_block_flag, 1), T.table_select[0] == 14 && (T.table_select[0] = 16), I(r, T.table_select[0], 5), T.table_select[1] == 14 && (T.table_select[1] = 16), I(r, T.table_select[1], 5), I(r, T.subblock_gain[0], 3), I(r, T.subblock_gain[1], 3), I(r, T.subblock_gain[2], 3)) : (I(r, 0, 1), T.table_select[0] == 14 && (T.table_select[0] = 16), I(r, T.table_select[0], 5), T.table_select[1] == 14 && (T.table_select[1] = 16), I(r, T.table_select[1], 5), T.table_select[2] == 14 && (T.table_select[2] = 16), I(r, T.table_select[2], 5), Q(0 <= T.region0_count && T.region0_count < 16), Q(0 <= T.region1_count && T.region1_count < 8), I(r, T.region0_count, 4), I(r, T.region1_count, 3)), I(r, T.preflag, 1), I(r, T.scalefac_scale, 1), I(r, T.count1table_select, 1);\n          }\n      } else\n        for (Q(n.main_data_begin >= 0), I(r, n.main_data_begin, 8), I(r, n.private_bits, r.channels_out), f = 0, Y = 0; Y < r.channels_out; Y++) {\n          var T = n.tt[f][Y];\n          I(r, T.part2_3_length + T.part2_length, 12), I(r, T.big_values / 2, 9), I(r, T.global_gain, 8), I(r, T.scalefac_compress, 9), T.block_type != f0.NORM_TYPE ? (I(r, 1, 1), I(r, T.block_type, 2), I(r, T.mixed_block_flag, 1), T.table_select[0] == 14 && (T.table_select[0] = 16), I(r, T.table_select[0], 5), T.table_select[1] == 14 && (T.table_select[1] = 16), I(r, T.table_select[1], 5), I(r, T.subblock_gain[0], 3), I(r, T.subblock_gain[1], 3), I(r, T.subblock_gain[2], 3)) : (I(r, 0, 1), T.table_select[0] == 14 && (T.table_select[0] = 16), I(r, T.table_select[0], 5), T.table_select[1] == 14 && (T.table_select[1] = 16), I(r, T.table_select[1], 5), T.table_select[2] == 14 && (T.table_select[2] = 16), I(r, T.table_select[2], 5), Q(0 <= T.region0_count && T.region0_count < 16), Q(0 <= T.region1_count && T.region1_count < 8), I(r, T.region0_count, 4), I(r, T.region1_count, 3)), I(r, T.scalefac_scale, 1), I(r, T.count1table_select, 1);\n        }\n      i.error_protection && CRC_writeheader(r, r.header[r.h_ptr].buf);\n      {\n        var q = r.h_ptr;\n        Q(r.header[q].ptr == r.sideinfo_len * 8), r.h_ptr = q + 1 & A.MAX_HEADER_BUF - 1, r.header[r.h_ptr].write_timing = r.header[q].write_timing + s, r.h_ptr == r.w_ptr && Z.err.println(`Error: MAX_HEADER_BUF too small in bitstream.c \n`);\n      }\n    }\n    function a(i, s) {\n      var r = g.ht[s.count1table_select + 32], n, f = 0, Y = s.big_values, J = s.big_values;\n      for (Q(s.count1table_select < 2), n = (s.count1 - s.big_values) / 4; n > 0; --n) {\n        var T = 0, q = 0, i0;\n        i0 = s.l3_enc[Y + 0], i0 != 0 && (q += 8, s.xr[J + 0] < 0 && T++), i0 = s.l3_enc[Y + 1], i0 != 0 && (q += 4, T *= 2, s.xr[J + 1] < 0 && T++), i0 = s.l3_enc[Y + 2], i0 != 0 && (q += 2, T *= 2, s.xr[J + 2] < 0 && T++), i0 = s.l3_enc[Y + 3], i0 != 0 && (q++, T *= 2, s.xr[J + 3] < 0 && T++), Y += 4, J += 4, p(i, T + r.table[q], r.hlen[q]), f += r.hlen[q];\n      }\n      return f;\n    }\n    function S(i, s, r, n, f) {\n      var Y = g.ht[s], J = 0;\n      if (s == 0)\n        return J;\n      for (var T = r; T < n; T += 2) {\n        var q = 0, i0 = 0, h0 = Y.xlen, d0 = Y.xlen, M0 = 0, R0 = f.l3_enc[T], A0 = f.l3_enc[T + 1];\n        if (R0 != 0 && (f.xr[T] < 0 && M0++, q--), s > 15) {\n          if (R0 > 14) {\n            var w0 = R0 - 15;\n            Q(w0 <= Y.linmax), M0 |= w0 << 1, i0 = h0, R0 = 15;\n          }\n          if (A0 > 14) {\n            var $0 = A0 - 15;\n            Q($0 <= Y.linmax), M0 <<= h0, M0 |= $0, i0 += h0, A0 = 15;\n          }\n          d0 = 16;\n        }\n        A0 != 0 && (M0 <<= 1, f.xr[T + 1] < 0 && M0++, q--), R0 = R0 * d0 + A0, i0 -= q, q += Y.hlen[R0], p(i, Y.table[R0], q), p(i, M0, i0), J += q + i0;\n      }\n      return J;\n    }\n    function L(i, s) {\n      var r = 3 * i.scalefac_band.s[3];\n      r > s.big_values && (r = s.big_values);\n      var n = S(i, s.table_select[0], 0, r, s);\n      return n += S(\n        i,\n        s.table_select[1],\n        r,\n        s.big_values,\n        s\n      ), n;\n    }\n    function V(i, s) {\n      var r, n, f, Y;\n      r = s.big_values;\n      var J = s.region0_count + 1;\n      return Q(J < i.scalefac_band.l.length), f = i.scalefac_band.l[J], J += s.region1_count + 1, Q(J < i.scalefac_band.l.length), Y = i.scalefac_band.l[J], f > r && (f = r), Y > r && (Y = r), n = S(i, s.table_select[0], 0, f, s), n += S(\n        i,\n        s.table_select[1],\n        f,\n        Y,\n        s\n      ), n += S(\n        i,\n        s.table_select[2],\n        Y,\n        r,\n        s\n      ), n;\n    }\n    function N(i) {\n      var s, r, n, f, Y = 0, J = i.internal_flags, T = J.l3_side;\n      if (i.version == 1)\n        for (s = 0; s < 2; s++)\n          for (r = 0; r < J.channels_out; r++) {\n            var q = T.tt[s][r], i0 = D.slen1_tab[q.scalefac_compress], h0 = D.slen2_tab[q.scalefac_compress];\n            for (f = 0, n = 0; n < q.sfbdivide; n++)\n              q.scalefac[n] != -1 && (p(J, q.scalefac[n], i0), f += i0);\n            for (; n < q.sfbmax; n++)\n              q.scalefac[n] != -1 && (p(J, q.scalefac[n], h0), f += h0);\n            Q(f == q.part2_length), q.block_type == f0.SHORT_TYPE ? f += L(J, q) : f += V(J, q), f += a(J, q), Q(f == q.part2_3_length + q.part2_length), Y += f;\n          }\n      else\n        for (s = 0, r = 0; r < J.channels_out; r++) {\n          var q = T.tt[s][r], d0, M0, R0 = 0;\n          if (Q(q.sfb_partition_table != null), f = 0, n = 0, M0 = 0, q.block_type == f0.SHORT_TYPE) {\n            for (; M0 < 4; M0++) {\n              var A0 = q.sfb_partition_table[M0] / 3, w0 = q.slen[M0];\n              for (d0 = 0; d0 < A0; d0++, n++)\n                p(\n                  J,\n                  Math.max(q.scalefac[n * 3 + 0], 0),\n                  w0\n                ), p(\n                  J,\n                  Math.max(q.scalefac[n * 3 + 1], 0),\n                  w0\n                ), p(\n                  J,\n                  Math.max(q.scalefac[n * 3 + 2], 0),\n                  w0\n                ), R0 += 3 * w0;\n            }\n            f += L(J, q);\n          } else {\n            for (; M0 < 4; M0++) {\n              var A0 = q.sfb_partition_table[M0], w0 = q.slen[M0];\n              for (d0 = 0; d0 < A0; d0++, n++)\n                p(J, Math.max(q.scalefac[n], 0), w0), R0 += w0;\n            }\n            f += V(J, q);\n          }\n          f += a(J, q), Q(f == q.part2_3_length), Q(R0 == q.part2_length), Y += R0 + f;\n        }\n      return Y;\n    }\n    function P() {\n      this.total = 0;\n    }\n    function E(i, s) {\n      var r = i.internal_flags, n, f, Y, J, T;\n      return T = r.w_ptr, J = r.h_ptr - 1, J == -1 && (J = A.MAX_HEADER_BUF - 1), n = r.header[J].write_timing - d, s.total = n, n >= 0 && (f = 1 + J - T, J < T && (f = 1 + J - T + A.MAX_HEADER_BUF), n -= f * 8 * r.sideinfo_len), Y = s0.getframebits(i), n += Y, s.total += Y, s.total % 8 != 0 ? s.total = 1 + s.total / 8 : s.total = s.total / 8, s.total += e + 1, n < 0 && Z.err.println(`strange error flushing buffer ... \n`), n;\n    }\n    this.flush_bitstream = function(i) {\n      var s = i.internal_flags, r, n, f = s.h_ptr - 1;\n      if (f == -1 && (f = A.MAX_HEADER_BUF - 1), r = s.l3_side, !((n = E(i, new P())) < 0)) {\n        if (B(i, n), Q(s.header[f].write_timing + this.getframebits(i) == d), s.ResvSize = 0, r.main_data_begin = 0, s.findReplayGain) {\n          var Y = t0.GetTitleGain(s.rgdata);\n          Q(NEQ(Y, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES)), s.RadioGain = Math.floor(Y * 10 + 0.5) | 0;\n        }\n        s.findPeakSample && (s.noclipGainChange = Math.ceil(Math.log10(s.PeakSample / 32767) * 20 * 10) | 0, s.noclipGainChange > 0 && (EQ(i.scale, 1) || EQ(i.scale, 0)) ? s.noclipScale = Math.floor(32767 / s.PeakSample * 100) / 100 : s.noclipScale = -1);\n      }\n    }, this.add_dummy_byte = function(i, s, r) {\n      for (var n = i.internal_flags, f; r-- > 0; )\n        for (H(n, s, 8), f = 0; f < A.MAX_HEADER_BUF; ++f)\n          n.header[f].write_timing += 8;\n    }, this.format_bitstream = function(i) {\n      var s = i.internal_flags, r;\n      r = s.l3_side;\n      var n = this.getframebits(i);\n      B(i, r.resvDrain_pre), b(i, n);\n      var f = 8 * s.sideinfo_len;\n      if (f += N(i), B(i, r.resvDrain_post), f += r.resvDrain_post, r.main_data_begin += (n - f) / 8, E(i, new P()) != s.ResvSize && Z.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\"), r.main_data_begin * 8 != s.ResvSize && (Z.err.printf(\n        `bit reservoir error: \nl3_side.main_data_begin: %d \nResvoir size:             %d \nresv drain (post)         %d \nresv drain (pre)          %d \nheader and sideinfo:      %d \ndata bits:                %d \ntotal bits:               %d (remainder: %d) \nbitsperframe:             %d \n`,\n        8 * r.main_data_begin,\n        s.ResvSize,\n        r.resvDrain_post,\n        r.resvDrain_pre,\n        8 * s.sideinfo_len,\n        f - r.resvDrain_post - 8 * s.sideinfo_len,\n        f,\n        f % 8,\n        n\n      ), Z.err.println(\"This is a fatal error.  It has several possible causes:\"), Z.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\"), Z.err.println(\" 9%%  Your system is overclocked\"), Z.err.println(\" 1%%  bug in LAME encoding library\"), s.ResvSize = r.main_data_begin * 8), d > 1e9) {\n        var Y;\n        for (Y = 0; Y < A.MAX_HEADER_BUF; ++Y)\n          s.header[Y].write_timing -= d;\n        d = 0;\n      }\n      return 0;\n    }, this.copy_buffer = function(i, s, r, n, f) {\n      var Y = e + 1;\n      if (Y <= 0)\n        return 0;\n      if (n != 0 && Y > n)\n        return -1;\n      if (Z.arraycopy(u, 0, s, r, Y), e = -1, l = 0, f != 0) {\n        var J = W(1);\n        if (J[0] = i.nMusicCRC, o.updateMusicCRC(J, s, r, Y), i.nMusicCRC = J[0], Y > 0 && (i.VBR_seek_table.nBytesWritten += Y), i.decode_on_the_fly) {\n          for (var T = u0([2, 1152]), q = Y, i0 = -1, h0; i0 != 0; )\n            if (i0 = U.hip_decode1_unclipped(\n              i.hip,\n              s,\n              r,\n              q,\n              T[0],\n              T[1]\n            ), q = 0, i0 == -1 && (i0 = 0), i0 > 0) {\n              if (i.findPeakSample) {\n                for (h0 = 0; h0 < i0; h0++)\n                  T[0][h0] > i.PeakSample ? i.PeakSample = T[0][h0] : -T[0][h0] > i.PeakSample && (i.PeakSample = -T[0][h0]);\n                if (i.channels_out > 1)\n                  for (h0 = 0; h0 < i0; h0++)\n                    T[1][h0] > i.PeakSample ? i.PeakSample = T[1][h0] : -T[1][h0] > i.PeakSample && (i.PeakSample = -T[1][h0]);\n              }\n              if (i.findReplayGain && t0.AnalyzeSamples(\n                i.rgdata,\n                T[0],\n                0,\n                T[1],\n                0,\n                i0,\n                i.channels_out\n              ) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                return -6;\n            }\n        }\n      }\n      return Y;\n    }, this.init_bit_stream_w = function(i) {\n      u = z(O.LAME_MAXMP3BUFFER), i.h_ptr = i.w_ptr = 0, i.header[i.h_ptr].write_timing = 0, e = -1, l = 0, d = 0;\n    };\n  }\n  return Be = m, Be;\n}\nvar Te, ia;\nfunction Oe() {\n  if (ia)\n    return Te;\n  ia = 1;\n  var w = Q0, Z = w.System, X = w.VbrMode, z = w.ShortBlock, u0 = w.new_float, W = w.new_int_n, Q = w.new_short_n, D = w.assert, g = Qa, f0 = za, A = ne, m = x2, O = E2, s0 = N2, K = Ve(), t0 = He, U = t1();\n  function R() {\n    var o = j1, u = this, d = 128 * 1024;\n    R.V9 = 410, R.V8 = 420, R.V7 = 430, R.V6 = 440, R.V5 = 450, R.V4 = 460, R.V3 = 470, R.V2 = 480, R.V1 = 490, R.V0 = 500, R.R3MIX = 1e3, R.STANDARD = 1001, R.EXTREME = 1002, R.INSANE = 1003, R.STANDARD_FAST = 1004, R.EXTREME_FAST = 1005, R.MEDIUM = 1006, R.MEDIUM_FAST = 1007;\n    var e = 16384 + d;\n    R.LAME_MAXMP3BUFFER = e;\n    var l, M, p, H, B, I = new g(), v0, b, a;\n    this.enc = new U(), this.setModules = function(t, _, S0, E0, V0, H0, y0, T0, F0) {\n      l = t, M = _, p = S0, H = E0, B = V0, v0 = H0, b = T0, a = F0, this.enc.setModules(M, I, H, v0);\n    };\n    function S() {\n      this.mask_adjust = 0, this.mask_adjust_short = 0, this.bo_l_weight = u0(U.SBMAX_l), this.bo_s_weight = u0(U.SBMAX_s);\n    }\n    function L() {\n      this.lowerlimit = 0;\n    }\n    function V(t, _) {\n      this.lowpass = _;\n    }\n    var N = 4294479419;\n    function P(t) {\n      var _;\n      return t.class_id = N, _ = t.internal_flags = new A(), t.mode = o.NOT_SET, t.original = 1, t.in_samplerate = 44100, t.num_channels = 2, t.num_samples = -1, t.bWriteVbrTag = !0, t.quality = -1, t.short_blocks = null, _.subblock_gain = -1, t.lowpassfreq = 0, t.highpassfreq = 0, t.lowpasswidth = -1, t.highpasswidth = -1, t.VBR = X.vbr_off, t.VBR_q = 4, t.ATHcurve = -1, t.VBR_mean_bitrate_kbps = 128, t.VBR_min_bitrate_kbps = 0, t.VBR_max_bitrate_kbps = 0, t.VBR_hard_min = 0, _.VBR_min_bitrate = 1, _.VBR_max_bitrate = 13, t.quant_comp = -1, t.quant_comp_short = -1, t.msfix = -1, _.resample_ratio = 1, _.OldValue[0] = 180, _.OldValue[1] = 180, _.CurrentStep[0] = 4, _.CurrentStep[1] = 4, _.masking_lower = 1, _.nsPsy.attackthre = -1, _.nsPsy.attackthre_s = -1, t.scale = -1, t.athaa_type = -1, t.ATHtype = -1, t.athaa_loudapprox = -1, t.athaa_sensitivity = 0, t.useTemporal = null, t.interChRatio = -1, _.mf_samples_to_encode = U.ENCDELAY + U.POSTDELAY, t.encoder_padding = 0, _.mf_size = U.ENCDELAY - U.MDCTDELAY, t.findReplayGain = !1, t.decode_on_the_fly = !1, _.decode_on_the_fly = !1, _.findReplayGain = !1, _.findPeakSample = !1, _.RadioGain = 0, _.AudiophileGain = 0, _.noclipGainChange = 0, _.noclipScale = -1, t.preset = 0, t.write_id3tag_automatic = !0, 0;\n    }\n    this.lame_init = function() {\n      var t = new f0();\n      return P(t), t.lame_allocated_gfp = 1, t;\n    };\n    function E(t) {\n      return t > 1 ? 0 : t <= 0 ? 1 : Math.cos(Math.PI / 2 * t);\n    }\n    this.nearestBitrateFullIndex = function(t) {\n      var _ = [\n        8,\n        16,\n        24,\n        32,\n        40,\n        48,\n        56,\n        64,\n        80,\n        96,\n        112,\n        128,\n        160,\n        192,\n        224,\n        256,\n        320\n      ], S0 = 0, E0 = 0, V0 = 0, H0 = 0;\n      H0 = _[16], V0 = 16, E0 = _[16], S0 = 16;\n      for (var y0 = 0; y0 < 16; y0++)\n        if (Math.max(t, _[y0 + 1]) != t) {\n          H0 = _[y0 + 1], V0 = y0 + 1, E0 = _[y0], S0 = y0;\n          break;\n        }\n      return H0 - t > t - E0 ? S0 : V0;\n    };\n    function i(t, _) {\n      var S0 = 44100;\n      return _ >= 48e3 ? S0 = 48e3 : _ >= 44100 ? S0 = 44100 : _ >= 32e3 ? S0 = 32e3 : _ >= 24e3 ? S0 = 24e3 : _ >= 22050 ? S0 = 22050 : _ >= 16e3 ? S0 = 16e3 : _ >= 12e3 ? S0 = 12e3 : _ >= 11025 ? S0 = 11025 : _ >= 8e3 && (S0 = 8e3), t == -1 ? S0 : (t <= 15960 && (S0 = 44100), t <= 15250 && (S0 = 32e3), t <= 11220 && (S0 = 24e3), t <= 9970 && (S0 = 22050), t <= 7230 && (S0 = 16e3), t <= 5420 && (S0 = 12e3), t <= 4510 && (S0 = 11025), t <= 3970 && (S0 = 8e3), _ < S0 ? _ > 44100 ? 48e3 : _ > 32e3 ? 44100 : _ > 24e3 ? 32e3 : _ > 22050 ? 24e3 : _ > 16e3 ? 22050 : _ > 12e3 ? 16e3 : _ > 11025 ? 12e3 : _ > 8e3 ? 11025 : 8e3 : S0);\n    }\n    function s(t, _) {\n      switch (t) {\n        case 44100:\n          return _.version = 1, 0;\n        case 48e3:\n          return _.version = 1, 1;\n        case 32e3:\n          return _.version = 1, 2;\n        case 22050:\n          return _.version = 0, 0;\n        case 24e3:\n          return _.version = 0, 1;\n        case 16e3:\n          return _.version = 0, 2;\n        case 11025:\n          return _.version = 0, 0;\n        case 12e3:\n          return _.version = 0, 1;\n        case 8e3:\n          return _.version = 0, 2;\n        default:\n          return _.version = 0, -1;\n      }\n    }\n    function r(t, _, S0) {\n      S0 < 16e3 && (_ = 2);\n      for (var E0 = t0.bitrate_table[_][1], V0 = 2; V0 <= 14; V0++)\n        t0.bitrate_table[_][V0] > 0 && Math.abs(t0.bitrate_table[_][V0] - t) < Math.abs(E0 - t) && (E0 = t0.bitrate_table[_][V0]);\n      return E0;\n    }\n    function n(t, _, S0) {\n      S0 < 16e3 && (_ = 2);\n      for (var E0 = 0; E0 <= 14; E0++)\n        if (t0.bitrate_table[_][E0] > 0 && t0.bitrate_table[_][E0] == t)\n          return E0;\n      return -1;\n    }\n    function f(t, _) {\n      var S0 = [\n        new V(8, 2e3),\n        new V(16, 3700),\n        new V(24, 3900),\n        new V(32, 5500),\n        new V(40, 7e3),\n        new V(48, 7500),\n        new V(56, 1e4),\n        new V(64, 11e3),\n        new V(80, 13500),\n        new V(96, 15100),\n        new V(112, 15600),\n        new V(128, 17e3),\n        new V(160, 17500),\n        new V(192, 18600),\n        new V(224, 19400),\n        new V(256, 19700),\n        new V(320, 20500)\n      ], E0 = u.nearestBitrateFullIndex(_);\n      t.lowerlimit = S0[E0].lowpass;\n    }\n    function Y(t) {\n      var _ = t.internal_flags, S0 = 32, E0 = -1;\n      if (_.lowpass1 > 0) {\n        for (var V0 = 999, H0 = 0; H0 <= 31; H0++) {\n          var y0 = H0 / 31;\n          y0 >= _.lowpass2 && (S0 = Math.min(S0, H0)), _.lowpass1 < y0 && y0 < _.lowpass2 && (V0 = Math.min(V0, H0));\n        }\n        V0 == 999 ? _.lowpass1 = (S0 - 0.75) / 31 : _.lowpass1 = (V0 - 0.75) / 31, _.lowpass2 = S0 / 31;\n      }\n      if (_.highpass2 > 0 && _.highpass2 < 0.9 * (0.75 / 31) && (_.highpass1 = 0, _.highpass2 = 0, Z.err.println(`Warning: highpass filter disabled.  highpass frequency too small\n`)), _.highpass2 > 0) {\n        for (var T0 = -1, H0 = 0; H0 <= 31; H0++) {\n          var y0 = H0 / 31;\n          y0 <= _.highpass1 && (E0 = Math.max(E0, H0)), _.highpass1 < y0 && y0 < _.highpass2 && (T0 = Math.max(T0, H0));\n        }\n        _.highpass1 = E0 / 31, T0 == -1 ? _.highpass2 = (E0 + 0.75) / 31 : _.highpass2 = (T0 + 0.75) / 31;\n      }\n      for (var H0 = 0; H0 < 32; H0++) {\n        var F0, I0, y0 = H0 / 31;\n        _.highpass2 > _.highpass1 ? F0 = E((_.highpass2 - y0) / (_.highpass2 - _.highpass1 + 1e-20)) : F0 = 1, _.lowpass2 > _.lowpass1 ? I0 = E((y0 - _.lowpass1) / (_.lowpass2 - _.lowpass1 + 1e-20)) : I0 = 1, _.amp_filter[H0] = F0 * I0;\n      }\n    }\n    function J(t) {\n      var _ = t.internal_flags;\n      switch (t.quality) {\n        default:\n        case 9:\n          _.psymodel = 0, _.noise_shaping = 0, _.noise_shaping_amp = 0, _.noise_shaping_stop = 0, _.use_best_huffman = 0, _.full_outer_loop = 0;\n          break;\n        case 8:\n          t.quality = 7;\n        case 7:\n          _.psymodel = 1, _.noise_shaping = 0, _.noise_shaping_amp = 0, _.noise_shaping_stop = 0, _.use_best_huffman = 0, _.full_outer_loop = 0;\n          break;\n        case 6:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.noise_shaping_amp = 0, _.noise_shaping_stop = 0, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 0, _.full_outer_loop = 0;\n          break;\n        case 5:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.noise_shaping_amp = 0, _.noise_shaping_stop = 0, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 0, _.full_outer_loop = 0;\n          break;\n        case 4:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.noise_shaping_amp = 0, _.noise_shaping_stop = 0, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 1, _.full_outer_loop = 0;\n          break;\n        case 3:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.noise_shaping_amp = 1, _.noise_shaping_stop = 1, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 1, _.full_outer_loop = 0;\n          break;\n        case 2:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.substep_shaping == 0 && (_.substep_shaping = 2), _.noise_shaping_amp = 1, _.noise_shaping_stop = 1, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 1, _.full_outer_loop = 0;\n          break;\n        case 1:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.substep_shaping == 0 && (_.substep_shaping = 2), _.noise_shaping_amp = 2, _.noise_shaping_stop = 1, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 1, _.full_outer_loop = 0;\n          break;\n        case 0:\n          _.psymodel = 1, _.noise_shaping == 0 && (_.noise_shaping = 1), _.substep_shaping == 0 && (_.substep_shaping = 2), _.noise_shaping_amp = 2, _.noise_shaping_stop = 1, _.subblock_gain == -1 && (_.subblock_gain = 1), _.use_best_huffman = 1, _.full_outer_loop = 0;\n          break;\n      }\n    }\n    function T(t) {\n      var _ = t.internal_flags;\n      t.frameNum = 0, t.write_id3tag_automatic && b.id3tag_write_v2(t), _.bitrate_stereoMode_Hist = W([16, 4 + 1]), _.bitrate_blockType_Hist = W([16, 4 + 1 + 1]), _.PeakSample = 0, t.bWriteVbrTag && v0.InitVbrTag(t);\n    }\n    this.lame_init_params = function(t) {\n      var _ = t.internal_flags;\n      if (_.Class_ID = 0, _.ATH == null && (_.ATH = new m()), _.PSY == null && (_.PSY = new S()), _.rgdata == null && (_.rgdata = new O()), _.channels_in = t.num_channels, _.channels_in == 1 && (t.mode = o.MONO), _.channels_out = t.mode == o.MONO ? 1 : 2, _.mode_ext = U.MPG_MD_MS_LR, t.mode == o.MONO && (t.force_ms = !1), t.VBR == X.vbr_off && t.VBR_mean_bitrate_kbps != 128 && t.brate == 0 && (t.brate = t.VBR_mean_bitrate_kbps), t.VBR == X.vbr_off || t.VBR == X.vbr_mtrh || t.VBR == X.vbr_mt || (t.free_format = !1), t.VBR == X.vbr_off && t.brate == 0 && K.EQ(t.compression_ratio, 0) && (t.compression_ratio = 11.025), t.VBR == X.vbr_off && t.compression_ratio > 0 && (t.out_samplerate == 0 && (t.out_samplerate = map2MP3Frequency(int(0.97 * t.in_samplerate))), t.brate = 0 | t.out_samplerate * 16 * _.channels_out / (1e3 * t.compression_ratio), _.samplerate_index = s(t.out_samplerate, t), t.free_format || (t.brate = r(\n        t.brate,\n        t.version,\n        t.out_samplerate\n      ))), t.out_samplerate != 0 && (t.out_samplerate < 16e3 ? (t.VBR_mean_bitrate_kbps = Math.max(\n        t.VBR_mean_bitrate_kbps,\n        8\n      ), t.VBR_mean_bitrate_kbps = Math.min(\n        t.VBR_mean_bitrate_kbps,\n        64\n      )) : t.out_samplerate < 32e3 ? (t.VBR_mean_bitrate_kbps = Math.max(\n        t.VBR_mean_bitrate_kbps,\n        8\n      ), t.VBR_mean_bitrate_kbps = Math.min(\n        t.VBR_mean_bitrate_kbps,\n        160\n      )) : (t.VBR_mean_bitrate_kbps = Math.max(\n        t.VBR_mean_bitrate_kbps,\n        32\n      ), t.VBR_mean_bitrate_kbps = Math.min(\n        t.VBR_mean_bitrate_kbps,\n        320\n      ))), t.lowpassfreq == 0) {\n        var S0 = 16e3;\n        switch (t.VBR) {\n          case X.vbr_off: {\n            var E0 = new L();\n            f(E0, t.brate), S0 = E0.lowerlimit;\n            break;\n          }\n          case X.vbr_abr: {\n            var E0 = new L();\n            f(E0, t.VBR_mean_bitrate_kbps), S0 = E0.lowerlimit;\n            break;\n          }\n          case X.vbr_rh: {\n            var V0 = [\n              19500,\n              19e3,\n              18600,\n              18e3,\n              17500,\n              16e3,\n              15600,\n              14900,\n              12500,\n              1e4,\n              3950\n            ];\n            if (0 <= t.VBR_q && t.VBR_q <= 9) {\n              var H0 = V0[t.VBR_q], y0 = V0[t.VBR_q + 1], T0 = t.VBR_q_frac;\n              S0 = linear_int(H0, y0, T0);\n            } else\n              S0 = 19500;\n            break;\n          }\n          default: {\n            var V0 = [\n              19500,\n              19e3,\n              18500,\n              18e3,\n              17500,\n              16500,\n              15500,\n              14500,\n              12500,\n              9500,\n              3950\n            ];\n            if (0 <= t.VBR_q && t.VBR_q <= 9) {\n              var H0 = V0[t.VBR_q], y0 = V0[t.VBR_q + 1], T0 = t.VBR_q_frac;\n              S0 = linear_int(H0, y0, T0);\n            } else\n              S0 = 19500;\n          }\n        }\n        t.mode == o.MONO && (t.VBR == X.vbr_off || t.VBR == X.vbr_abr) && (S0 *= 1.5), t.lowpassfreq = S0 | 0;\n      }\n      if (t.out_samplerate == 0 && (2 * t.lowpassfreq > t.in_samplerate && (t.lowpassfreq = t.in_samplerate / 2), t.out_samplerate = i(\n        t.lowpassfreq | 0,\n        t.in_samplerate\n      )), t.lowpassfreq = Math.min(20500, t.lowpassfreq), t.lowpassfreq = Math.min(t.out_samplerate / 2, t.lowpassfreq), t.VBR == X.vbr_off && (t.compression_ratio = t.out_samplerate * 16 * _.channels_out / (1e3 * t.brate)), t.VBR == X.vbr_abr && (t.compression_ratio = t.out_samplerate * 16 * _.channels_out / (1e3 * t.VBR_mean_bitrate_kbps)), t.bWriteVbrTag || (t.findReplayGain = !1, t.decode_on_the_fly = !1, _.findPeakSample = !1), _.findReplayGain = t.findReplayGain, _.decode_on_the_fly = t.decode_on_the_fly, _.decode_on_the_fly && (_.findPeakSample = !0), _.findReplayGain && l.InitGainAnalysis(_.rgdata, t.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR)\n        return t.internal_flags = null, -6;\n      switch (_.decode_on_the_fly && !t.decode_only && (_.hip != null && a.hip_decode_exit(_.hip), _.hip = a.hip_decode_init()), _.mode_gr = t.out_samplerate <= 24e3 ? 1 : 2, t.framesize = 576 * _.mode_gr, t.encoder_delay = U.ENCDELAY, _.resample_ratio = t.in_samplerate / t.out_samplerate, t.VBR) {\n        case X.vbr_mt:\n        case X.vbr_rh:\n        case X.vbr_mtrh:\n          {\n            var F0 = [\n              5.7,\n              6.5,\n              7.3,\n              8.2,\n              10,\n              11.9,\n              13,\n              14,\n              15,\n              16.5\n            ];\n            t.compression_ratio = F0[t.VBR_q];\n          }\n          break;\n        case X.vbr_abr:\n          t.compression_ratio = t.out_samplerate * 16 * _.channels_out / (1e3 * t.VBR_mean_bitrate_kbps);\n          break;\n        default:\n          t.compression_ratio = t.out_samplerate * 16 * _.channels_out / (1e3 * t.brate);\n          break;\n      }\n      if (t.mode == o.NOT_SET && (t.mode = o.JOINT_STEREO), t.highpassfreq > 0 ? (_.highpass1 = 2 * t.highpassfreq, t.highpasswidth >= 0 ? _.highpass2 = 2 * (t.highpassfreq + t.highpasswidth) : _.highpass2 = (1 + 0) * 2 * t.highpassfreq, _.highpass1 /= t.out_samplerate, _.highpass2 /= t.out_samplerate) : (_.highpass1 = 0, _.highpass2 = 0), t.lowpassfreq > 0 ? (_.lowpass2 = 2 * t.lowpassfreq, t.lowpasswidth >= 0 ? (_.lowpass1 = 2 * (t.lowpassfreq - t.lowpasswidth), _.lowpass1 < 0 && (_.lowpass1 = 0)) : _.lowpass1 = (1 - 0) * 2 * t.lowpassfreq, _.lowpass1 /= t.out_samplerate, _.lowpass2 /= t.out_samplerate) : (_.lowpass1 = 0, _.lowpass2 = 0), Y(t), _.samplerate_index = s(t.out_samplerate, t), _.samplerate_index < 0)\n        return t.internal_flags = null, -1;\n      if (t.VBR == X.vbr_off) {\n        if (t.free_format)\n          _.bitrate_index = 0;\n        else if (t.brate = r(\n          t.brate,\n          t.version,\n          t.out_samplerate\n        ), _.bitrate_index = n(\n          t.brate,\n          t.version,\n          t.out_samplerate\n        ), _.bitrate_index <= 0)\n          return t.internal_flags = null, -1;\n      } else\n        _.bitrate_index = 1;\n      t.analysis && (t.bWriteVbrTag = !1), _.pinfo != null && (t.bWriteVbrTag = !1), M.init_bit_stream_w(_);\n      for (var I0 = _.samplerate_index + 3 * t.version + 6 * (t.out_samplerate < 16e3 ? 1 : 0), b0 = 0; b0 < U.SBMAX_l + 1; b0++)\n        _.scalefac_band.l[b0] = H.sfBandIndex[I0].l[b0];\n      for (var b0 = 0; b0 < U.PSFB21 + 1; b0++) {\n        var G0 = (_.scalefac_band.l[22] - _.scalefac_band.l[21]) / U.PSFB21, e1 = _.scalefac_band.l[21] + b0 * G0;\n        _.scalefac_band.psfb21[b0] = e1;\n      }\n      _.scalefac_band.psfb21[U.PSFB21] = 576;\n      for (var b0 = 0; b0 < U.SBMAX_s + 1; b0++)\n        _.scalefac_band.s[b0] = H.sfBandIndex[I0].s[b0];\n      for (var b0 = 0; b0 < U.PSFB12 + 1; b0++) {\n        var G0 = (_.scalefac_band.s[13] - _.scalefac_band.s[12]) / U.PSFB12, e1 = _.scalefac_band.s[12] + b0 * G0;\n        _.scalefac_band.psfb12[b0] = e1;\n      }\n      _.scalefac_band.psfb12[U.PSFB12] = 192, t.version == 1 ? _.sideinfo_len = _.channels_out == 1 ? 4 + 17 : 4 + 32 : _.sideinfo_len = _.channels_out == 1 ? 4 + 9 : 4 + 17, t.error_protection && (_.sideinfo_len += 2), T(t), _.Class_ID = N;\n      {\n        var Y0;\n        for (Y0 = 0; Y0 < 19; Y0++)\n          _.nsPsy.pefirbuf[Y0] = 700 * _.mode_gr * _.channels_out;\n        t.ATHtype == -1 && (t.ATHtype = 4);\n      }\n      switch (D(t.VBR_q <= 9), D(t.VBR_q >= 0), t.VBR) {\n        case X.vbr_mt:\n          t.VBR = X.vbr_mtrh;\n        case X.vbr_mtrh: {\n          t.useTemporal == null && (t.useTemporal = !1), p.apply_preset(t, 500 - t.VBR_q * 10, 0), t.quality < 0 && (t.quality = LAME_DEFAULT_QUALITY), t.quality < 5 && (t.quality = 0), t.quality > 5 && (t.quality = 5), _.PSY.mask_adjust = t.maskingadjust, _.PSY.mask_adjust_short = t.maskingadjust_short, t.experimentalY ? _.sfb21_extra = !1 : _.sfb21_extra = t.out_samplerate > 44e3, _.iteration_loop = new VBRNewIterationLoop(B);\n          break;\n        }\n        case X.vbr_rh: {\n          p.apply_preset(t, 500 - t.VBR_q * 10, 0), _.PSY.mask_adjust = t.maskingadjust, _.PSY.mask_adjust_short = t.maskingadjust_short, t.experimentalY ? _.sfb21_extra = !1 : _.sfb21_extra = t.out_samplerate > 44e3, t.quality > 6 && (t.quality = 6), t.quality < 0 && (t.quality = LAME_DEFAULT_QUALITY), _.iteration_loop = new VBROldIterationLoop(B);\n          break;\n        }\n        default: {\n          var v;\n          _.sfb21_extra = !1, t.quality < 0 && (t.quality = LAME_DEFAULT_QUALITY), v = t.VBR, v == X.vbr_off && (t.VBR_mean_bitrate_kbps = t.brate), p.apply_preset(t, t.VBR_mean_bitrate_kbps, 0), t.VBR = v, _.PSY.mask_adjust = t.maskingadjust, _.PSY.mask_adjust_short = t.maskingadjust_short, v == X.vbr_off ? _.iteration_loop = new s0(B) : _.iteration_loop = new ABRIterationLoop(B);\n          break;\n        }\n      }\n      if (D(t.scale >= 0), t.VBR != X.vbr_off) {\n        if (_.VBR_min_bitrate = 1, _.VBR_max_bitrate = 14, t.out_samplerate < 16e3 && (_.VBR_max_bitrate = 8), t.VBR_min_bitrate_kbps != 0 && (t.VBR_min_bitrate_kbps = r(\n          t.VBR_min_bitrate_kbps,\n          t.version,\n          t.out_samplerate\n        ), _.VBR_min_bitrate = n(\n          t.VBR_min_bitrate_kbps,\n          t.version,\n          t.out_samplerate\n        ), _.VBR_min_bitrate < 0) || t.VBR_max_bitrate_kbps != 0 && (t.VBR_max_bitrate_kbps = r(\n          t.VBR_max_bitrate_kbps,\n          t.version,\n          t.out_samplerate\n        ), _.VBR_max_bitrate = n(\n          t.VBR_max_bitrate_kbps,\n          t.version,\n          t.out_samplerate\n        ), _.VBR_max_bitrate < 0))\n          return -1;\n        t.VBR_min_bitrate_kbps = t0.bitrate_table[t.version][_.VBR_min_bitrate], t.VBR_max_bitrate_kbps = t0.bitrate_table[t.version][_.VBR_max_bitrate], t.VBR_mean_bitrate_kbps = Math.min(\n          t0.bitrate_table[t.version][_.VBR_max_bitrate],\n          t.VBR_mean_bitrate_kbps\n        ), t.VBR_mean_bitrate_kbps = Math.max(\n          t0.bitrate_table[t.version][_.VBR_min_bitrate],\n          t.VBR_mean_bitrate_kbps\n        );\n      }\n      return t.tune && (_.PSY.mask_adjust += t.tune_value_a, _.PSY.mask_adjust_short += t.tune_value_a), J(t), D(t.scale >= 0), t.athaa_type < 0 ? _.ATH.useAdjust = 3 : _.ATH.useAdjust = t.athaa_type, _.ATH.aaSensitivityP = Math.pow(10, t.athaa_sensitivity / -10), t.short_blocks == null && (t.short_blocks = z.short_block_allowed), t.short_blocks == z.short_block_allowed && (t.mode == o.JOINT_STEREO || t.mode == o.STEREO) && (t.short_blocks = z.short_block_coupled), t.quant_comp < 0 && (t.quant_comp = 1), t.quant_comp_short < 0 && (t.quant_comp_short = 0), t.msfix < 0 && (t.msfix = 0), t.exp_nspsytune = t.exp_nspsytune | 1, t.internal_flags.nsPsy.attackthre < 0 && (t.internal_flags.nsPsy.attackthre = g.NSATTACKTHRE), t.internal_flags.nsPsy.attackthre_s < 0 && (t.internal_flags.nsPsy.attackthre_s = g.NSATTACKTHRE_S), D(t.scale >= 0), t.scale < 0 && (t.scale = 1), t.ATHtype < 0 && (t.ATHtype = 4), t.ATHcurve < 0 && (t.ATHcurve = 4), t.athaa_loudapprox < 0 && (t.athaa_loudapprox = 2), t.interChRatio < 0 && (t.interChRatio = 0), t.useTemporal == null && (t.useTemporal = !0), _.slot_lag = _.frac_SpF = 0, t.VBR == X.vbr_off && (_.slot_lag = _.frac_SpF = (t.version + 1) * 72e3 * t.brate % t.out_samplerate | 0), H.iteration_init(t), I.psymodel_init(t), D(t.scale >= 0), 0;\n    };\n    function q(t, _) {\n      (t.in_buffer_0 == null || t.in_buffer_nsamples < _) && (t.in_buffer_0 = u0(_), t.in_buffer_1 = u0(_), t.in_buffer_nsamples = _);\n    }\n    this.lame_encode_flush = function(t, _, S0, E0) {\n      var V0 = t.internal_flags, H0 = Q([2, 1152]), y0 = 0, T0, F0, I0, b0, G0 = V0.mf_samples_to_encode - U.POSTDELAY, e1 = i0(t);\n      if (V0.mf_samples_to_encode < 1)\n        return 0;\n      for (T0 = 0, t.in_samplerate != t.out_samplerate && (G0 += 16 * t.out_samplerate / t.in_samplerate), I0 = t.framesize - G0 % t.framesize, I0 < 576 && (I0 += t.framesize), t.encoder_padding = I0, b0 = (G0 + I0) / t.framesize; b0 > 0 && y0 >= 0; ) {\n        var Y0 = e1 - V0.mf_size, v = t.frameNum;\n        Y0 *= t.in_samplerate, Y0 /= t.out_samplerate, Y0 > 1152 && (Y0 = 1152), Y0 < 1 && (Y0 = 1), F0 = E0 - T0, E0 == 0 && (F0 = 0), y0 = this.lame_encode_buffer(\n          t,\n          H0[0],\n          H0[1],\n          Y0,\n          _,\n          S0,\n          F0\n        ), S0 += y0, T0 += y0, b0 -= v != t.frameNum ? 1 : 0;\n      }\n      if (V0.mf_samples_to_encode = 0, y0 < 0 || (F0 = E0 - T0, E0 == 0 && (F0 = 0), M.flush_bitstream(t), y0 = M.copy_buffer(\n        V0,\n        _,\n        S0,\n        F0,\n        1\n      ), y0 < 0))\n        return y0;\n      if (S0 += y0, T0 += y0, F0 = E0 - T0, E0 == 0 && (F0 = 0), t.write_id3tag_automatic) {\n        if (b.id3tag_write_v1(t), y0 = M.copy_buffer(\n          V0,\n          _,\n          S0,\n          F0,\n          0\n        ), y0 < 0)\n          return y0;\n        T0 += y0;\n      }\n      return T0;\n    }, this.lame_encode_buffer = function(t, _, S0, E0, V0, H0, y0) {\n      var T0 = t.internal_flags, F0 = [null, null];\n      if (T0.Class_ID != N)\n        return -3;\n      if (E0 == 0)\n        return 0;\n      q(T0, E0), F0[0] = T0.in_buffer_0, F0[1] = T0.in_buffer_1;\n      for (var I0 = 0; I0 < E0; I0++)\n        F0[0][I0] = _[I0], T0.channels_in > 1 && (F0[1][I0] = S0[I0]);\n      return h0(\n        t,\n        F0[0],\n        F0[1],\n        E0,\n        V0,\n        H0,\n        y0\n      );\n    };\n    function i0(t) {\n      var _ = U.BLKSIZE + t.framesize - U.FFTOFFSET;\n      return _ = Math.max(_, 512 + t.framesize - 32), _;\n    }\n    function h0(t, _, S0, E0, V0, H0, y0) {\n      var T0 = t.internal_flags, F0 = 0, I0, b0, G0, e1, Y0, v = [null, null], h = [null, null];\n      if (T0.Class_ID != N)\n        return -3;\n      if (E0 == 0)\n        return 0;\n      if (Y0 = M.copy_buffer(T0, V0, H0, y0, 0), Y0 < 0)\n        return Y0;\n      if (H0 += Y0, F0 += Y0, h[0] = _, h[1] = S0, K.NEQ(t.scale, 0) && K.NEQ(t.scale, 1))\n        for (b0 = 0; b0 < E0; ++b0)\n          h[0][b0] *= t.scale, T0.channels_out == 2 && (h[1][b0] *= t.scale);\n      if (K.NEQ(t.scale_left, 0) && K.NEQ(t.scale_left, 1))\n        for (b0 = 0; b0 < E0; ++b0)\n          h[0][b0] *= t.scale_left;\n      if (K.NEQ(t.scale_right, 0) && K.NEQ(t.scale_right, 1))\n        for (b0 = 0; b0 < E0; ++b0)\n          h[1][b0] *= t.scale_right;\n      if (t.num_channels == 2 && T0.channels_out == 1)\n        for (b0 = 0; b0 < E0; ++b0)\n          h[0][b0] = 0.5 * (h[0][b0] + h[1][b0]), h[1][b0] = 0;\n      e1 = i0(t), v[0] = T0.mfbuf[0], v[1] = T0.mfbuf[1];\n      for (var x = 0; E0 > 0; ) {\n        var y = [null, null], k = 0, c = 0;\n        y[0] = h[0], y[1] = h[1];\n        var C = new M0();\n        if (f1(\n          t,\n          v,\n          y,\n          x,\n          E0,\n          C\n        ), k = C.n_in, c = C.n_out, T0.findReplayGain && !T0.decode_on_the_fly && l.AnalyzeSamples(\n          T0.rgdata,\n          v[0],\n          T0.mf_size,\n          v[1],\n          T0.mf_size,\n          c,\n          T0.channels_out\n        ) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n          return -6;\n        if (E0 -= k, x += k, T0.channels_out == 2, T0.mf_size += c, D(T0.mf_size <= A.MFSIZE), T0.mf_samples_to_encode < 1 && (T0.mf_samples_to_encode = U.ENCDELAY + U.POSTDELAY), T0.mf_samples_to_encode += c, T0.mf_size >= e1) {\n          var G = y0 - F0;\n          if (y0 == 0 && (G = 0), I0 = d0(\n            t,\n            v[0],\n            v[1],\n            V0,\n            H0,\n            G\n          ), I0 < 0)\n            return I0;\n          for (H0 += I0, F0 += I0, T0.mf_size -= t.framesize, T0.mf_samples_to_encode -= t.framesize, G0 = 0; G0 < T0.channels_out; G0++)\n            for (b0 = 0; b0 < T0.mf_size; b0++)\n              v[G0][b0] = v[G0][b0 + t.framesize];\n        }\n      }\n      return F0;\n    }\n    function d0(t, _, S0, E0, V0, H0) {\n      var y0 = u.enc.lame_encode_mp3_frame(\n        t,\n        _,\n        S0,\n        E0,\n        V0,\n        H0\n      );\n      return t.frameNum++, y0;\n    }\n    function M0() {\n      this.n_in = 0, this.n_out = 0;\n    }\n    function R0() {\n      this.num_used = 0;\n    }\n    function A0(t, _) {\n      return _ != 0 ? A0(_, t % _) : t;\n    }\n    function w0(t, _, S0) {\n      var E0 = Math.PI * _;\n      t /= S0, t < 0 && (t = 0), t > 1 && (t = 1);\n      var V0 = t - 0.5, H0 = 0.42 - 0.5 * Math.cos(2 * t * Math.PI) + 0.08 * Math.cos(4 * t * Math.PI);\n      return Math.abs(V0) < 1e-9 ? E0 / Math.PI : H0 * Math.sin(S0 * E0 * V0) / (Math.PI * S0 * V0);\n    }\n    function $0(t, _, S0, E0, V0, H0, y0, T0, F0) {\n      var I0 = t.internal_flags, b0, G0 = 0, e1, Y0 = t.out_samplerate / A0(t.out_samplerate, t.in_samplerate);\n      Y0 > A.BPC && (Y0 = A.BPC);\n      var v = Math.abs(I0.resample_ratio - Math.floor(0.5 + I0.resample_ratio)) < 1e-4 ? 1 : 0, h = 1 / I0.resample_ratio;\n      h > 1 && (h = 1);\n      var x = 31;\n      x % 2 == 0 && --x, x += v;\n      var y = x + 1;\n      if (I0.fill_buffer_resample_init == 0) {\n        for (I0.inbuf_old[0] = u0(y), I0.inbuf_old[1] = u0(y), b0 = 0; b0 <= 2 * Y0; ++b0)\n          I0.blackfilt[b0] = u0(y);\n        for (I0.itime[0] = 0, I0.itime[1] = 0, G0 = 0; G0 <= 2 * Y0; G0++) {\n          var k = 0, c = (G0 - Y0) / (2 * Y0);\n          for (b0 = 0; b0 <= x; b0++)\n            k += I0.blackfilt[G0][b0] = w0(\n              b0 - c,\n              h,\n              x\n            );\n          for (b0 = 0; b0 <= x; b0++)\n            I0.blackfilt[G0][b0] /= k;\n        }\n        I0.fill_buffer_resample_init = 1;\n      }\n      var C = I0.inbuf_old[F0];\n      for (e1 = 0; e1 < E0; e1++) {\n        var G, F;\n        if (G = e1 * I0.resample_ratio, G0 = 0 | Math.floor(G - I0.itime[F0]), x + G0 - x / 2 >= y0)\n          break;\n        var c = G - I0.itime[F0] - (G0 + 0.5 * (x % 2));\n        F = 0 | Math.floor(c * 2 * Y0 + Y0 + 0.5);\n        var e0 = 0;\n        for (b0 = 0; b0 <= x; ++b0) {\n          var $ = 0 | b0 + G0 - x / 2, a0;\n          a0 = $ < 0 ? C[y + $] : V0[H0 + $], e0 += a0 * I0.blackfilt[F][b0];\n        }\n        _[S0 + e1] = e0;\n      }\n      if (T0.num_used = Math.min(y0, x + G0 - x / 2), I0.itime[F0] += T0.num_used - e1 * I0.resample_ratio, T0.num_used >= y)\n        for (b0 = 0; b0 < y; b0++)\n          C[b0] = V0[H0 + T0.num_used + b0 - y];\n      else {\n        var m0 = y - T0.num_used;\n        for (b0 = 0; b0 < m0; ++b0)\n          C[b0] = C[b0 + T0.num_used];\n        for (G0 = 0; b0 < y; ++b0, ++G0)\n          C[b0] = V0[H0 + G0];\n        D(G0 == T0.num_used);\n      }\n      return e1;\n    }\n    function f1(t, _, S0, E0, V0, H0) {\n      var y0 = t.internal_flags;\n      if (y0.resample_ratio < 0.9999 || y0.resample_ratio > 1.0001)\n        for (var T0 = 0; T0 < y0.channels_out; T0++) {\n          var F0 = new R0();\n          H0.n_out = $0(\n            t,\n            _[T0],\n            y0.mf_size,\n            t.framesize,\n            S0[T0],\n            E0,\n            V0,\n            F0,\n            T0\n          ), H0.n_in = F0.num_used;\n        }\n      else {\n        H0.n_out = Math.min(t.framesize, V0), H0.n_in = H0.n_out;\n        for (var I0 = 0; I0 < H0.n_out; ++I0)\n          _[0][y0.mf_size + I0] = S0[0][E0 + I0], y0.channels_out == 2 && (_[1][y0.mf_size + I0] = S0[1][E0 + I0]);\n      }\n    }\n  }\n  return Te = R, Te;\n}\nvar p2 = Q0, M1 = p2.VbrMode;\nfunction H2() {\n  var w = Oe();\n  function Z(A, m, O, s0, K, t0, U, R, o, u, d, e, l, M, p) {\n    this.vbr_q = A, this.quant_comp = m, this.quant_comp_s = O, this.expY = s0, this.st_lrm = K, this.st_s = t0, this.masking_adj = U, this.masking_adj_short = R, this.ath_lower = o, this.ath_curve = u, this.ath_sensitivity = d, this.interch = e, this.safejoint = l, this.sfb21mod = M, this.msfix = p;\n  }\n  function X(A, m, O, s0, K, t0, U, R, o, u, d, e, l, M) {\n    this.quant_comp = m, this.quant_comp_s = O, this.safejoint = s0, this.nsmsfix = K, this.st_lrm = t0, this.st_s = U, this.nsbass = R, this.scale = o, this.masking_adj = u, this.ath_lower = d, this.ath_curve = e, this.interch = l, this.sfscale = M;\n  }\n  var z;\n  this.setModules = function(A) {\n    z = A;\n  };\n  var u0 = [\n    new Z(0, 9, 9, 0, 5.2, 125, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n    new Z(1, 9, 9, 0, 5.3, 125, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n    new Z(2, 9, 9, 0, 5.6, 125, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n    new Z(3, 9, 9, 1, 5.8, 130, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n    new Z(4, 9, 9, 1, 6, 135, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n    new Z(5, 9, 9, 1, 6.4, 140, 0.5, 0.4, -7.5, 4, -12, 2e-4, 0, 0, 1.95),\n    new Z(6, 9, 9, 1, 6.6, 145, 0.67, 0.65, -14.7, 6.5, -19, 4e-4, 0, 0, 2.3),\n    new Z(7, 9, 9, 1, 6.6, 145, 0.8, 0.75, -19.7, 8, -22, 6e-4, 0, 0, 2.7),\n    new Z(8, 9, 9, 1, 6.6, 145, 1.2, 1.15, -27.5, 10, -23, 7e-4, 0, 0, 0),\n    new Z(9, 9, 9, 1, 6.6, 145, 1.6, 1.6, -36, 11, -25, 8e-4, 0, 0, 0),\n    new Z(10, 9, 9, 1, 6.6, 145, 2, 2, -36, 12, -25, 8e-4, 0, 0, 0)\n  ], W = [\n    new Z(0, 9, 9, 0, 4.2, 25, -7, -4, 7.5, 1, 0, 0, 2, 26, 0.97),\n    new Z(1, 9, 9, 0, 4.2, 25, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n    new Z(2, 9, 9, 0, 4.2, 25, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n    new Z(3, 9, 9, 1, 4.2, 25, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n    new Z(4, 9, 9, 1, 4.2, 25, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n    new Z(5, 9, 9, 1, 4.2, 25, -1, 1.65, -7.7, 4, -12, 2e-4, 0, 0, 1.95),\n    new Z(6, 9, 9, 1, 4.2, 25, -0, 2.47, -7.7, 6.5, -19, 4e-4, 0, 0, 2),\n    new Z(7, 9, 9, 1, 4.2, 25, 0.5, 2, -14.5, 8, -22, 6e-4, 0, 0, 2),\n    new Z(8, 9, 9, 1, 4.2, 25, 1, 2.4, -22, 10, -23, 7e-4, 0, 0, 2),\n    new Z(9, 9, 9, 1, 4.2, 25, 1.5, 2.95, -30, 11, -25, 8e-4, 0, 0, 2),\n    new Z(10, 9, 9, 1, 4.2, 25, 2, 2.95, -36, 12, -30, 8e-4, 0, 0, 2)\n  ];\n  function Q(A, m, O) {\n    var s0 = A.VBR == M1.vbr_rh ? u0 : W, K = A.VBR_q_frac, t0 = s0[m], U = s0[m + 1], R = t0;\n    t0.st_lrm = t0.st_lrm + K * (U.st_lrm - t0.st_lrm), t0.st_s = t0.st_s + K * (U.st_s - t0.st_s), t0.masking_adj = t0.masking_adj + K * (U.masking_adj - t0.masking_adj), t0.masking_adj_short = t0.masking_adj_short + K * (U.masking_adj_short - t0.masking_adj_short), t0.ath_lower = t0.ath_lower + K * (U.ath_lower - t0.ath_lower), t0.ath_curve = t0.ath_curve + K * (U.ath_curve - t0.ath_curve), t0.ath_sensitivity = t0.ath_sensitivity + K * (U.ath_sensitivity - t0.ath_sensitivity), t0.interch = t0.interch + K * (U.interch - t0.interch), t0.msfix = t0.msfix + K * (U.msfix - t0.msfix), f0(A, R.vbr_q), O != 0 ? A.quant_comp = R.quant_comp : Math.abs(A.quant_comp - -1) > 0 || (A.quant_comp = R.quant_comp), O != 0 ? A.quant_comp_short = R.quant_comp_s : Math.abs(A.quant_comp_short - -1) > 0 || (A.quant_comp_short = R.quant_comp_s), R.expY != 0 && (A.experimentalY = R.expY != 0), O != 0 ? A.internal_flags.nsPsy.attackthre = R.st_lrm : Math.abs(A.internal_flags.nsPsy.attackthre - -1) > 0 || (A.internal_flags.nsPsy.attackthre = R.st_lrm), O != 0 ? A.internal_flags.nsPsy.attackthre_s = R.st_s : Math.abs(A.internal_flags.nsPsy.attackthre_s - -1) > 0 || (A.internal_flags.nsPsy.attackthre_s = R.st_s), O != 0 ? A.maskingadjust = R.masking_adj : Math.abs(A.maskingadjust - 0) > 0 || (A.maskingadjust = R.masking_adj), O != 0 ? A.maskingadjust_short = R.masking_adj_short : Math.abs(A.maskingadjust_short - 0) > 0 || (A.maskingadjust_short = R.masking_adj_short), O != 0 ? A.ATHlower = -R.ath_lower / 10 : Math.abs(-A.ATHlower * 10 - 0) > 0 || (A.ATHlower = -R.ath_lower / 10), O != 0 ? A.ATHcurve = R.ath_curve : Math.abs(A.ATHcurve - -1) > 0 || (A.ATHcurve = R.ath_curve), O != 0 ? A.athaa_sensitivity = R.ath_sensitivity : Math.abs(A.athaa_sensitivity - -1) > 0 || (A.athaa_sensitivity = R.ath_sensitivity), R.interch > 0 && (O != 0 ? A.interChRatio = R.interch : Math.abs(A.interChRatio - -1) > 0 || (A.interChRatio = R.interch)), R.safejoint > 0 && (A.exp_nspsytune = A.exp_nspsytune | R.safejoint), R.sfb21mod > 0 && (A.exp_nspsytune = A.exp_nspsytune | R.sfb21mod << 20), O != 0 ? A.msfix = R.msfix : Math.abs(A.msfix - -1) > 0 || (A.msfix = R.msfix), O == 0 && (A.VBR_q = m, A.VBR_q_frac = K);\n  }\n  var D = [\n    new X(8, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -30, 11, 12e-4, 1),\n    /*   8, impossible to use in stereo */\n    new X(16, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -25, 11, 1e-3, 1),\n    /*  16 */\n    new X(24, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -20, 11, 1e-3, 1),\n    /*  24 */\n    new X(32, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -15, 11, 1e-3, 1),\n    /*  32 */\n    new X(40, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -10, 11, 9e-4, 1),\n    /*  40 */\n    new X(48, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -10, 11, 9e-4, 1),\n    /*  48 */\n    new X(56, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -6, 11, 8e-4, 1),\n    /*  56 */\n    new X(64, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -2, 11, 8e-4, 1),\n    /*  64 */\n    new X(80, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, 0, 8, 7e-4, 1),\n    /*  80 */\n    new X(96, 9, 9, 0, 2.5, 6.6, 145, 0, 0.95, 0, 1, 5.5, 6e-4, 1),\n    /*  96 */\n    new X(112, 9, 9, 0, 2.25, 6.6, 145, 0, 0.95, 0, 2, 4.5, 5e-4, 1),\n    /* 112 */\n    new X(128, 9, 9, 0, 1.95, 6.4, 140, 0, 0.95, 0, 3, 4, 2e-4, 1),\n    /* 128 */\n    new X(160, 9, 9, 1, 1.79, 6, 135, 0, 0.95, -2, 5, 3.5, 0, 1),\n    /* 160 */\n    new X(192, 9, 9, 1, 1.49, 5.6, 125, 0, 0.97, -4, 7, 3, 0, 0),\n    /* 192 */\n    new X(224, 9, 9, 1, 1.25, 5.2, 125, 0, 0.98, -6, 9, 2, 0, 0),\n    /* 224 */\n    new X(256, 9, 9, 1, 0.97, 5.2, 125, 0, 1, -8, 10, 1, 0, 0),\n    /* 256 */\n    new X(320, 9, 9, 1, 0.9, 5.2, 125, 0, 1, -10, 12, 0, 0, 0)\n    /* 320 */\n  ];\n  function g(A, m, O) {\n    var s0 = m, K = z.nearestBitrateFullIndex(m);\n    if (A.VBR = M1.vbr_abr, A.VBR_mean_bitrate_kbps = s0, A.VBR_mean_bitrate_kbps = Math.min(A.VBR_mean_bitrate_kbps, 320), A.VBR_mean_bitrate_kbps = Math.max(A.VBR_mean_bitrate_kbps, 8), A.brate = A.VBR_mean_bitrate_kbps, A.VBR_mean_bitrate_kbps > 320 && (A.disable_reservoir = !0), D[K].safejoint > 0 && (A.exp_nspsytune = A.exp_nspsytune | 2), D[K].sfscale > 0 && (A.internal_flags.noise_shaping = 2), Math.abs(D[K].nsbass) > 0) {\n      var t0 = int(D[K].nsbass * 4);\n      t0 < 0 && (t0 += 64), A.exp_nspsytune = A.exp_nspsytune | t0 << 2;\n    }\n    return O != 0 ? A.quant_comp = D[K].quant_comp : Math.abs(A.quant_comp - -1) > 0 || (A.quant_comp = D[K].quant_comp), O != 0 ? A.quant_comp_short = D[K].quant_comp_s : Math.abs(A.quant_comp_short - -1) > 0 || (A.quant_comp_short = D[K].quant_comp_s), O != 0 ? A.msfix = D[K].nsmsfix : Math.abs(A.msfix - -1) > 0 || (A.msfix = D[K].nsmsfix), O != 0 ? A.internal_flags.nsPsy.attackthre = D[K].st_lrm : Math.abs(A.internal_flags.nsPsy.attackthre - -1) > 0 || (A.internal_flags.nsPsy.attackthre = D[K].st_lrm), O != 0 ? A.internal_flags.nsPsy.attackthre_s = D[K].st_s : Math.abs(A.internal_flags.nsPsy.attackthre_s - -1) > 0 || (A.internal_flags.nsPsy.attackthre_s = D[K].st_s), O != 0 ? A.scale = D[K].scale : Math.abs(A.scale - -1) > 0 || (A.scale = D[K].scale), O != 0 ? A.maskingadjust = D[K].masking_adj : Math.abs(A.maskingadjust - 0) > 0 || (A.maskingadjust = D[K].masking_adj), D[K].masking_adj > 0 ? O != 0 ? A.maskingadjust_short = D[K].masking_adj * 0.9 : Math.abs(A.maskingadjust_short - 0) > 0 || (A.maskingadjust_short = D[K].masking_adj * 0.9) : O != 0 ? A.maskingadjust_short = D[K].masking_adj * 1.1 : Math.abs(A.maskingadjust_short - 0) > 0 || (A.maskingadjust_short = D[K].masking_adj * 1.1), O != 0 ? A.ATHlower = -D[K].ath_lower / 10 : Math.abs(-A.ATHlower * 10 - 0) > 0 || (A.ATHlower = -D[K].ath_lower / 10), O != 0 ? A.ATHcurve = D[K].ath_curve : Math.abs(A.ATHcurve - -1) > 0 || (A.ATHcurve = D[K].ath_curve), O != 0 ? A.interChRatio = D[K].interch : Math.abs(A.interChRatio - -1) > 0 || (A.interChRatio = D[K].interch), m;\n  }\n  this.apply_preset = function(A, m, O) {\n    switch (m) {\n      case w.R3MIX: {\n        m = w.V3, A.VBR = M1.vbr_mtrh;\n        break;\n      }\n      case w.MEDIUM: {\n        m = w.V4, A.VBR = M1.vbr_rh;\n        break;\n      }\n      case w.MEDIUM_FAST: {\n        m = w.V4, A.VBR = M1.vbr_mtrh;\n        break;\n      }\n      case w.STANDARD: {\n        m = w.V2, A.VBR = M1.vbr_rh;\n        break;\n      }\n      case w.STANDARD_FAST: {\n        m = w.V2, A.VBR = M1.vbr_mtrh;\n        break;\n      }\n      case w.EXTREME: {\n        m = w.V0, A.VBR = M1.vbr_rh;\n        break;\n      }\n      case w.EXTREME_FAST: {\n        m = w.V0, A.VBR = M1.vbr_mtrh;\n        break;\n      }\n      case w.INSANE:\n        return m = 320, A.preset = m, g(A, m, O), A.VBR = M1.vbr_off, m;\n    }\n    switch (A.preset = m, m) {\n      case w.V9:\n        return Q(A, 9, O), m;\n      case w.V8:\n        return Q(A, 8, O), m;\n      case w.V7:\n        return Q(A, 7, O), m;\n      case w.V6:\n        return Q(A, 6, O), m;\n      case w.V5:\n        return Q(A, 5, O), m;\n      case w.V4:\n        return Q(A, 4, O), m;\n      case w.V3:\n        return Q(A, 3, O), m;\n      case w.V2:\n        return Q(A, 2, O), m;\n      case w.V1:\n        return Q(A, 1, O), m;\n      case w.V0:\n        return Q(A, 0, O), m;\n    }\n    return 8 <= m && m <= 320 ? g(A, m, O) : (A.preset = 0, m);\n  };\n  function f0(A, m) {\n    var O = 0;\n    return 0 > m && (O = -1, m = 0), 9 < m && (O = -1, m = 9), A.VBR_q = m, A.VBR_q_frac = 0, O;\n  }\n}\nvar V2 = H2;\nfunction O2() {\n  this.setModules = function(w, Z) {\n  };\n}\nvar C2 = O2;\nfunction F2() {\n  this.over_noise = 0, this.tot_noise = 0, this.max_noise = 0, this.over_count = 0, this.over_SSD = 0, this.bits = 0;\n}\nvar k2 = F2, Ca = Q0, na = Ca.new_float, X2 = Ca.new_int;\nfunction Y2() {\n  this.global_gain = 0, this.sfb_count1 = 0, this.step = X2(39), this.noise = na(39), this.noise_log = na(39);\n}\nvar q2 = Y2, q1 = Q0, y1 = q1.System, _a = q1.VbrMode, ye = q1.Util, X1 = q1.Arrays, K1 = q1.new_float, U1 = q1.assert, D2 = C2, we = k2, G2 = q2, D0 = t1(), la = Le, va = ie;\nfunction $2() {\n  var w;\n  this.rv = null;\n  var Z;\n  this.qupvt = null;\n  var X, z = new D2(), u0;\n  this.setModules = function(R, o, u, d) {\n    w = R, Z = o, this.rv = o, X = u, this.qupvt = u, u0 = d, z.setModules(X, u0);\n  }, this.ms_convert = function(R, o) {\n    for (var u = 0; u < 576; ++u) {\n      var d = R.tt[o][0].xr[u], e = R.tt[o][1].xr[u];\n      R.tt[o][0].xr[u] = (d + e) * (ye.SQRT2 * 0.5), R.tt[o][1].xr[u] = (d - e) * (ye.SQRT2 * 0.5);\n    }\n  };\n  function W(R, o, u, d) {\n    d = 0;\n    for (var e = 0; e <= u; ++e) {\n      var l = Math.abs(R.xr[e]);\n      d += l, o[e] = Math.sqrt(l * Math.sqrt(l)), o[e] > R.xrpow_max && (R.xrpow_max = o[e]);\n    }\n    return d;\n  }\n  this.init_xrpow = function(R, o, u) {\n    var d = 0, e = 0 | o.max_nonzero_coeff;\n    if (o.xrpow_max = 0, X1.fill(u, e, 576, 0), d = W(o, u, e, d), d > 1e-20) {\n      var l = 0;\n      R.substep_shaping & 2 && (l = 1);\n      for (var M = 0; M < o.psymax; M++)\n        R.pseudohalf[M] = l;\n      return !0;\n    }\n    return X1.fill(o.l3_enc, 0, 576, 0), !1;\n  };\n  function Q(R, o) {\n    var u = R.ATH, d = o.xr;\n    if (o.block_type != D0.SHORT_TYPE)\n      for (var e = !1, l = D0.PSFB21 - 1; l >= 0 && !e; l--) {\n        var M = R.scalefac_band.psfb21[l], p = R.scalefac_band.psfb21[l + 1], H = X.athAdjust(\n          u.adjust,\n          u.psfb21[l],\n          u.floor\n        );\n        R.nsPsy.longfact[21] > 1e-12 && (H *= R.nsPsy.longfact[21]);\n        for (var B = p - 1; B >= M; B--)\n          if (Math.abs(d[B]) < H)\n            d[B] = 0;\n          else {\n            e = !0;\n            break;\n          }\n      }\n    else\n      for (var I = 0; I < 3; I++)\n        for (var e = !1, l = D0.PSFB12 - 1; l >= 0 && !e; l--) {\n          var M = R.scalefac_band.s[12] * 3 + (R.scalefac_band.s[13] - R.scalefac_band.s[12]) * I + (R.scalefac_band.psfb12[l] - R.scalefac_band.psfb12[0]), p = M + (R.scalefac_band.psfb12[l + 1] - R.scalefac_band.psfb12[l]), v0 = X.athAdjust(\n            u.adjust,\n            u.psfb12[l],\n            u.floor\n          );\n          R.nsPsy.shortfact[12] > 1e-12 && (v0 *= R.nsPsy.shortfact[12]);\n          for (var B = p - 1; B >= M; B--)\n            if (Math.abs(d[B]) < v0)\n              d[B] = 0;\n            else {\n              e = !0;\n              break;\n            }\n        }\n  }\n  this.init_outer_loop = function(R, o) {\n    o.part2_3_length = 0, o.big_values = 0, o.count1 = 0, o.global_gain = 210, o.scalefac_compress = 0, o.table_select[0] = 0, o.table_select[1] = 0, o.table_select[2] = 0, o.subblock_gain[0] = 0, o.subblock_gain[1] = 0, o.subblock_gain[2] = 0, o.subblock_gain[3] = 0, o.region0_count = 0, o.region1_count = 0, o.preflag = 0, o.scalefac_scale = 0, o.count1table_select = 0, o.part2_length = 0, o.sfb_lmax = D0.SBPSY_l, o.sfb_smin = D0.SBPSY_s, o.psy_lmax = R.sfb21_extra ? D0.SBMAX_l : D0.SBPSY_l, o.psymax = o.psy_lmax, o.sfbmax = o.sfb_lmax, o.sfbdivide = 11;\n    for (var u = 0; u < D0.SBMAX_l; u++)\n      o.width[u] = R.scalefac_band.l[u + 1] - R.scalefac_band.l[u], o.window[u] = 3;\n    if (o.block_type == D0.SHORT_TYPE) {\n      var d = K1(576);\n      o.sfb_smin = 0, o.sfb_lmax = 0, o.mixed_block_flag != 0 && (o.sfb_smin = 3, o.sfb_lmax = R.mode_gr * 2 + 4), o.psymax = o.sfb_lmax + 3 * ((R.sfb21_extra ? D0.SBMAX_s : D0.SBPSY_s) - o.sfb_smin), o.sfbmax = o.sfb_lmax + 3 * (D0.SBPSY_s - o.sfb_smin), o.sfbdivide = o.sfbmax - 18, o.psy_lmax = o.sfb_lmax;\n      var e = R.scalefac_band.l[o.sfb_lmax];\n      y1.arraycopy(o.xr, 0, d, 0, 576);\n      for (var u = o.sfb_smin; u < D0.SBMAX_s; u++)\n        for (var l = R.scalefac_band.s[u], M = R.scalefac_band.s[u + 1], p = 0; p < 3; p++)\n          for (var H = l; H < M; H++)\n            o.xr[e++] = d[3 * H + p];\n      for (var B = o.sfb_lmax, u = o.sfb_smin; u < D0.SBMAX_s; u++)\n        o.width[B] = o.width[B + 1] = o.width[B + 2] = R.scalefac_band.s[u + 1] - R.scalefac_band.s[u], o.window[B] = 0, o.window[B + 1] = 1, o.window[B + 2] = 2, B += 3;\n    }\n    o.count1bits = 0, o.sfb_partition_table = X.nr_of_sfb_block[0][0], o.slen[0] = 0, o.slen[1] = 0, o.slen[2] = 0, o.slen[3] = 0, o.max_nonzero_coeff = 575, X1.fill(o.scalefac, 0), Q(R, o);\n  };\n  function D(R) {\n    this.ordinal = R;\n  }\n  D.BINSEARCH_NONE = new D(0), D.BINSEARCH_UP = new D(1), D.BINSEARCH_DOWN = new D(2);\n  function g(R, o, u, d, e) {\n    var l, M = R.CurrentStep[d], p = !1, H = R.OldValue[d], B = D.BINSEARCH_NONE;\n    for (o.global_gain = H, u -= o.part2_length; ; ) {\n      var I;\n      if (l = u0.count_bits(R, e, o, null), M == 1 || l == u)\n        break;\n      l > u ? (B == D.BINSEARCH_DOWN && (p = !0), p && (M /= 2), B = D.BINSEARCH_UP, I = M) : (B == D.BINSEARCH_UP && (p = !0), p && (M /= 2), B = D.BINSEARCH_DOWN, I = -M), o.global_gain += I, o.global_gain < 0 && (o.global_gain = 0, p = !0), o.global_gain > 255 && (o.global_gain = 255, p = !0);\n    }\n    for (U1(o.global_gain >= 0), U1(o.global_gain < 256); l > u && o.global_gain < 255; )\n      o.global_gain++, l = u0.count_bits(R, e, o, null);\n    return R.CurrentStep[d] = H - o.global_gain >= 4 ? 4 : 2, R.OldValue[d] = o.global_gain, o.part2_3_length = l, l;\n  }\n  this.trancate_smallspectrums = function(R, o, u, d) {\n    var e = K1(va.SFBMAX);\n    if (!(!(R.substep_shaping & 4) && o.block_type == D0.SHORT_TYPE || R.substep_shaping & 128)) {\n      X.calc_noise(o, u, e, new we(), null);\n      for (var M = 0; M < 576; M++) {\n        var l = 0;\n        o.l3_enc[M] != 0 && (l = Math.abs(o.xr[M])), d[M] = l;\n      }\n      var M = 0, p = 8;\n      o.block_type == D0.SHORT_TYPE && (p = 6);\n      do {\n        var H, B, I, v0, b = o.width[p];\n        if (M += b, !(e[p] >= 1) && (X1.sort(d, M - b, b), !BitStream.EQ(d[M - 1], 0))) {\n          H = (1 - e[p]) * u[p], B = 0, v0 = 0;\n          do {\n            var a;\n            for (I = 1; v0 + I < b && !BitStream.NEQ(d[v0 + M - b], d[v0 + M + I - b]); I++)\n              ;\n            if (a = d[v0 + M - b] * d[v0 + M - b] * I, H < a) {\n              v0 != 0 && (B = d[v0 + M - b - 1]);\n              break;\n            }\n            H -= a, v0 += I;\n          } while (v0 < b);\n          if (!BitStream.EQ(B, 0))\n            do\n              Math.abs(o.xr[M - b]) <= B && (o.l3_enc[M - b] = 0);\n            while (--b > 0);\n        }\n      } while (++p < o.psymax);\n      o.part2_3_length = u0.noquant_count_bits(R, o, null);\n    }\n  };\n  function f0(R) {\n    for (var o = 0; o < R.sfbmax; o++)\n      if (R.scalefac[o] + R.subblock_gain[R.window[o]] == 0)\n        return !1;\n    return !0;\n  }\n  function A(R) {\n    return ye.FAST_LOG10(0.368 + 0.632 * R * R * R);\n  }\n  function m(R, o) {\n    for (var u = 1e-37, d = 0; d < o.psymax; d++)\n      u += A(R[d]);\n    return Math.max(1e-20, u);\n  }\n  function O(R, o, u, d, e) {\n    var l;\n    switch (R) {\n      default:\n      case 9: {\n        o.over_count > 0 ? (l = u.over_SSD <= o.over_SSD, u.over_SSD == o.over_SSD && (l = u.bits < o.bits)) : l = u.max_noise < 0 && u.max_noise * 10 + u.bits <= o.max_noise * 10 + o.bits;\n        break;\n      }\n      case 0:\n        l = u.over_count < o.over_count || u.over_count == o.over_count && u.over_noise < o.over_noise || u.over_count == o.over_count && BitStream.EQ(u.over_noise, o.over_noise) && u.tot_noise < o.tot_noise;\n        break;\n      case 8:\n        u.max_noise = m(e, d);\n      case 1:\n        l = u.max_noise < o.max_noise;\n        break;\n      case 2:\n        l = u.tot_noise < o.tot_noise;\n        break;\n      case 3:\n        l = u.tot_noise < o.tot_noise && u.max_noise < o.max_noise;\n        break;\n      case 4:\n        l = u.max_noise <= 0 && o.max_noise > 0.2 || u.max_noise <= 0 && o.max_noise < 0 && o.max_noise > u.max_noise - 0.2 && u.tot_noise < o.tot_noise || u.max_noise <= 0 && o.max_noise > 0 && o.max_noise > u.max_noise - 0.2 && u.tot_noise < o.tot_noise + o.over_noise || u.max_noise > 0 && o.max_noise > -0.05 && o.max_noise > u.max_noise - 0.1 && u.tot_noise + u.over_noise < o.tot_noise + o.over_noise || u.max_noise > 0 && o.max_noise > -0.1 && o.max_noise > u.max_noise - 0.15 && u.tot_noise + u.over_noise + u.over_noise < o.tot_noise + o.over_noise + o.over_noise;\n        break;\n      case 5:\n        l = u.over_noise < o.over_noise || BitStream.EQ(u.over_noise, o.over_noise) && u.tot_noise < o.tot_noise;\n        break;\n      case 6:\n        l = u.over_noise < o.over_noise || BitStream.EQ(u.over_noise, o.over_noise) && (u.max_noise < o.max_noise || BitStream.EQ(u.max_noise, o.max_noise) && u.tot_noise <= o.tot_noise);\n        break;\n      case 7:\n        l = u.over_count < o.over_count || u.over_noise < o.over_noise;\n        break;\n    }\n    return o.over_count == 0 && (l = l && u.bits < o.bits), l;\n  }\n  function s0(R, o, u, d, e) {\n    var l = R.internal_flags, M;\n    o.scalefac_scale == 0 ? M = 1.2968395546510096 : M = 1.6817928305074292;\n    for (var p = 0, H = 0; H < o.sfbmax; H++)\n      p < u[H] && (p = u[H]);\n    var B = l.noise_shaping_amp;\n    switch (B == 3 && (e ? B = 2 : B = 1), B) {\n      case 2:\n        break;\n      case 1:\n        p > 1 ? p = Math.pow(p, 0.5) : p *= 0.95;\n        break;\n      case 0:\n      default:\n        p > 1 ? p = 1 : p *= 0.95;\n        break;\n    }\n    for (var I = 0, H = 0; H < o.sfbmax; H++) {\n      var v0 = o.width[H], b;\n      if (I += v0, !(u[H] < p)) {\n        if (l.substep_shaping & 2 && (l.pseudohalf[H] = l.pseudohalf[H] == 0 ? 1 : 0, l.pseudohalf[H] == 0 && l.noise_shaping_amp == 2))\n          return;\n        for (o.scalefac[H]++, b = -v0; b < 0; b++)\n          d[I + b] *= M, d[I + b] > o.xrpow_max && (o.xrpow_max = d[I + b]);\n        if (l.noise_shaping_amp == 2)\n          return;\n      }\n    }\n  }\n  function K(R, o) {\n    for (var u = 1.2968395546510096, d = 0, e = 0; e < R.sfbmax; e++) {\n      var l = R.width[e], M = R.scalefac[e];\n      if (R.preflag != 0 && (M += X.pretab[e]), d += l, M & 1) {\n        M++;\n        for (var p = -l; p < 0; p++)\n          o[d + p] *= u, o[d + p] > R.xrpow_max && (R.xrpow_max = o[d + p]);\n      }\n      R.scalefac[e] = M >> 1;\n    }\n    R.preflag = 0, R.scalefac_scale = 1;\n  }\n  function t0(R, o, u) {\n    var d, e = o.scalefac;\n    for (d = 0; d < o.sfb_lmax; d++)\n      if (e[d] >= 16)\n        return !0;\n    for (var l = 0; l < 3; l++) {\n      var M = 0, p = 0;\n      for (d = o.sfb_lmax + l; d < o.sfbdivide; d += 3)\n        M < e[d] && (M = e[d]);\n      for (; d < o.sfbmax; d += 3)\n        p < e[d] && (p = e[d]);\n      if (!(M < 16 && p < 8)) {\n        if (o.subblock_gain[l] >= 7)\n          return !0;\n        o.subblock_gain[l]++;\n        var H = R.scalefac_band.l[o.sfb_lmax];\n        for (d = o.sfb_lmax + l; d < o.sfbmax; d += 3) {\n          var B, I = o.width[d], v0 = e[d];\n          if (v0 = v0 - (4 >> o.scalefac_scale), v0 >= 0) {\n            e[d] = v0, H += I * 3;\n            continue;\n          }\n          e[d] = 0;\n          {\n            var b = 210 + (v0 << o.scalefac_scale + 1);\n            B = X.IPOW20(b);\n          }\n          H += I * (l + 1);\n          for (var a = -I; a < 0; a++)\n            u[H + a] *= B, u[H + a] > o.xrpow_max && (o.xrpow_max = u[H + a]);\n          H += I * (3 - l - 1);\n        }\n        {\n          var B = X.IPOW20(202);\n          H += o.width[d] * (l + 1);\n          for (var a = -o.width[d]; a < 0; a++)\n            u[H + a] *= B, u[H + a] > o.xrpow_max && (o.xrpow_max = u[H + a]);\n        }\n      }\n    }\n    return !1;\n  }\n  function U(R, o, u, d, e) {\n    var l = R.internal_flags;\n    s0(R, o, u, d, e);\n    var M = f0(o);\n    return M ? !1 : (l.mode_gr == 2 ? M = u0.scale_bitcount(o) : M = u0.scale_bitcount_lsf(l, o), M ? (l.noise_shaping > 1 && (X1.fill(l.pseudohalf, 0), o.scalefac_scale == 0 ? (K(o, d), M = !1) : o.block_type == D0.SHORT_TYPE && l.subblock_gain > 0 && (M = t0(l, o, d) || f0(o))), M || (l.mode_gr == 2 ? M = u0.scale_bitcount(o) : M = u0.scale_bitcount_lsf(l, o)), !M) : !0);\n  }\n  this.outer_loop = function(R, o, u, d, e, l) {\n    var M = R.internal_flags, p = new la(), H = K1(576), B = K1(va.SFBMAX), I = new we(), v0, b = new G2(), a = 9999999, S = !1, L = !1, V = 0;\n    if (g(M, o, l, e, d), M.noise_shaping == 0)\n      return 100;\n    X.calc_noise(\n      o,\n      u,\n      B,\n      I,\n      b\n    ), I.bits = o.part2_3_length, p.assign(o);\n    var N = 0;\n    for (y1.arraycopy(d, 0, H, 0, 576); !S; ) {\n      do {\n        var P = new we(), E, i = 255;\n        if (M.substep_shaping & 2 ? E = 20 : E = 3, M.sfb21_extra && (B[p.sfbmax] > 1 || p.block_type == D0.SHORT_TYPE && (B[p.sfbmax + 1] > 1 || B[p.sfbmax + 2] > 1)) || !U(R, p, B, d, L))\n          break;\n        p.scalefac_scale != 0 && (i = 254);\n        var s = l - p.part2_length;\n        if (s <= 0)\n          break;\n        for (; (p.part2_3_length = u0.count_bits(\n          M,\n          d,\n          p,\n          b\n        )) > s && p.global_gain <= i; )\n          p.global_gain++;\n        if (p.global_gain > i)\n          break;\n        if (I.over_count == 0) {\n          for (; (p.part2_3_length = u0.count_bits(\n            M,\n            d,\n            p,\n            b\n          )) > a && p.global_gain <= i; )\n            p.global_gain++;\n          if (p.global_gain > i)\n            break;\n        }\n        if (X.calc_noise(\n          p,\n          u,\n          B,\n          P,\n          b\n        ), P.bits = p.part2_3_length, o.block_type != D0.SHORT_TYPE ? v0 = R.quant_comp : v0 = R.quant_comp_short, v0 = O(\n          v0,\n          I,\n          P,\n          p,\n          B\n        ) ? 1 : 0, v0 != 0)\n          a = o.part2_3_length, I = P, o.assign(p), N = 0, y1.arraycopy(d, 0, H, 0, 576);\n        else if (M.full_outer_loop == 0 && (++N > E && I.over_count == 0 || M.noise_shaping_amp == 3 && L && N > 30 || M.noise_shaping_amp == 3 && L && p.global_gain - V > 15))\n          break;\n      } while (p.global_gain + p.scalefac_scale < 255);\n      M.noise_shaping_amp == 3 ? L ? S = !0 : (p.assign(o), y1.arraycopy(H, 0, d, 0, 576), N = 0, V = p.global_gain, L = !0) : S = !0;\n    }\n    return U1(o.global_gain + o.scalefac_scale <= 255), R.VBR == _a.vbr_rh || R.VBR == _a.vbr_mtrh ? y1.arraycopy(H, 0, d, 0, 576) : M.substep_shaping & 1 && trancate_smallspectrums(M, o, u, d), I.over_count;\n  }, this.iteration_finish_one = function(R, o, u) {\n    var d = R.l3_side, e = d.tt[o][u];\n    u0.best_scalefac_store(R, o, u, d), R.use_best_huffman == 1 && u0.best_huffman_divide(R, e), Z.ResvAdjust(R, e);\n  }, this.VBR_encode_granule = function(R, o, u, d, e, l, M) {\n    var p = R.internal_flags, H = new la(), B = K1(576), I = M, v0 = M + 1, b = (M + l) / 2, a, S, L = 0, V = p.sfb21_extra;\n    U1(I <= LameInternalFlags.MAX_BITS_PER_CHANNEL), X1.fill(H.l3_enc, 0);\n    do\n      b > I - 42 ? p.sfb21_extra = !1 : p.sfb21_extra = V, S = outer_loop(R, o, u, d, e, b), S <= 0 ? (L = 1, v0 = o.part2_3_length, H.assign(o), y1.arraycopy(d, 0, B, 0, 576), M = v0 - 32, a = M - l, b = (M + l) / 2) : (l = b + 32, a = M - l, b = (M + l) / 2, L != 0 && (L = 2, o.assign(H), y1.arraycopy(B, 0, d, 0, 576)));\n    while (a > 12);\n    p.sfb21_extra = V, L == 2 && y1.arraycopy(H.l3_enc, 0, o.l3_enc, 0, 576), U1(o.part2_3_length <= I);\n  }, this.get_framebits = function(R, o) {\n    var u = R.internal_flags;\n    u.bitrate_index = u.VBR_min_bitrate;\n    var d = w.getframebits(R);\n    u.bitrate_index = 1, d = w.getframebits(R);\n    for (var e = 1; e <= u.VBR_max_bitrate; e++) {\n      u.bitrate_index = e;\n      var l = new MeanBits(d);\n      o[e] = Z.ResvFrameBegin(R, l), d = l.bits;\n    }\n  }, this.VBR_old_prepare = function(R, o, u, d, e, l, M, p, H) {\n    var B = R.internal_flags, I, v0 = 0, b = 1, a = 0;\n    B.bitrate_index = B.VBR_max_bitrate;\n    var S = Z.ResvFrameBegin(R, new MeanBits(0)) / B.mode_gr;\n    get_framebits(R, l);\n    for (var L = 0; L < B.mode_gr; L++) {\n      var V = X.on_pe(R, o, p[L], S, L, 0);\n      B.mode_ext == D0.MPG_MD_MS_LR && (ms_convert(B.l3_side, L), X.reduce_side(p[L], u[L], S, V));\n      for (var N = 0; N < B.channels_out; ++N) {\n        var P = B.l3_side.tt[L][N];\n        P.block_type != D0.SHORT_TYPE ? (v0 = 1.28 / (1 + Math.exp(3.5 - o[L][N] / 300)) - 0.05, I = B.PSY.mask_adjust - v0) : (v0 = 2.56 / (1 + Math.exp(3.5 - o[L][N] / 300)) - 0.14, I = B.PSY.mask_adjust_short - v0), B.masking_lower = Math.pow(\n          10,\n          I * 0.1\n        ), init_outer_loop(B, P), H[L][N] = X.calc_xmin(\n          R,\n          d[L][N],\n          P,\n          e[L][N]\n        ), H[L][N] != 0 && (b = 0), M[L][N] = 126, a += p[L][N];\n      }\n    }\n    for (var L = 0; L < B.mode_gr; L++)\n      for (var N = 0; N < B.channels_out; N++)\n        a > l[B.VBR_max_bitrate] && (p[L][N] *= l[B.VBR_max_bitrate], p[L][N] /= a), M[L][N] > p[L][N] && (M[L][N] = p[L][N]);\n    return b;\n  }, this.bitpressure_strategy = function(R, o, u, d) {\n    for (var e = 0; e < R.mode_gr; e++)\n      for (var l = 0; l < R.channels_out; l++) {\n        for (var M = R.l3_side.tt[e][l], p = o[e][l], H = 0, B = 0; B < M.psy_lmax; B++)\n          p[H++] *= 1 + 0.029 * B * B / D0.SBMAX_l / D0.SBMAX_l;\n        if (M.block_type == D0.SHORT_TYPE)\n          for (var B = M.sfb_smin; B < D0.SBMAX_s; B++)\n            p[H++] *= 1 + 0.029 * B * B / D0.SBMAX_s / D0.SBMAX_s, p[H++] *= 1 + 0.029 * B * B / D0.SBMAX_s / D0.SBMAX_s, p[H++] *= 1 + 0.029 * B * B / D0.SBMAX_s / D0.SBMAX_s;\n        d[e][l] = 0 | Math.max(\n          u[e][l],\n          0.9 * d[e][l]\n        );\n      }\n  }, this.VBR_new_prepare = function(R, o, u, d, e, l) {\n    var M = R.internal_flags, p = 1, H = 0, B = 0, I;\n    if (R.free_format) {\n      M.bitrate_index = 0;\n      var v0 = new MeanBits(H);\n      I = Z.ResvFrameBegin(R, v0), H = v0.bits, e[0] = I;\n    } else {\n      M.bitrate_index = M.VBR_max_bitrate;\n      var v0 = new MeanBits(H);\n      Z.ResvFrameBegin(R, v0), H = v0.bits, get_framebits(R, e), I = e[M.VBR_max_bitrate];\n    }\n    for (var b = 0; b < M.mode_gr; b++) {\n      X.on_pe(R, o, l[b], H, b, 0), M.mode_ext == D0.MPG_MD_MS_LR && ms_convert(M.l3_side, b);\n      for (var a = 0; a < M.channels_out; ++a) {\n        var S = M.l3_side.tt[b][a];\n        M.masking_lower = Math.pow(\n          10,\n          M.PSY.mask_adjust * 0.1\n        ), init_outer_loop(M, S), X.calc_xmin(\n          R,\n          u[b][a],\n          S,\n          d[b][a]\n        ) != 0 && (p = 0), B += l[b][a];\n      }\n    }\n    for (var b = 0; b < M.mode_gr; b++)\n      for (var a = 0; a < M.channels_out; a++)\n        B > I && (l[b][a] *= I, l[b][a] /= B);\n    return p;\n  }, this.calc_target_bits = function(R, o, u, d, e, l) {\n    var M = R.internal_flags, p = M.l3_side, H, B, I, v0, b = 0;\n    M.bitrate_index = M.VBR_max_bitrate;\n    var a = new MeanBits(b);\n    for (l[0] = Z.ResvFrameBegin(R, a), b = a.bits, M.bitrate_index = 1, b = w.getframebits(R) - M.sideinfo_len * 8, e[0] = b / (M.mode_gr * M.channels_out), b = R.VBR_mean_bitrate_kbps * R.framesize * 1e3, M.substep_shaping & 1 && (b *= 1.09), b /= R.out_samplerate, b -= M.sideinfo_len * 8, b /= M.mode_gr * M.channels_out, H = 0.93 + 0.07 * (11 - R.compression_ratio) / (11 - 5.5), H < 0.9 && (H = 0.9), H > 1 && (H = 1), B = 0; B < M.mode_gr; B++) {\n      var S = 0;\n      for (I = 0; I < M.channels_out; I++) {\n        if (d[B][I] = int(H * b), o[B][I] > 700) {\n          var L = int((o[B][I] - 700) / 1.4), V = p.tt[B][I];\n          d[B][I] = int(H * b), V.block_type == D0.SHORT_TYPE && L < b / 2 && (L = b / 2), L > b * 3 / 2 ? L = b * 3 / 2 : L < 0 && (L = 0), d[B][I] += L;\n        }\n        d[B][I] > LameInternalFlags.MAX_BITS_PER_CHANNEL && (d[B][I] = LameInternalFlags.MAX_BITS_PER_CHANNEL), S += d[B][I];\n      }\n      if (S > LameInternalFlags.MAX_BITS_PER_GRANULE)\n        for (I = 0; I < M.channels_out; ++I)\n          d[B][I] *= LameInternalFlags.MAX_BITS_PER_GRANULE, d[B][I] /= S;\n    }\n    if (M.mode_ext == D0.MPG_MD_MS_LR)\n      for (B = 0; B < M.mode_gr; B++)\n        X.reduce_side(\n          d[B],\n          u[B],\n          b * M.channels_out,\n          LameInternalFlags.MAX_BITS_PER_GRANULE\n        );\n    for (v0 = 0, B = 0; B < M.mode_gr; B++)\n      for (I = 0; I < M.channels_out; I++)\n        d[B][I] > LameInternalFlags.MAX_BITS_PER_CHANNEL && (d[B][I] = LameInternalFlags.MAX_BITS_PER_CHANNEL), v0 += d[B][I];\n    if (v0 > l[0])\n      for (B = 0; B < M.mode_gr; B++)\n        for (I = 0; I < M.channels_out; I++)\n          d[B][I] *= l[0], d[B][I] /= v0;\n  };\n}\nvar P2 = $2, Z2 = Q0, oa = Z2.assert;\nfunction K2() {\n  var w;\n  this.setModules = function(Z) {\n    w = Z;\n  }, this.ResvFrameBegin = function(Z, X) {\n    var z = Z.internal_flags, u0, W = z.l3_side, Q = w.getframebits(Z);\n    X.bits = (Q - z.sideinfo_len * 8) / z.mode_gr;\n    var D = 8 * 256 * z.mode_gr - 8;\n    Z.brate > 320 ? u0 = 8 * int(Z.brate * 1e3 / (Z.out_samplerate / 1152) / 8 + 0.5) : (u0 = 8 * 1440, Z.strict_ISO && (u0 = 8 * int(32e4 / (Z.out_samplerate / 1152) / 8 + 0.5))), z.ResvMax = u0 - Q, z.ResvMax > D && (z.ResvMax = D), (z.ResvMax < 0 || Z.disable_reservoir) && (z.ResvMax = 0);\n    var g = X.bits * z.mode_gr + Math.min(z.ResvSize, z.ResvMax);\n    return g > u0 && (g = u0), oa(z.ResvMax % 8 == 0), oa(z.ResvMax >= 0), W.resvDrain_pre = 0, z.pinfo != null && (z.pinfo.mean_bits = X.bits / 2, z.pinfo.resvsize = z.ResvSize), g;\n  }, this.ResvMaxBits = function(Z, X, z, u0) {\n    var W = Z.internal_flags, Q, D = W.ResvSize, g = W.ResvMax;\n    u0 != 0 && (D += X), W.substep_shaping & 1 && (g *= 0.9), z.bits = X, D * 10 > g * 9 ? (Q = D - g * 9 / 10, z.bits += Q, W.substep_shaping |= 128) : (Q = 0, W.substep_shaping &= 127, !Z.disable_reservoir && !(W.substep_shaping & 1) && (z.bits -= 0.1 * X));\n    var f0 = D < W.ResvMax * 6 / 10 ? D : W.ResvMax * 6 / 10;\n    return f0 -= Q, f0 < 0 && (f0 = 0), f0;\n  }, this.ResvAdjust = function(Z, X) {\n    Z.ResvSize -= X.part2_3_length + X.part2_length;\n  }, this.ResvFrameEnd = function(Z, X) {\n    var z, u0 = Z.l3_side;\n    Z.ResvSize += X * Z.mode_gr;\n    var W = 0;\n    u0.resvDrain_post = 0, u0.resvDrain_pre = 0, (z = Z.ResvSize % 8) != 0 && (W += z), z = Z.ResvSize - W - Z.ResvMax, z > 0 && (W += z);\n    {\n      var Q = Math.min(u0.main_data_begin * 8, W) / 8;\n      u0.resvDrain_pre += 8 * Q, W -= 8 * Q, Z.ResvSize -= 8 * Q, u0.main_data_begin -= Q;\n    }\n    u0.resvDrain_post += W, Z.ResvSize -= W;\n  };\n}\nvar U2 = K2;\nfunction Q2() {\n  var w = \"http://www.mp3dev.org/\", Z = 3, X = 98, z = 4, u0 = 0, W = 93;\n  this.getLameVersion = function() {\n    return Z + \".\" + X + \".\" + z;\n  }, this.getLameShortVersion = function() {\n    return Z + \".\" + X + \".\" + z;\n  }, this.getLameVeryShortVersion = function() {\n    return \"LAME\" + Z + \".\" + X + \"r\";\n  }, this.getPsyVersion = function() {\n    return u0 + \".\" + W;\n  }, this.getLameUrl = function() {\n    return w;\n  }, this.getLameOsBitness = function() {\n    return \"32bits\";\n  };\n}\nvar W2 = Q2, D1 = Q0, j2 = D1.System, Ie = D1.VbrMode, ha = D1.ShortBlock, z2 = D1.Arrays, te = D1.new_byte, J2 = D1.assert;\nQ1.NUMTOCENTRIES = 100;\nQ1.MAXFRAMESIZE = 2880;\nfunction Q1() {\n  var w, Z, X;\n  this.setModules = function(b, a, S) {\n    w = b, Z = a, X = S;\n  };\n  var z = 1, u0 = 2, W = 4, Q = 8, D = Q1.NUMTOCENTRIES, g = Q1.MAXFRAMESIZE, f0 = D + 4 + 4 + 4 + 4 + 4, A = f0 + 9 + 1 + 1 + 8 + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2, m = 128, O = 64, s0 = 32, K = null, t0 = \"Xing\", U = \"Info\", R = [\n    0,\n    49345,\n    49537,\n    320,\n    49921,\n    960,\n    640,\n    49729,\n    50689,\n    1728,\n    1920,\n    51009,\n    1280,\n    50625,\n    50305,\n    1088,\n    52225,\n    3264,\n    3456,\n    52545,\n    3840,\n    53185,\n    52865,\n    3648,\n    2560,\n    51905,\n    52097,\n    2880,\n    51457,\n    2496,\n    2176,\n    51265,\n    55297,\n    6336,\n    6528,\n    55617,\n    6912,\n    56257,\n    55937,\n    6720,\n    7680,\n    57025,\n    57217,\n    8e3,\n    56577,\n    7616,\n    7296,\n    56385,\n    5120,\n    54465,\n    54657,\n    5440,\n    55041,\n    6080,\n    5760,\n    54849,\n    53761,\n    4800,\n    4992,\n    54081,\n    4352,\n    53697,\n    53377,\n    4160,\n    61441,\n    12480,\n    12672,\n    61761,\n    13056,\n    62401,\n    62081,\n    12864,\n    13824,\n    63169,\n    63361,\n    14144,\n    62721,\n    13760,\n    13440,\n    62529,\n    15360,\n    64705,\n    64897,\n    15680,\n    65281,\n    16320,\n    16e3,\n    65089,\n    64001,\n    15040,\n    15232,\n    64321,\n    14592,\n    63937,\n    63617,\n    14400,\n    10240,\n    59585,\n    59777,\n    10560,\n    60161,\n    11200,\n    10880,\n    59969,\n    60929,\n    11968,\n    12160,\n    61249,\n    11520,\n    60865,\n    60545,\n    11328,\n    58369,\n    9408,\n    9600,\n    58689,\n    9984,\n    59329,\n    59009,\n    9792,\n    8704,\n    58049,\n    58241,\n    9024,\n    57601,\n    8640,\n    8320,\n    57409,\n    40961,\n    24768,\n    24960,\n    41281,\n    25344,\n    41921,\n    41601,\n    25152,\n    26112,\n    42689,\n    42881,\n    26432,\n    42241,\n    26048,\n    25728,\n    42049,\n    27648,\n    44225,\n    44417,\n    27968,\n    44801,\n    28608,\n    28288,\n    44609,\n    43521,\n    27328,\n    27520,\n    43841,\n    26880,\n    43457,\n    43137,\n    26688,\n    30720,\n    47297,\n    47489,\n    31040,\n    47873,\n    31680,\n    31360,\n    47681,\n    48641,\n    32448,\n    32640,\n    48961,\n    32e3,\n    48577,\n    48257,\n    31808,\n    46081,\n    29888,\n    30080,\n    46401,\n    30464,\n    47041,\n    46721,\n    30272,\n    29184,\n    45761,\n    45953,\n    29504,\n    45313,\n    29120,\n    28800,\n    45121,\n    20480,\n    37057,\n    37249,\n    20800,\n    37633,\n    21440,\n    21120,\n    37441,\n    38401,\n    22208,\n    22400,\n    38721,\n    21760,\n    38337,\n    38017,\n    21568,\n    39937,\n    23744,\n    23936,\n    40257,\n    24320,\n    40897,\n    40577,\n    24128,\n    23040,\n    39617,\n    39809,\n    23360,\n    39169,\n    22976,\n    22656,\n    38977,\n    34817,\n    18624,\n    18816,\n    35137,\n    19200,\n    35777,\n    35457,\n    19008,\n    19968,\n    36545,\n    36737,\n    20288,\n    36097,\n    19904,\n    19584,\n    35905,\n    17408,\n    33985,\n    34177,\n    17728,\n    34561,\n    18368,\n    18048,\n    34369,\n    33281,\n    17088,\n    17280,\n    33601,\n    16640,\n    33217,\n    32897,\n    16448\n  ];\n  function o(b, a) {\n    if (b.nVbrNumFrames++, b.sum += a, b.seen++, !(b.seen < b.want) && (b.pos < b.size && (b.bag[b.pos] = b.sum, b.pos++, b.seen = 0), b.pos == b.size)) {\n      for (var S = 1; S < b.size; S += 2)\n        b.bag[S / 2] = b.bag[S];\n      b.want *= 2, b.pos /= 2;\n    }\n  }\n  function u(b, a) {\n    if (!(b.pos <= 0))\n      for (var S = 1; S < D; ++S) {\n        var L = S / D, V, N, P = 0 | Math.floor(L * b.pos);\n        P > b.pos - 1 && (P = b.pos - 1), V = b.bag[P], N = b.sum;\n        var E = 0 | 256 * V / N;\n        E > 255 && (E = 255), a[S] = 255 & E;\n      }\n  }\n  this.addVbrFrame = function(b) {\n    var a = b.internal_flags, S = Tables.bitrate_table[b.version][a.bitrate_index];\n    J2(a.VBR_seek_table.bag != null), o(a.VBR_seek_table, S);\n  };\n  function d(b, a) {\n    var S = b[a + 0] & 255;\n    return S <<= 8, S |= b[a + 1] & 255, S <<= 8, S |= b[a + 2] & 255, S <<= 8, S |= b[a + 3] & 255, S;\n  }\n  function e(b, a, S) {\n    b[a + 0] = 255 & (S >> 24 & 255), b[a + 1] = 255 & (S >> 16 & 255), b[a + 2] = 255 & (S >> 8 & 255), b[a + 3] = 255 & (S & 255);\n  }\n  function l(b, a, S) {\n    b[a + 0] = 255 & (S >> 8 & 255), b[a + 1] = 255 & (S & 255);\n  }\n  function M(b, a) {\n    return new String(b, a, t0.length(), K).equals(t0) || new String(b, a, U.length(), K).equals(U);\n  }\n  function p(b, a, S) {\n    return 255 & (b << a | S & ~(-1 << a));\n  }\n  function H(b, a) {\n    var S = b.internal_flags;\n    a[0] = p(a[0], 8, 255), a[1] = p(a[1], 3, 7), a[1] = p(\n      a[1],\n      1,\n      b.out_samplerate < 16e3 ? 0 : 1\n    ), a[1] = p(a[1], 1, b.version), a[1] = p(a[1], 2, 4 - 3), a[1] = p(a[1], 1, b.error_protection ? 0 : 1), a[2] = p(a[2], 4, S.bitrate_index), a[2] = p(a[2], 2, S.samplerate_index), a[2] = p(a[2], 1, 0), a[2] = p(a[2], 1, b.extension), a[3] = p(a[3], 2, b.mode.ordinal()), a[3] = p(a[3], 2, S.mode_ext), a[3] = p(a[3], 1, b.copyright), a[3] = p(a[3], 1, b.original), a[3] = p(a[3], 2, b.emphasis), a[0] = 255;\n    var L = 255 & (a[1] & 241), V;\n    b.version == 1 ? V = m : b.out_samplerate < 16e3 ? V = s0 : V = O, b.VBR == Ie.vbr_off && (V = b.brate);\n    var N;\n    b.free_format ? N = 0 : N = 255 & 16 * w.BitrateIndex(\n      V,\n      b.version,\n      b.out_samplerate\n    ), b.version == 1 ? (a[1] = 255 & (L | 10), L = 255 & (a[2] & 13), a[2] = 255 & (N | L)) : (a[1] = 255 & (L | 2), L = 255 & (a[2] & 13), a[2] = 255 & (N | L));\n  }\n  this.getVbrTag = function(b) {\n    var a = new VBRTagData(), S = 0;\n    a.flags = 0;\n    var L = b[S + 1] >> 3 & 1, V = b[S + 2] >> 2 & 3, N = b[S + 3] >> 6 & 3, P = b[S + 2] >> 4 & 15;\n    if (P = Tables.bitrate_table[L][P], b[S + 1] >> 4 == 14 ? a.samprate = Tables.samplerate_table[2][V] : a.samprate = Tables.samplerate_table[L][V], L != 0 ? N != 3 ? S += 32 + 4 : S += 17 + 4 : N != 3 ? S += 17 + 4 : S += 9 + 4, !M(b, S))\n      return null;\n    S += 4, a.hId = L;\n    var E = a.flags = d(b, S);\n    if (S += 4, E & z && (a.frames = d(b, S), S += 4), E & u0 && (a.bytes = d(b, S), S += 4), E & W) {\n      if (a.toc != null)\n        for (var i = 0; i < D; i++)\n          a.toc[i] = b[S + i];\n      S += D;\n    }\n    a.vbrScale = -1, E & Q && (a.vbrScale = d(b, S), S += 4), a.headersize = (L + 1) * 72e3 * P / a.samprate, S += 21;\n    var s = b[S + 0] << 4;\n    s += b[S + 1] >> 4;\n    var r = (b[S + 1] & 15) << 8;\n    return r += b[S + 2] & 255, (s < 0 || s > 3e3) && (s = -1), (r < 0 || r > 3e3) && (r = -1), a.encDelay = s, a.encPadding = r, a;\n  }, this.InitVbrTag = function(b) {\n    var a = b.internal_flags, S;\n    b.version == 1 ? S = m : b.out_samplerate < 16e3 ? S = s0 : S = O, b.VBR == Ie.vbr_off && (S = b.brate);\n    var L = (b.version + 1) * 72e3 * S / b.out_samplerate, V = a.sideinfo_len + A;\n    if (a.VBR_seek_table.TotalFrameSize = L, L < V || L > g) {\n      b.bWriteVbrTag = !1;\n      return;\n    }\n    a.VBR_seek_table.nVbrNumFrames = 0, a.VBR_seek_table.nBytesWritten = 0, a.VBR_seek_table.sum = 0, a.VBR_seek_table.seen = 0, a.VBR_seek_table.want = 1, a.VBR_seek_table.pos = 0, a.VBR_seek_table.bag == null && (a.VBR_seek_table.bag = new int[400](), a.VBR_seek_table.size = 400);\n    var N = te(g);\n    H(b, N);\n    for (var P = a.VBR_seek_table.TotalFrameSize, E = 0; E < P; ++E)\n      Z.add_dummy_byte(b, N[E] & 255, 1);\n  };\n  function B(b, a) {\n    var S = a ^ b;\n    return a = a >> 8 ^ R[S & 255], a;\n  }\n  this.updateMusicCRC = function(b, a, S, L) {\n    for (var V = 0; V < L; ++V)\n      b[0] = B(a[S + V], b[0]);\n  };\n  function I(b, a, S, L, V) {\n    var N = b.internal_flags, P = 0, E = b.encoder_delay, i = b.encoder_padding, s = 100 - 10 * b.VBR_q - b.quality, r = X.getLameVeryShortVersion(), n, f = 0, Y, J = [1, 5, 3, 2, 4, 0, 3], T = 0 | (b.lowpassfreq / 100 + 0.5 > 255 ? 255 : b.lowpassfreq / 100 + 0.5), q = 0, i0 = 0, h0 = 0, d0 = b.internal_flags.noise_shaping, M0 = 0, R0 = 0, A0 = 0, w0 = 0, $0 = 0, f1 = (b.exp_nspsytune & 1) != 0, t = (b.exp_nspsytune & 2) != 0, _ = !1, S0 = !1, E0 = b.internal_flags.nogap_total, V0 = b.internal_flags.nogap_current, H0 = b.ATHtype, y0 = 0, T0;\n    switch (b.VBR) {\n      case vbr_abr:\n        T0 = b.VBR_mean_bitrate_kbps;\n        break;\n      case vbr_off:\n        T0 = b.brate;\n        break;\n      default:\n        T0 = b.VBR_min_bitrate_kbps;\n    }\n    switch (b.VBR.ordinal() < J.length ? n = J[b.VBR.ordinal()] : n = 0, Y = 16 * f + n, N.findReplayGain && (N.RadioGain > 510 && (N.RadioGain = 510), N.RadioGain < -510 && (N.RadioGain = -510), i0 = 8192, i0 |= 3072, N.RadioGain >= 0 ? i0 |= N.RadioGain : (i0 |= 512, i0 |= -N.RadioGain)), N.findPeakSample && (q = Math.abs(0 | N.PeakSample / 32767 * Math.pow(2, 23) + 0.5)), E0 != -1 && (V0 > 0 && (S0 = !0), V0 < E0 - 1 && (_ = !0)), y0 = H0 + ((f1 ? 1 : 0) << 4) + ((t ? 1 : 0) << 5) + ((_ ? 1 : 0) << 6) + ((S0 ? 1 : 0) << 7), s < 0 && (s = 0), b.mode) {\n      case MONO:\n        M0 = 0;\n        break;\n      case STEREO:\n        M0 = 1;\n        break;\n      case DUAL_CHANNEL:\n        M0 = 2;\n        break;\n      case JOINT_STEREO:\n        b.force_ms ? M0 = 4 : M0 = 3;\n        break;\n      case NOT_SET:\n      default:\n        M0 = 7;\n        break;\n    }\n    b.in_samplerate <= 32e3 ? A0 = 0 : b.in_samplerate == 48e3 ? A0 = 2 : b.in_samplerate > 48e3 ? A0 = 3 : A0 = 1, (b.short_blocks == ha.short_block_forced || b.short_blocks == ha.short_block_dispensed || b.lowpassfreq == -1 && b.highpassfreq == -1 || /* \"-k\" */\n    b.scale_left < b.scale_right || b.scale_left > b.scale_right || b.disable_reservoir && b.brate < 320 || b.noATH || b.ATHonly || H0 == 0 || b.in_samplerate <= 32e3) && (R0 = 1), w0 = d0 + (M0 << 2) + (R0 << 5) + (A0 << 6), $0 = N.nMusicCRC, e(S, L + P, s), P += 4;\n    for (var F0 = 0; F0 < 9; F0++)\n      S[L + P + F0] = 255 & r.charAt(F0);\n    P += 9, S[L + P] = 255 & Y, P++, S[L + P] = 255 & T, P++, e(\n      S,\n      L + P,\n      q\n    ), P += 4, l(\n      S,\n      L + P,\n      i0\n    ), P += 2, l(\n      S,\n      L + P,\n      h0\n    ), P += 2, S[L + P] = 255 & y0, P++, T0 >= 255 ? S[L + P] = 255 : S[L + P] = 255 & T0, P++, S[L + P] = 255 & E >> 4, S[L + P + 1] = 255 & (E << 4) + (i >> 8), S[L + P + 2] = 255 & i, P += 3, S[L + P] = 255 & w0, P++, S[L + P++] = 0, l(S, L + P, b.preset), P += 2, e(S, L + P, a), P += 4, l(S, L + P, $0), P += 2;\n    for (var I0 = 0; I0 < P; I0++)\n      V = B(S[L + I0], V);\n    return l(S, L + P, V), P += 2, P;\n  }\n  function v0(b) {\n    b.seek(0);\n    var a = te(10);\n    b.readFully(a);\n    var S;\n    return new String(a, \"ISO-8859-1\").startsWith(\"ID3\") ? S = 0 : S = ((a[6] & 127) << 21 | (a[7] & 127) << 14 | (a[8] & 127) << 7 | a[9] & 127) + a.length, S;\n  }\n  this.getLameTagFrame = function(b, a) {\n    var S = b.internal_flags;\n    if (!b.bWriteVbrTag || S.Class_ID != Lame.LAME_ID || S.VBR_seek_table.pos <= 0)\n      return 0;\n    if (a.length < S.VBR_seek_table.TotalFrameSize)\n      return S.VBR_seek_table.TotalFrameSize;\n    z2.fill(a, 0, S.VBR_seek_table.TotalFrameSize, 0), H(b, a);\n    var L = te(D);\n    if (b.free_format)\n      for (var V = 1; V < D; ++V)\n        L[V] = 255 & 255 * V / 100;\n    else\n      u(S.VBR_seek_table, L);\n    var N = S.sideinfo_len;\n    b.error_protection && (N -= 2), b.VBR == Ie.vbr_off ? (a[N++] = 255 & U.charAt(0), a[N++] = 255 & U.charAt(1), a[N++] = 255 & U.charAt(2), a[N++] = 255 & U.charAt(3)) : (a[N++] = 255 & t0.charAt(0), a[N++] = 255 & t0.charAt(1), a[N++] = 255 & t0.charAt(2), a[N++] = 255 & t0.charAt(3)), e(a, N, z + u0 + W + Q), N += 4, e(a, N, S.VBR_seek_table.nVbrNumFrames), N += 4;\n    var P = S.VBR_seek_table.nBytesWritten + S.VBR_seek_table.TotalFrameSize;\n    e(a, N, 0 | P), N += 4, j2.arraycopy(L, 0, a, N, L.length), N += L.length, b.error_protection && Z.CRC_writeheader(S, a);\n    for (var E = 0, V = 0; V < N; V++)\n      E = B(a[V], E);\n    return N += I(b, P, a, N, E), S.VBR_seek_table.TotalFrameSize;\n  }, this.putVbrTag = function(b, a) {\n    var S = b.internal_flags;\n    if (S.VBR_seek_table.pos <= 0 || (a.seek(a.length()), a.length() == 0))\n      return -1;\n    var L = v0(a);\n    a.seek(L);\n    var V = te(g), N = getLameTagFrame(b, V);\n    return N > V.length ? -1 : (N < 1 || a.write(V, 0, N), 0);\n  };\n}\nvar g2 = Q1, Fa = Q0, ua = Fa.new_byte, er = Fa.assert, ar = Oe(), rr = V2, tr = Na, sr = Va(), ir = P2, nr = Oa(), _r = U2, lr = j1, vr = Ve();\nt1();\nvar or = W2, hr = g2;\nfunction ur() {\n  this.setModules = function(w, Z) {\n  };\n}\nfunction fr() {\n  this.setModules = function(w, Z, X) {\n  };\n}\nfunction mr() {\n}\nfunction br() {\n  this.setModules = function(w, Z) {\n  };\n}\nfunction cr(w, Z, X) {\n  arguments.length != 3 && (console.error(\"WARN: Mp3Encoder(channels, samplerate, kbps) not specified\"), w = 1, Z = 44100, X = 128);\n  var z = new ar(), u0 = new ur(), W = new tr(), Q = new vr(), D = new rr(), g = new sr(), f0 = new ir(), A = new hr(), m = new or(), O = new br(), s0 = new _r(), K = new nr(), t0 = new fr(), U = new mr();\n  z.setModules(W, Q, D, g, f0, A, m, O, U), Q.setModules(W, U, m, A), O.setModules(Q, m), D.setModules(z), f0.setModules(Q, s0, g, K), g.setModules(K, s0, z.enc.psy), s0.setModules(Q), K.setModules(g), A.setModules(z, Q, m), u0.setModules(t0, U), t0.setModules(m, O, D);\n  var R = z.lame_init();\n  R.num_channels = w, R.in_samplerate = Z, R.brate = X, R.mode = lr.STEREO, R.quality = 3, R.bWriteVbrTag = !1, R.disable_reservoir = !0, R.write_id3tag_automatic = !1, z.lame_init_params(R);\n  var o = 1152, u = 0 | 1.25 * o + 7200, d = ua(u);\n  this.encodeBuffer = function(e, l) {\n    w == 1 && (l = e), er(e.length == l.length), e.length > o && (o = e.length, u = 0 | 1.25 * o + 7200, d = ua(u));\n    var M = z.lame_encode_buffer(R, e, l, e.length, d, 0, u);\n    return new Int8Array(d.subarray(0, M));\n  }, this.flush = function() {\n    var e = z.lame_encode_flush(R, d, 0, u);\n    return new Int8Array(d.subarray(0, e));\n  };\n}\nfunction A1() {\n  this.dataOffset = 0, this.dataLen = 0, this.channels = 0, this.sampleRate = 0;\n}\nfunction _e(w) {\n  return w.charCodeAt(0) << 24 | w.charCodeAt(1) << 16 | w.charCodeAt(2) << 8 | w.charCodeAt(3);\n}\nA1.RIFF = _e(\"RIFF\");\nA1.WAVE = _e(\"WAVE\");\nA1.fmt_ = _e(\"fmt \");\nA1.data = _e(\"data\");\nA1.readHeader = function(w) {\n  var Z = new A1(), X = w.getUint32(0, !1);\n  if (A1.RIFF == X && (w.getUint32(4, !0), A1.WAVE == w.getUint32(8, !1) && A1.fmt_ == w.getUint32(12, !1))) {\n    var z = w.getUint32(16, !0), u0 = 16 + 4;\n    switch (z) {\n      case 16:\n      case 18:\n        Z.channels = w.getUint16(u0 + 2, !0), Z.sampleRate = w.getUint32(u0 + 4, !0);\n        break;\n      default:\n        throw \"extended fmt chunk not implemented\";\n    }\n    u0 += z;\n    for (var W = A1.data, Q = 0; W != X && (X = w.getUint32(u0, !1), Q = w.getUint32(u0 + 4, !0), W != X); )\n      u0 += Q + 8;\n    return Z.dataLen = Q, Z.dataOffset = u0 + 8, Z;\n  }\n};\nvar Sr = fa.Mp3Encoder = cr, dr = fa.WavHeader = A1;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@breezystack/lamejs/dist/lamejs.js\n"));

/***/ })

}]);